{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2","program":"/Users/itayeshkar/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","cssparser","--edition=2018","/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=ab33dc5d153d8de9","-C","extra-filename=-ab33dc5d153d8de9","--out-dir","/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/deps","-L","dependency=/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/deps","--extern","cssparser_macros=/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/deps/libcssparser_macros-f33a0d9c11d64a9e.dylib","--extern","dtoa_short=/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/deps/libdtoa_short-ee227b79c56906e8.rmeta","--extern","itoa=/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/deps/libitoa-afb630b3e2ce699e.rmeta","--extern","matches=/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/deps/libmatches-dd6231edd86304b7.rmeta","--extern","phf=/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/deps/libphf-ab219e2b3287f2c6.rmeta","--extern","smallvec=/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/deps/libsmallvec-2154f0d5095ee0dd.rmeta","--cap-lints","allow","--cfg","rustc_has_pr45225","--error-format=json","--sysroot","/Users/itayeshkar/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/deps/libcssparser-ab33dc5d153d8de9.rmeta"},"prelude":{"crate_id":{"name":"cssparser","disambiguator":[10978348881797628953,0]},"crate_root":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src","external_crates":[{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16128539464339909492,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5119190964148522055,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10836880961308110442,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9122960886372739080,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16262469955255852816,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6458319553461162962,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12001007181761242293,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17631836945948346775,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[14397519445266417684,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8668729914222175237,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6081650140881955662,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5498968616666872476,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2537156866219993108,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[16178185567501436822,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[3784531562979233881,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[17755498883195052578,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11111166150786070161,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[518337477295170700,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[6962753159787162907,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","num":20,"id":{"name":"cssparser_macros","disambiguator":[5879923840796191101,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","num":21,"id":{"name":"phf","disambiguator":[6440935502919969512,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","num":22,"id":{"name":"phf_shared","disambiguator":[10907927984954841608,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","num":23,"id":{"name":"siphasher","disambiguator":[10384189487554383464,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","num":24,"id":{"name":"proc_macro_hack","disambiguator":[6141146988405451846,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","num":25,"id":{"name":"phf_macros","disambiguator":[15089741578731657767,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/macros.rs","num":26,"id":{"name":"matches","disambiguator":[10984326985419907377,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","num":27,"id":{"name":"smallvec","disambiguator":[13021667124299685591,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","num":28,"id":{"name":"dtoa_short","disambiguator":[4877900043191944563,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","num":29,"id":{"name":"dtoa","disambiguator":[6676800660704278732,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","num":30,"id":{"name":"itoa","disambiguator":[3538039189491255795,0]}}],"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":206,"byte_end":3936,"line_start":5,"line_end":115,"column_start":1,"column_end":11}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":394},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":2399,"byte_end":2418,"line_start":71,"line_end":71,"column_start":5,"column_end":24},"alias_span":null,"name":"parse_color_keyword","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":2420,"byte_end":2433,"line_start":71,"line_end":71,"column_start":26,"column_end":39},"alias_span":null,"name":"AngleOrNumber","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1572},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":2435,"byte_end":2440,"line_start":71,"line_end":71,"column_start":41,"column_end":46},"alias_span":null,"name":"Color","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":365},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":2442,"byte_end":2462,"line_start":71,"line_end":71,"column_start":48,"column_end":68},"alias_span":null,"name":"ColorComponentParser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":351},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":2464,"byte_end":2482,"line_start":71,"line_end":71,"column_start":70,"column_end":88},"alias_span":null,"name":"NumberOrPercentage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1558},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":2484,"byte_end":2488,"line_start":71,"line_end":71,"column_start":90,"column_end":94},"alias_span":null,"name":"RGBA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":452},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":2520,"byte_end":2528,"line_start":73,"line_end":73,"column_start":28,"column_end":36},"alias_span":null,"name":"CowRcStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":521},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":2558,"byte_end":2577,"line_start":74,"line_end":74,"column_start":29,"column_end":48},"alias_span":null,"name":"stylesheet_encoding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":516},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":2579,"byte_end":2594,"line_start":74,"line_end":74,"column_start":50,"column_end":65},"alias_span":null,"name":"EncodingSupport","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":145},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":2635,"byte_end":2667,"line_start":76,"line_end":76,"column_start":24,"column_end":56},"alias_span":null,"name":"_cssparser_internal_to_lowercase","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":541},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":2689,"byte_end":2698,"line_start":77,"line_end":77,"column_start":21,"column_end":30},"alias_span":null,"name":"parse_nth","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1646},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":2724,"byte_end":2739,"line_start":78,"line_end":78,"column_start":25,"column_end":40},"alias_span":null,"name":"BasicParseError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1620},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":2741,"byte_end":2760,"line_start":78,"line_end":78,"column_start":42,"column_end":61},"alias_span":null,"name":"BasicParseErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1687},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":2762,"byte_end":2772,"line_start":78,"line_end":78,"column_start":63,"column_end":73},"alias_span":null,"name":"ParseError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1662},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":2774,"byte_end":2788,"line_start":78,"line_end":78,"column_start":75,"column_end":89},"alias_span":null,"name":"ParseErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":630},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":2815,"byte_end":2824,"line_start":79,"line_end":79,"column_start":25,"column_end":34},"alias_span":null,"name":"Delimiter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1726},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":2826,"byte_end":2836,"line_start":79,"line_end":79,"column_start":36,"column_end":46},"alias_span":null,"name":"Delimiters","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":621},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":2838,"byte_end":2844,"line_start":79,"line_end":79,"column_start":48,"column_end":54},"alias_span":null,"name":"Parser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":607},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":2846,"byte_end":2857,"line_start":79,"line_end":79,"column_start":56,"column_end":67},"alias_span":null,"name":"ParserInput","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1611},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":2859,"byte_end":2870,"line_start":79,"line_end":79,"column_start":69,"column_end":80},"alias_span":null,"name":"ParserState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":188},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":2913,"byte_end":2928,"line_start":80,"line_end":80,"column_start":41,"column_end":56},"alias_span":null,"name":"parse_important","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":283},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":2930,"byte_end":2951,"line_start":80,"line_end":80,"column_start":58,"column_end":79},"alias_span":null,"name":"parse_one_declaration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":290},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":2994,"byte_end":3008,"line_start":81,"line_end":81,"column_start":41,"column_end":55},"alias_span":null,"name":"parse_one_rule","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":254},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":3010,"byte_end":3024,"line_start":81,"line_end":81,"column_start":57,"column_end":71},"alias_span":null,"name":"RuleListParser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":206},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":3067,"byte_end":3079,"line_start":82,"line_end":82,"column_start":41,"column_end":53},"alias_span":null,"name":"AtRuleParser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":191},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":3081,"byte_end":3091,"line_start":82,"line_end":82,"column_start":55,"column_end":65},"alias_span":null,"name":"AtRuleType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":217},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":3093,"byte_end":3112,"line_start":82,"line_end":82,"column_start":67,"column_end":86},"alias_span":null,"name":"QualifiedRuleParser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":3155,"byte_end":3176,"line_start":83,"line_end":83,"column_start":41,"column_end":62},"alias_span":null,"name":"DeclarationListParser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":200},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":3178,"byte_end":3195,"line_start":83,"line_end":83,"column_start":64,"column_end":81},"alias_span":null,"name":"DeclarationParser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":815},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":3226,"byte_end":3246,"line_start":84,"line_end":84,"column_start":29,"column_end":49},"alias_span":null,"name":"serialize_identifier","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":817},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":3248,"byte_end":3262,"line_start":84,"line_end":84,"column_start":51,"column_end":65},"alias_span":null,"name":"serialize_name","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":821},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":3264,"byte_end":3280,"line_start":84,"line_end":84,"column_start":67,"column_end":83},"alias_span":null,"name":"serialize_string","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":823},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":3311,"byte_end":3326,"line_start":85,"line_end":85,"column_start":29,"column_end":44},"alias_span":null,"name":"CssStringWriter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":799},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":3328,"byte_end":3333,"line_start":85,"line_end":85,"column_start":46,"column_end":51},"alias_span":null,"name":"ToCss","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1866},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":3335,"byte_end":3357,"line_start":85,"line_end":85,"column_start":53,"column_end":75},"alias_span":null,"name":"TokenSerializationType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1543},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":3387,"byte_end":3401,"line_start":86,"line_end":86,"column_start":28,"column_end":42},"alias_span":null,"name":"SourceLocation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1524},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":3403,"byte_end":3417,"line_start":86,"line_end":86,"column_start":44,"column_end":58},"alias_span":null,"name":"SourcePosition","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1525},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":3403,"byte_end":3417,"line_start":86,"line_end":86,"column_start":44,"column_end":58},"alias_span":null,"name":"SourcePosition","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1401},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":3419,"byte_end":3424,"line_start":86,"line_end":86,"column_start":60,"column_end":65},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1943},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":3457,"byte_end":3469,"line_start":87,"line_end":87,"column_start":31,"column_end":43},"alias_span":null,"name":"UnicodeRange","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":3497,"byte_end":3498,"line_start":88,"line_end":88,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"_cssparser_internal_max_len","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":0},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":3523,"byte_end":3526,"line_start":90,"line_end":90,"column_start":9,"column_end":12},"alias_span":null,"name":"_cssparser_internal_phf","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":206,"byte_end":3936,"line_start":5,"line_end":115,"column_start":1,"column_end":11},"name":"","qualname":"::","value":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":148},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":414},{"krate":0,"index":515},{"krate":0,"index":524},{"krate":0,"index":553},{"krate":0,"index":769},{"krate":0,"index":846}],"decl_id":null,"docs":"\nImplementation of [CSS Syntax Module Level 3](https://drafts.csswg.org/css-syntax/) for Rust.","sig":null,"attributes":[{"value":"crate_name = \"cssparser\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":206,"byte_end":234,"line_start":5,"line_end":5,"column_start":1,"column_end":29}},{"value":"crate_type = \"rlib\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":235,"byte_end":258,"line_start":6,"line_end":6,"column_start":1,"column_end":24}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":306,"byte_end":328,"line_start":8,"line_end":8,"column_start":1,"column_end":23}},{"value":"*\n\nImplementation of [CSS Syntax Module Level 3](https://drafts.csswg.org/css-syntax/) for Rust.\n\n# Input\n\nEverything is based on `Parser` objects, which borrow a `&str` input.\nIf you have bytes (from a file, the network, or something)\nand want to support character encodings other than UTF-8,\nsee the `stylesheet_encoding` function,\nwhich can be used together with rust-encoding or encoding-rs.\n\n# Conventions for parsing functions\n\n* Take (at least) a `input: &mut cssparser::Parser` parameter\n* Return `Result<_, ()>`\n* When returning `Ok(_)`,\n  the function must have consumed exactly the amount of input that represents the parsed value.\n* When returning `Err(())`, any amount of input may have been consumed.\n\nAs a consequence, when calling another parsing function, either:\n\n* Any `Err(())` return value must be propagated.\n  This happens by definition for tail calls,\n  and can otherwise be done with the `?` operator.\n* Or the call must be wrapped in a `Parser::try` call.\n  `try` takes a closure that takes a `Parser` and returns a `Result`,\n  calls it once,\n  and returns itself that same result.\n  If the result is `Err`,\n  it restores the position inside the input to the one saved before calling the closure.\n\nExamples:\n\n```{rust,ignore}\n// 'none' | <image>\nfn parse_background_image(context: &ParserContext, input: &mut Parser)\n                                    -> Result<Option<Image>, ()> {\n    if input.try_parse(|input| input.expect_ident_matching(\"none\")).is_ok() {\n        Ok(None)\n    } else {\n        Image::parse(context, input).map(Some)  // tail call\n    }\n}\n```\n\n```{rust,ignore}\n// [ <length> | <percentage> ] [ <length> | <percentage> ]?\nfn parse_border_spacing(_context: &ParserContext, input: &mut Parser)\n                          -> Result<(LengthOrPercentage, LengthOrPercentage), ()> {\n    let first = LengthOrPercentage::parse?;\n    let second = input.try_parse(LengthOrPercentage::parse).unwrap_or(first);\n    (first, second)\n}\n```\n\n*/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":330,"byte_end":2306,"line_start":10,"line_end":66,"column_start":1,"column_end":3}},{"value":"recursion_limit = \"200\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/lib.rs","byte_start":2308,"byte_end":2335,"line_start":68,"line_end":68,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":145},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/macros.rs","byte_start":9517,"byte_end":9549,"line_start":147,"line_end":147,"column_start":8,"column_end":40},"name":"_cssparser_internal_to_lowercase","qualname":"::macros::_cssparser_internal_to_lowercase","value":"fn _cssparser_internal_to_lowercase<'a>(&'a mut [MaybeUninit<u8>], &'a str)\n-> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail of match_ignore_ascii_case! and ascii_case_insensitive_phf_map! macros.","sig":null,"attributes":[{"value":"/ Implementation detail of match_ignore_ascii_case! and ascii_case_insensitive_phf_map! macros.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/macros.rs","byte_start":9112,"byte_end":9209,"line_start":139,"line_end":139,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/macros.rs","byte_start":9210,"byte_end":9213,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ **This function is not part of the public API. It can change or be removed between any verisons.**","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/macros.rs","byte_start":9214,"byte_end":9316,"line_start":141,"line_end":141,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/macros.rs","byte_start":9317,"byte_end":9320,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ If `input` is larger than buffer, return `None`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/macros.rs","byte_start":9321,"byte_end":9373,"line_start":143,"line_end":143,"column_start":1,"column_end":53}},{"value":"/ Otherwise, return `input` ASCII-lowercased, using `buffer` as temporary space if necessary.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/macros.rs","byte_start":9374,"byte_end":9469,"line_start":144,"line_end":144,"column_start":1,"column_end":96}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/macros.rs","byte_start":9485,"byte_end":9509,"line_start":146,"line_end":146,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":188},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":11770,"byte_end":11785,"line_start":16,"line_end":16,"column_start":8,"column_end":23},"name":"parse_important","qualname":"::rules_and_declarations::parse_important","value":"fn parse_important<'i, 't, '_>(&'_ mut Parser) -> Result<(), BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse `!important`.","sig":null,"attributes":[{"value":"/ Parse `!important`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":11602,"byte_end":11625,"line_start":12,"line_end":12,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":11626,"byte_end":11629,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Typical usage is `input.try_parse(parse_important).is_ok()`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":11630,"byte_end":11693,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ at the end of a `DeclarationParser::parse_value` implementation.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":11694,"byte_end":11762,"line_start":15,"line_end":15,"column_start":1,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":194},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":12344,"byte_end":12356,"line_start":29,"line_end":29,"column_start":5,"column_end":17},"name":"WithoutBlock","qualname":"::rules_and_declarations::AtRuleType::WithoutBlock","value":"AtRuleType::WithoutBlock(P)","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" The at-rule is expected to end with a `;` semicolon. Example: `@import`.","sig":null,"attributes":[{"value":"/ The at-rule is expected to end with a `;` semicolon. Example: `@import`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":12137,"byte_end":12213,"line_start":25,"line_end":25,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":12218,"byte_end":12221,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ The value is the representation of all data of the rule which would be","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":12226,"byte_end":12300,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ handled in rule_without_block.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":12305,"byte_end":12339,"line_start":28,"line_end":28,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":196},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":12357,"byte_end":12358,"line_start":29,"line_end":29,"column_start":18,"column_end":19},"name":"0","qualname":"::rules_and_declarations::AtRuleType::WithoutBlock::0","value":"P","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":197},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":12534,"byte_end":12543,"line_start":34,"line_end":34,"column_start":5,"column_end":14},"name":"WithBlock","qualname":"::rules_and_declarations::AtRuleType::WithBlock","value":"AtRuleType::WithBlock(PB)","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" The at-rule is expected to have a a `{ /* ... */ }` block. Example: `@media`","sig":null,"attributes":[{"value":"/ The at-rule is expected to have a a `{ /* ... */ }` block. Example: `@media`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":12366,"byte_end":12446,"line_start":31,"line_end":31,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":12451,"byte_end":12454,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ The value is the representation of the \"prelude\" part of the rule.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":12459,"byte_end":12529,"line_start":33,"line_end":33,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":199},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":12544,"byte_end":12546,"line_start":34,"line_end":34,"column_start":15,"column_end":17},"name":"0","qualname":"::rules_and_declarations::AtRuleType::WithBlock::0","value":"PB","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":191},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":12113,"byte_end":12123,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"name":"AtRuleType","qualname":"::rules_and_declarations::AtRuleType","value":"enum AtRuleType<P, PB> { WithoutBlock(P), WithBlock(PB), }","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":197}],"decl_id":null,"docs":" The return value for `AtRuleParser::parse_prelude`.\n Indicates whether the at-rule is expected to have a `{ /* ... */ }` block\n or end with a `;` semicolon.\n","sig":null,"attributes":[{"value":"/ The return value for `AtRuleParser::parse_prelude`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":11937,"byte_end":11992,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/ Indicates whether the at-rule is expected to have a `{ /* ... */ }` block","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":11993,"byte_end":12070,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ or end with a `;` semicolon.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":12071,"byte_end":12103,"line_start":23,"line_end":23,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":200},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":12774,"byte_end":12791,"line_start":41,"line_end":41,"column_start":11,"column_end":28},"name":"DeclarationParser","qualname":"::rules_and_declarations::DeclarationParser","value":"DeclarationParser<'i>","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204}],"decl_id":null,"docs":" A trait to provide various parsing of declaration values.","sig":null,"attributes":[{"value":"/ A trait to provide various parsing of declaration values.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":12552,"byte_end":12613,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":12614,"byte_end":12617,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ For example, there could be different implementations for property declarations in style rules","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":12618,"byte_end":12716,"line_start":39,"line_end":39,"column_start":1,"column_end":99}},{"value":"/ and for descriptors in `@font-face` rules.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":12717,"byte_end":12763,"line_start":40,"line_end":40,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":202},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":12861,"byte_end":12872,"line_start":43,"line_end":43,"column_start":10,"column_end":21},"name":"Declaration","qualname":"::rules_and_declarations::DeclarationParser::Declaration","value":"type Declaration;","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":" The finished representation of a declaration.\n","sig":null,"attributes":[{"value":"/ The finished representation of a declaration.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":12802,"byte_end":12851,"line_start":42,"line_end":42,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":203},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":12970,"byte_end":12975,"line_start":46,"line_end":46,"column_start":10,"column_end":15},"name":"Error","qualname":"::rules_and_declarations::DeclarationParser::Error","value":"type Error: 'i;","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":" The error type that is included in the ParseError value that can be returned.\n","sig":null,"attributes":[{"value":"/ The error type that is included in the ParseError value that can be returned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":12879,"byte_end":12960,"line_start":45,"line_end":45,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":13903,"byte_end":13914,"line_start":65,"line_end":65,"column_start":8,"column_end":19},"name":"parse_value","qualname":"::rules_and_declarations::DeclarationParser::parse_value","value":"fn parse_value<'t, '_, '_>(&'_ mut Self, CowRcStr, &'_ mut Parser)\n-> Result<Self::Declaration, ParseError>","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":" Parse the value of a declaration with the given `name`.","sig":null,"attributes":[{"value":"/ Parse the value of a declaration with the given `name`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":12986,"byte_end":13045,"line_start":48,"line_end":48,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":13050,"byte_end":13053,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Return the finished representation for the declaration","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":13058,"byte_end":13116,"line_start":50,"line_end":50,"column_start":5,"column_end":63}},{"value":"/ as returned by `DeclarationListParser::next`,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":13121,"byte_end":13170,"line_start":51,"line_end":51,"column_start":5,"column_end":54}},{"value":"/ or `Err(())` to ignore the entire declaration as invalid.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":13175,"byte_end":13236,"line_start":52,"line_end":52,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":13241,"byte_end":13244,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Declaration name matching should be case-insensitive in the ASCII range.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":13249,"byte_end":13325,"line_start":54,"line_end":54,"column_start":5,"column_end":81}},{"value":"/ This can be done with `std::ascii::Ascii::eq_ignore_ascii_case`,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":13330,"byte_end":13398,"line_start":55,"line_end":55,"column_start":5,"column_end":73}},{"value":"/ or with the `match_ignore_ascii_case!` macro.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":13403,"byte_end":13452,"line_start":56,"line_end":56,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":13457,"byte_end":13460,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The given `input` is a \"delimited\" parser","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":13465,"byte_end":13510,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"/ that ends wherever the declaration value should end.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":13515,"byte_end":13571,"line_start":59,"line_end":59,"column_start":5,"column_end":61}},{"value":"/ (In declaration lists, before the next semicolon or end of the current block.)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":13576,"byte_end":13658,"line_start":60,"line_end":60,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":13663,"byte_end":13666,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ If `!important` can be used in a given context,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":13671,"byte_end":13722,"line_start":62,"line_end":62,"column_start":5,"column_end":56}},{"value":"/ `input.try_parse(parse_important).is_ok()` should be used at the end","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":13727,"byte_end":13799,"line_start":63,"line_end":63,"column_start":5,"column_end":77}},{"value":"/ of the implementation of this method and the result should be part of the return value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":13804,"byte_end":13895,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Trait","id":{"krate":0,"index":206},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":14526,"byte_end":14538,"line_start":81,"line_end":81,"column_start":11,"column_end":23},"name":"AtRuleParser","qualname":"::rules_and_declarations::AtRuleParser","value":"AtRuleParser<'i>","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":215}],"decl_id":null,"docs":" A trait to provide various parsing of at-rules.","sig":null,"attributes":[{"value":"/ A trait to provide various parsing of at-rules.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":14071,"byte_end":14122,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":14123,"byte_end":14126,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, there could be different implementations for top-level at-rules","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":14127,"byte_end":14207,"line_start":74,"line_end":74,"column_start":1,"column_end":81}},{"value":"/ (`@media`, `@font-face`, …)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":14208,"byte_end":14241,"line_start":75,"line_end":75,"column_start":1,"column_end":32}},{"value":"/ and for page-margin rules inside `@page`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":14242,"byte_end":14287,"line_start":76,"line_end":76,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":14288,"byte_end":14291,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ Default implementations that reject all at-rules are provided,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":14292,"byte_end":14358,"line_start":78,"line_end":78,"column_start":1,"column_end":67}},{"value":"/ so that `impl AtRuleParser<(), ()> for ... {}` can be used","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":14359,"byte_end":14421,"line_start":79,"line_end":79,"column_start":1,"column_end":63}},{"value":"/ for using `DeclarationListParser` to parse a declarations list with only qualified rules.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":14422,"byte_end":14515,"line_start":80,"line_end":80,"column_start":1,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":208},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":14634,"byte_end":14648,"line_start":83,"line_end":83,"column_start":10,"column_end":24},"name":"PreludeNoBlock","qualname":"::rules_and_declarations::AtRuleParser::PreludeNoBlock","value":"type PreludeNoBlock;","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" The intermediate representation of prelude of an at-rule without block;\n","sig":null,"attributes":[{"value":"/ The intermediate representation of prelude of an at-rule without block;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":14549,"byte_end":14624,"line_start":82,"line_end":82,"column_start":5,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":209},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":14737,"byte_end":14749,"line_start":86,"line_end":86,"column_start":10,"column_end":22},"name":"PreludeBlock","qualname":"::rules_and_declarations::AtRuleParser::PreludeBlock","value":"type PreludeBlock;","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" The intermediate representation of prelude of an at-rule with block;\n","sig":null,"attributes":[{"value":"/ The intermediate representation of prelude of an at-rule with block;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":14655,"byte_end":14727,"line_start":85,"line_end":85,"column_start":5,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":210},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":14812,"byte_end":14818,"line_start":89,"line_end":89,"column_start":10,"column_end":16},"name":"AtRule","qualname":"::rules_and_declarations::AtRuleParser::AtRule","value":"type AtRule;","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" The finished representation of an at-rule.\n","sig":null,"attributes":[{"value":"/ The finished representation of an at-rule.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":14756,"byte_end":14802,"line_start":88,"line_end":88,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":211},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":14916,"byte_end":14921,"line_start":92,"line_end":92,"column_start":10,"column_end":15},"name":"Error","qualname":"::rules_and_declarations::AtRuleParser::Error","value":"type Error: 'i;","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" The error type that is included in the ParseError value that can be returned.\n","sig":null,"attributes":[{"value":"/ The error type that is included in the ParseError value that can be returned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":14825,"byte_end":14906,"line_start":91,"line_end":91,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":15744,"byte_end":15757,"line_start":111,"line_end":111,"column_start":8,"column_end":21},"name":"parse_prelude","qualname":"::rules_and_declarations::AtRuleParser::parse_prelude","value":"fn parse_prelude<'t, '_, '_>(&'_ mut Self, CowRcStr, &'_ mut Parser)\n-> Result<AtRuleType<Self::PreludeNoBlock, Self::PreludeBlock>, ParseError>","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" Parse the prelude of an at-rule with the given `name`.","sig":null,"attributes":[{"value":"/ Parse the prelude of an at-rule with the given `name`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":14932,"byte_end":14990,"line_start":94,"line_end":94,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":14995,"byte_end":14998,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Return the representation of the prelude and the type of at-rule,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":15003,"byte_end":15072,"line_start":96,"line_end":96,"column_start":5,"column_end":74}},{"value":"/ or `Err(())` to ignore the entire at-rule as invalid.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":15077,"byte_end":15134,"line_start":97,"line_end":97,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":15139,"byte_end":15142,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ See `AtRuleType`’s documentation for the return value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":15147,"byte_end":15207,"line_start":99,"line_end":99,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":15212,"byte_end":15215,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ The prelude is the part after the at-keyword","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":15220,"byte_end":15268,"line_start":101,"line_end":101,"column_start":5,"column_end":53}},{"value":"/ and before the `;` semicolon or `{ /* ... */ }` block.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":15273,"byte_end":15331,"line_start":102,"line_end":102,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":15336,"byte_end":15339,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ At-rule name matching should be case-insensitive in the ASCII range.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":15344,"byte_end":15416,"line_start":104,"line_end":104,"column_start":5,"column_end":77}},{"value":"/ This can be done with `std::ascii::Ascii::eq_ignore_ascii_case`,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":15421,"byte_end":15489,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ or with the `match_ignore_ascii_case!` macro.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":15494,"byte_end":15543,"line_start":106,"line_end":106,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":15548,"byte_end":15551,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ The given `input` is a \"delimited\" parser","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":15556,"byte_end":15601,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/ that ends wherever the prelude should end.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":15606,"byte_end":15652,"line_start":109,"line_end":109,"column_start":5,"column_end":51}},{"value":"/ (Before the next semicolon, the next `{`, or the end of the current block.)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":15657,"byte_end":15736,"line_start":110,"line_end":110,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":16469,"byte_end":16487,"line_start":130,"line_end":130,"column_start":8,"column_end":26},"name":"rule_without_block","qualname":"::rules_and_declarations::AtRuleParser::rule_without_block","value":"fn rule_without_block<'_>(&'_ mut Self, Self::PreludeNoBlock, SourceLocation)\n-> Self::AtRule","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" End an at-rule which doesn't have block. Return the finished\n representation of the at-rule.","sig":null,"attributes":[{"value":"/ End an at-rule which doesn't have block. Return the finished","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":16078,"byte_end":16142,"line_start":122,"line_end":122,"column_start":5,"column_end":69}},{"value":"/ representation of the at-rule.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":16147,"byte_end":16181,"line_start":123,"line_end":123,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":16186,"byte_end":16189,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ The location passed in is source location of the start of the prelude.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":16194,"byte_end":16268,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":16273,"byte_end":16276,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This is only called when `parse_prelude` returned `WithoutBlock`, and","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":16281,"byte_end":16354,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ either the `;` semicolon indeed follows the prelude, or parser is at","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":16359,"byte_end":16431,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ the end of the input.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":16436,"byte_end":16461,"line_start":129,"line_end":129,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":17379,"byte_end":17390,"line_start":153,"line_end":153,"column_start":8,"column_end":19},"name":"parse_block","qualname":"::rules_and_declarations::AtRuleParser::parse_block","value":"fn parse_block<'t, '_,\n'_>(&'_ mut Self, Self::PreludeBlock, SourceLocation, &'_ mut Parser)\n-> Result<Self::AtRule, ParseError>","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" Parse the content of a `{ /* ... */ }` block for the body of the at-rule.","sig":null,"attributes":[{"value":"/ Parse the content of a `{ /* ... */ }` block for the body of the at-rule.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":16860,"byte_end":16937,"line_start":143,"line_end":143,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":16942,"byte_end":16945,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The location passed in is source location of the start of the prelude.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":16950,"byte_end":17024,"line_start":145,"line_end":145,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":17029,"byte_end":17032,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Return the finished representation of the at-rule","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":17037,"byte_end":17090,"line_start":147,"line_end":147,"column_start":5,"column_end":58}},{"value":"/ as returned by `RuleListParser::next` or `DeclarationListParser::next`,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":17095,"byte_end":17170,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ or `Err(())` to ignore the entire at-rule as invalid.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":17175,"byte_end":17232,"line_start":149,"line_end":149,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":17237,"byte_end":17240,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ This is only called when `parse_prelude` returned `WithBlock`, and a block","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":17245,"byte_end":17323,"line_start":151,"line_end":151,"column_start":5,"column_end":83}},{"value":"/ was indeed found following the prelude.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":17328,"byte_end":17371,"line_start":152,"line_end":152,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":217},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":18322,"byte_end":18341,"line_start":176,"line_end":176,"column_start":11,"column_end":30},"name":"QualifiedRuleParser","qualname":"::rules_and_declarations::QualifiedRuleParser","value":"QualifiedRuleParser<'i>","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":224}],"decl_id":null,"docs":" A trait to provide various parsing of qualified rules.","sig":null,"attributes":[{"value":"/ A trait to provide various parsing of qualified rules.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":17735,"byte_end":17793,"line_start":166,"line_end":166,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":17794,"byte_end":17797,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ For example, there could be different implementations","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":17798,"byte_end":17855,"line_start":168,"line_end":168,"column_start":1,"column_end":58}},{"value":"/ for top-level qualified rules (i.e. style rules with Selectors as prelude)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":17856,"byte_end":17934,"line_start":169,"line_end":169,"column_start":1,"column_end":79}},{"value":"/ and for qualified rules inside `@keyframes` (keyframe rules with keyframe selectors as prelude).","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":17935,"byte_end":18035,"line_start":170,"line_end":170,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":18036,"byte_end":18039,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ Default implementations that reject all qualified rules are provided,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":18040,"byte_end":18113,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ so that `impl QualifiedRuleParser<(), ()> for ... {}` can be used","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":18114,"byte_end":18183,"line_start":173,"line_end":173,"column_start":1,"column_end":70}},{"value":"/ for example for using `RuleListParser` to parse a rule list with only at-rules","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":18184,"byte_end":18266,"line_start":174,"line_end":174,"column_start":1,"column_end":83}},{"value":"/ (such as inside `@font-feature-values`).","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":18267,"byte_end":18311,"line_start":175,"line_end":175,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":219},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":18426,"byte_end":18433,"line_start":178,"line_end":178,"column_start":10,"column_end":17},"name":"Prelude","qualname":"::rules_and_declarations::QualifiedRuleParser::Prelude","value":"type Prelude;","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" The intermediate representation of a qualified rule prelude.\n","sig":null,"attributes":[{"value":"/ The intermediate representation of a qualified rule prelude.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":18352,"byte_end":18416,"line_start":177,"line_end":177,"column_start":5,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":220},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":18502,"byte_end":18515,"line_start":181,"line_end":181,"column_start":10,"column_end":23},"name":"QualifiedRule","qualname":"::rules_and_declarations::QualifiedRuleParser::QualifiedRule","value":"type QualifiedRule;","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" The finished representation of a qualified rule.\n","sig":null,"attributes":[{"value":"/ The finished representation of a qualified rule.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":18440,"byte_end":18492,"line_start":180,"line_end":180,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":221},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":18613,"byte_end":18618,"line_start":184,"line_end":184,"column_start":10,"column_end":15},"name":"Error","qualname":"::rules_and_declarations::QualifiedRuleParser::Error","value":"type Error: 'i;","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" The error type that is included in the ParseError value that can be returned.\n","sig":null,"attributes":[{"value":"/ The error type that is included in the ParseError value that can be returned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":18522,"byte_end":18603,"line_start":183,"line_end":183,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":19044,"byte_end":19057,"line_start":195,"line_end":195,"column_start":8,"column_end":21},"name":"parse_prelude","qualname":"::rules_and_declarations::QualifiedRuleParser::parse_prelude","value":"fn parse_prelude<'t, '_, '_>(&'_ mut Self, &'_ mut Parser)\n-> Result<Self::Prelude, ParseError>","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" Parse the prelude of a qualified rule. For style rules, this is as Selector list.","sig":null,"attributes":[{"value":"/ Parse the prelude of a qualified rule. For style rules, this is as Selector list.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":18629,"byte_end":18714,"line_start":186,"line_end":186,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":18719,"byte_end":18722,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Return the representation of the prelude,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":18727,"byte_end":18772,"line_start":188,"line_end":188,"column_start":5,"column_end":50}},{"value":"/ or `Err(())` to ignore the entire at-rule as invalid.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":18777,"byte_end":18834,"line_start":189,"line_end":189,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":18839,"byte_end":18842,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ The prelude is the part before the `{ /* ... */ }` block.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":18847,"byte_end":18908,"line_start":191,"line_end":191,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":18913,"byte_end":18916,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The given `input` is a \"delimited\" parser","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":18921,"byte_end":18966,"line_start":193,"line_end":193,"column_start":5,"column_end":50}},{"value":"/ that ends where the prelude should end (before the next `{`).","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":18971,"byte_end":19036,"line_start":194,"line_end":194,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":19647,"byte_end":19658,"line_start":210,"line_end":210,"column_start":8,"column_end":19},"name":"parse_block","qualname":"::rules_and_declarations::QualifiedRuleParser::parse_block","value":"fn parse_block<'t, '_,\n'_>(&'_ mut Self, Self::Prelude, SourceLocation, &'_ mut Parser)\n-> Result<Self::QualifiedRule, ParseError>","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" Parse the content of a `{ /* ... */ }` block for the body of the qualified rule.","sig":null,"attributes":[{"value":"/ Parse the content of a `{ /* ... */ }` block for the body of the qualified rule.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":19286,"byte_end":19370,"line_start":203,"line_end":203,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":19375,"byte_end":19378,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The location passed in is source location of the start of the prelude.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":19383,"byte_end":19457,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":19462,"byte_end":19465,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Return the finished representation of the qualified rule","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":19470,"byte_end":19530,"line_start":207,"line_end":207,"column_start":5,"column_end":65}},{"value":"/ as returned by `RuleListParser::next`,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":19535,"byte_end":19577,"line_start":208,"line_end":208,"column_start":5,"column_end":47}},{"value":"/ or `Err(())` to ignore the entire at-rule as invalid.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":19582,"byte_end":19639,"line_start":209,"line_end":209,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":20074,"byte_end":20095,"line_start":224,"line_end":224,"column_start":12,"column_end":33},"name":"DeclarationListParser","qualname":"::rules_and_declarations::DeclarationListParser","value":"DeclarationListParser { input, parser }","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232}],"decl_id":null,"docs":" Provides an iterator for declaration list parsing.\n","sig":null,"attributes":[{"value":"/ Provides an iterator for declaration list parsing.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":20008,"byte_end":20062,"line_start":223,"line_end":223,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":231},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":20177,"byte_end":20182,"line_start":226,"line_end":226,"column_start":9,"column_end":14},"name":"input","qualname":"::rules_and_declarations::DeclarationListParser::input","value":"&'a mut parser::Parser<'i, 't>","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" The input given to `DeclarationListParser::new`\n","sig":null,"attributes":[{"value":"/ The input given to `DeclarationListParser::new`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":20117,"byte_end":20168,"line_start":225,"line_end":225,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":232},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":20274,"byte_end":20280,"line_start":229,"line_end":229,"column_start":9,"column_end":15},"name":"parser","qualname":"::rules_and_declarations::DeclarationListParser::parser","value":"P","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" The parser given to `DeclarationListParser::new`\n","sig":null,"attributes":[{"value":"/ The parser given to `DeclarationListParser::new`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":20213,"byte_end":20265,"line_start":228,"line_end":228,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":21244,"byte_end":21247,"line_start":250,"line_end":250,"column_start":12,"column_end":15},"name":"new","qualname":"<DeclarationListParser>::new","value":"fn new(&'a mut Parser, P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `DeclarationListParser` for the given `input` and `parser`.","sig":null,"attributes":[{"value":"/ Create a new `DeclarationListParser` for the given `input` and `parser`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":20467,"byte_end":20543,"line_start":236,"line_end":236,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":20548,"byte_end":20551,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that all CSS declaration lists can on principle contain at-rules.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":20556,"byte_end":20630,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"/ Even if no such valid at-rule exists (yet),","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":20635,"byte_end":20682,"line_start":239,"line_end":239,"column_start":5,"column_end":52}},{"value":"/ this affects error handling: at-rules end at `{}` blocks, not just semicolons.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":20687,"byte_end":20769,"line_start":240,"line_end":240,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":20774,"byte_end":20777,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ The given `parser` therefore needs to implement","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":20782,"byte_end":20833,"line_start":242,"line_end":242,"column_start":5,"column_end":56}},{"value":"/ both `DeclarationParser` and `AtRuleParser` traits.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":20838,"byte_end":20893,"line_start":243,"line_end":243,"column_start":5,"column_end":60}},{"value":"/ However, the latter can be an empty `impl`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":20898,"byte_end":20944,"line_start":244,"line_end":244,"column_start":5,"column_end":51}},{"value":"/ since `AtRuleParser` provides default implementations of its methods.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":20949,"byte_end":21022,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":21027,"byte_end":21030,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ The return type for finished declarations and at-rules also needs to be the same,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":21035,"byte_end":21120,"line_start":247,"line_end":247,"column_start":5,"column_end":90}},{"value":"/ since `<DeclarationListParser as Iterator>::next` can return either.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":21125,"byte_end":21197,"line_start":248,"line_end":248,"column_start":5,"column_end":77}},{"value":"/ It could be a custom enum.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":21202,"byte_end":21232,"line_start":249,"line_end":249,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":21793,"byte_end":21797,"line_start":266,"line_end":266,"column_start":8,"column_end":12},"name":"next","qualname":"<DeclarationListParser as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":254},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":23565,"byte_end":23579,"line_start":304,"line_end":304,"column_start":12,"column_end":26},"name":"RuleListParser","qualname":"::rules_and_declarations::RuleListParser","value":"RuleListParser { input, parser }","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262}],"decl_id":null,"docs":" Provides an iterator for rule list parsing.\n","sig":null,"attributes":[{"value":"/ Provides an iterator for rule list parsing.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":23506,"byte_end":23553,"line_start":303,"line_end":303,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":259},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":23654,"byte_end":23659,"line_start":306,"line_end":306,"column_start":9,"column_end":14},"name":"input","qualname":"::rules_and_declarations::RuleListParser::input","value":"&'a mut parser::Parser<'i, 't>","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" The input given to `RuleListParser::new`\n","sig":null,"attributes":[{"value":"/ The input given to `RuleListParser::new`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":23601,"byte_end":23645,"line_start":305,"line_end":305,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":260},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":23744,"byte_end":23750,"line_start":309,"line_end":309,"column_start":9,"column_end":15},"name":"parser","qualname":"::rules_and_declarations::RuleListParser::parser","value":"P","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" The parser given to `RuleListParser::new`\n","sig":null,"attributes":[{"value":"/ The parser given to `RuleListParser::new`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":23690,"byte_end":23735,"line_start":308,"line_end":308,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":24571,"byte_end":24589,"line_start":330,"line_end":330,"column_start":12,"column_end":30},"name":"new_for_stylesheet","qualname":"<RuleListParser>::new_for_stylesheet","value":"fn new_for_stylesheet(&'a mut Parser, P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `RuleListParser` for the given `input` at the top-level of a stylesheet\n and the given `parser`.","sig":null,"attributes":[{"value":"/ Create a new `RuleListParser` for the given `input` at the top-level of a stylesheet","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":23995,"byte_end":24083,"line_start":320,"line_end":320,"column_start":5,"column_end":93}},{"value":"/ and the given `parser`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":24088,"byte_end":24115,"line_start":321,"line_end":321,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":24120,"byte_end":24123,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ The given `parser` needs to implement both `QualifiedRuleParser` and `AtRuleParser` traits.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":24128,"byte_end":24223,"line_start":323,"line_end":323,"column_start":5,"column_end":100}},{"value":"/ However, either of them can be an empty `impl`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":24228,"byte_end":24278,"line_start":324,"line_end":324,"column_start":5,"column_end":55}},{"value":"/ since the traits provide default implementations of their methods.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":24283,"byte_end":24353,"line_start":325,"line_end":325,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":24358,"byte_end":24361,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ The return type for finished qualified rules and at-rules also needs to be the same,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":24366,"byte_end":24454,"line_start":327,"line_end":327,"column_start":5,"column_end":93}},{"value":"/ since `<RuleListParser as Iterator>::next` can return either.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":24459,"byte_end":24524,"line_start":328,"line_end":328,"column_start":5,"column_end":70}},{"value":"/ It could be a custom enum.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":24529,"byte_end":24559,"line_start":329,"line_end":329,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":25159,"byte_end":25178,"line_start":345,"line_end":345,"column_start":12,"column_end":31},"name":"new_for_nested_rule","qualname":"<RuleListParser>::new_for_nested_rule","value":"fn new_for_nested_rule(&'a mut Parser, P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Same is `new_for_stylesheet`, but should be used for rule lists inside a block\n such as the body of an `@media` rule.","sig":null,"attributes":[{"value":"/ Same is `new_for_stylesheet`, but should be used for rule lists inside a block","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":24811,"byte_end":24893,"line_start":339,"line_end":339,"column_start":5,"column_end":87}},{"value":"/ such as the body of an `@media` rule.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":24898,"byte_end":24939,"line_start":340,"line_end":340,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":24944,"byte_end":24947,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ This differs in that `<!--` and `-->` tokens","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":24952,"byte_end":25000,"line_start":342,"line_end":342,"column_start":5,"column_end":53}},{"value":"/ should only be ignored at the stylesheet top-level.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":25005,"byte_end":25060,"line_start":343,"line_end":343,"column_start":5,"column_end":60}},{"value":"/ (This is to deal with legacy work arounds for `<style>` HTML element parsing.)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":25065,"byte_end":25147,"line_start":344,"line_end":344,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":25757,"byte_end":25761,"line_start":363,"line_end":363,"column_start":8,"column_end":12},"name":"next","qualname":"<RuleListParser as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":283},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":27621,"byte_end":27642,"line_start":410,"line_end":410,"column_start":8,"column_end":29},"name":"parse_one_declaration","qualname":"::rules_and_declarations::parse_one_declaration","value":"fn parse_one_declaration<'i, 't, P, E, '_, '_>(&'_ mut Parser, &'_ mut P)\n-> Result<<P as DeclarationParser>::Declaration, (ParseError, &'i str)> where\nP: DeclarationParser<Error = E>","parent":null,"children":[],"decl_id":null,"docs":" Parse a single declaration, such as an `( /* ... */ )` parenthesis in an `@supports` prelude.\n","sig":null,"attributes":[{"value":"/ Parse a single declaration, such as an `( /* ... */ )` parenthesis in an `@supports` prelude.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":27516,"byte_end":27613,"line_start":409,"line_end":409,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":290},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":28220,"byte_end":28234,"line_start":428,"line_end":428,"column_start":8,"column_end":22},"name":"parse_one_rule","qualname":"::rules_and_declarations::parse_one_rule","value":"fn parse_one_rule<'i, 't, R, P, E, '_, '_>(&'_ mut Parser, &'_ mut P)\n-> Result<R, ParseError> where P: QualifiedRuleParser<QualifiedRule = R, Error\n= E> + AtRuleParser<AtRule = R, Error = E>","parent":null,"children":[],"decl_id":null,"docs":" Parse a single rule, such as for CSSOM’s `CSSStyleSheet.insertRule`.\n","sig":null,"attributes":[{"value":"/ Parse a single rule, such as for CSSOM’s `CSSStyleSheet.insertRule`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":28138,"byte_end":28212,"line_start":427,"line_end":427,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1403},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12236476,"byte_end":12236481,"line_start":2,"line_end":2,"column_start":92,"column_end":97},"name":"Ident","qualname":"::tokenizer::Token::Ident","value":"Token::Ident(CowRcStr)","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A [`<ident-token>`](https://drafts.csswg.org/css-syntax/#ident-token-diagram)\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1405},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12236483,"byte_end":12236498,"line_start":2,"line_end":2,"column_start":99,"column_end":114},"name":"0","qualname":"::tokenizer::Token::Ident::0","value":"cow_rc_str::CowRcStr<'a>","parent":{"krate":0,"index":1403},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1406},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12236672,"byte_end":12236681,"line_start":2,"line_end":2,"column_start":288,"column_end":297},"name":"AtKeyword","qualname":"::tokenizer::Token::AtKeyword","value":"Token::AtKeyword(CowRcStr)","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A [`<at-keyword-token>`](https://drafts.csswg.org/css-syntax/#at-keyword-token-diagram)","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1408},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12236683,"byte_end":12236698,"line_start":2,"line_end":2,"column_start":299,"column_end":314},"name":"0","qualname":"::tokenizer::Token::AtKeyword::0","value":"cow_rc_str::CowRcStr<'a>","parent":{"krate":0,"index":1406},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1409},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12236903,"byte_end":12236907,"line_start":2,"line_end":2,"column_start":519,"column_end":523},"name":"Hash","qualname":"::tokenizer::Token::Hash","value":"Token::Hash(CowRcStr)","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A [`<hash-token>`](https://drafts.csswg.org/css-syntax/#hash-token-diagram) with the type flag set to \"unrestricted\"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1411},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12236909,"byte_end":12236924,"line_start":2,"line_end":2,"column_start":525,"column_end":540},"name":"0","qualname":"::tokenizer::Token::Hash::0","value":"cow_rc_str::CowRcStr<'a>","parent":{"krate":0,"index":1409},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1412},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12237119,"byte_end":12237125,"line_start":2,"line_end":2,"column_start":735,"column_end":741},"name":"IDHash","qualname":"::tokenizer::Token::IDHash","value":"Token::IDHash(CowRcStr)","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A [`<hash-token>`](https://drafts.csswg.org/css-syntax/#hash-token-diagram) with the type flag set to \"id\"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1414},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12237127,"byte_end":12237142,"line_start":2,"line_end":2,"column_start":743,"column_end":758},"name":"0","qualname":"::tokenizer::Token::IDHash::0","value":"cow_rc_str::CowRcStr<'a>","parent":{"krate":0,"index":1412},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1415},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12237304,"byte_end":12237316,"line_start":2,"line_end":2,"column_start":920,"column_end":932},"name":"QuotedString","qualname":"::tokenizer::Token::QuotedString","value":"Token::QuotedString(CowRcStr)","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A [`<string-token>`](https://drafts.csswg.org/css-syntax/#string-token-diagram)","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1417},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12237318,"byte_end":12237333,"line_start":2,"line_end":2,"column_start":934,"column_end":949},"name":"0","qualname":"::tokenizer::Token::QuotedString::0","value":"cow_rc_str::CowRcStr<'a>","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1418},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12237587,"byte_end":12237598,"line_start":2,"line_end":2,"column_start":1203,"column_end":1214},"name":"UnquotedUrl","qualname":"::tokenizer::Token::UnquotedUrl","value":"Token::UnquotedUrl(CowRcStr)","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A [`<url-token>`](https://drafts.csswg.org/css-syntax/#url-token-diagram)","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1420},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12237600,"byte_end":12237615,"line_start":2,"line_end":2,"column_start":1216,"column_end":1231},"name":"0","qualname":"::tokenizer::Token::UnquotedUrl::0","value":"cow_rc_str::CowRcStr<'a>","parent":{"krate":0,"index":1418},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1421},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12237650,"byte_end":12237655,"line_start":2,"line_end":2,"column_start":1266,"column_end":1271},"name":"Delim","qualname":"::tokenizer::Token::Delim","value":"Token::Delim(char)","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A `<delim-token>`\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1423},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12237657,"byte_end":12237661,"line_start":2,"line_end":2,"column_start":1273,"column_end":1277},"name":"0","qualname":"::tokenizer::Token::Delim::0","value":"char","parent":{"krate":0,"index":1421},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1424},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12237758,"byte_end":12237764,"line_start":2,"line_end":2,"column_start":1374,"column_end":1380},"name":"Number","qualname":"::tokenizer::Token::Number","value":"Token::Number { has_sign, value, int_value }","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A [`<number-token>`](https://drafts.csswg.org/css-syntax/#number-token-diagram)\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1425},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12237937,"byte_end":12237945,"line_start":3,"line_end":3,"column_start":171,"column_end":179},"name":"has_sign","qualname":"::tokenizer::Token::Number::has_sign","value":"bool","parent":{"krate":0,"index":1424},"children":[],"decl_id":null,"docs":" Whether the number had a `+` or `-` sign.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1426},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12237989,"byte_end":12237994,"line_start":3,"line_end":3,"column_start":223,"column_end":228},"name":"value","qualname":"::tokenizer::Token::Number::value","value":"f32","parent":{"krate":0,"index":1424},"children":[],"decl_id":null,"docs":" The value as a float\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1427},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12238097,"byte_end":12238106,"line_start":3,"line_end":3,"column_start":331,"column_end":340},"name":"int_value","qualname":"::tokenizer::Token::Number::int_value","value":"std::option::Option<i32>","parent":{"krate":0,"index":1424},"children":[],"decl_id":null,"docs":" If the origin source did not include a fractional part, the value as an integer.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1428},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12238231,"byte_end":12238241,"line_start":4,"line_end":4,"column_start":106,"column_end":116},"name":"Percentage","qualname":"::tokenizer::Token::Percentage","value":"Token::Percentage { has_sign, unit_value, int_value }","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A [`<percentage-token>`](https://drafts.csswg.org/css-syntax/#percentage-token-diagram)\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1429},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12238299,"byte_end":12238307,"line_start":5,"line_end":5,"column_start":56,"column_end":64},"name":"has_sign","qualname":"::tokenizer::Token::Percentage::has_sign","value":"bool","parent":{"krate":0,"index":1428},"children":[],"decl_id":null,"docs":" Whether the number had a `+` or `-` sign.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1430},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12238408,"byte_end":12238418,"line_start":5,"line_end":5,"column_start":165,"column_end":175},"name":"unit_value","qualname":"::tokenizer::Token::Percentage::unit_value","value":"f32","parent":{"krate":0,"index":1428},"children":[],"decl_id":null,"docs":" The value as a float, divided by 100 so that the nominal range is 0.0 to 1.0.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1431},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12238564,"byte_end":12238573,"line_start":5,"line_end":5,"column_start":321,"column_end":330},"name":"int_value","qualname":"::tokenizer::Token::Percentage::int_value","value":"std::option::Option<i32>","parent":{"krate":0,"index":1428},"children":[],"decl_id":null,"docs":" If the origin source did not include a fractional part, the value as an integer.\n It is **not** divided by 100.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1432},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12238696,"byte_end":12238705,"line_start":6,"line_end":6,"column_start":104,"column_end":113},"name":"Dimension","qualname":"::tokenizer::Token::Dimension","value":"Token::Dimension { has_sign, value, int_value, unit }","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A [`<dimension-token>`](https://drafts.csswg.org/css-syntax/#dimension-token-diagram)\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1433},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12238878,"byte_end":12238886,"line_start":7,"line_end":7,"column_start":171,"column_end":179},"name":"has_sign","qualname":"::tokenizer::Token::Dimension::has_sign","value":"bool","parent":{"krate":0,"index":1432},"children":[],"decl_id":null,"docs":" Whether the number had a `+` or `-` sign.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1434},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12238930,"byte_end":12238935,"line_start":7,"line_end":7,"column_start":223,"column_end":228},"name":"value","qualname":"::tokenizer::Token::Dimension::value","value":"f32","parent":{"krate":0,"index":1432},"children":[],"decl_id":null,"docs":" The value as a float\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1435},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12239038,"byte_end":12239047,"line_start":7,"line_end":7,"column_start":331,"column_end":340},"name":"int_value","qualname":"::tokenizer::Token::Dimension::int_value","value":"std::option::Option<i32>","parent":{"krate":0,"index":1432},"children":[],"decl_id":null,"docs":" If the origin source did not include a fractional part, the value as an integer.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1436},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12239112,"byte_end":12239116,"line_start":7,"line_end":7,"column_start":405,"column_end":409},"name":"unit","qualname":"::tokenizer::Token::Dimension::unit","value":"cow_rc_str::CowRcStr<'a>","parent":{"krate":0,"index":1432},"children":[],"decl_id":null,"docs":" The unit, e.g. \"px\" in `12px`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1437},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12239242,"byte_end":12239252,"line_start":8,"line_end":8,"column_start":106,"column_end":116},"name":"WhiteSpace","qualname":"::tokenizer::Token::WhiteSpace","value":"Token::WhiteSpace(&'a str)","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A [`<whitespace-token>`](https://drafts.csswg.org/css-syntax/#whitespace-token-diagram)\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1439},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12239254,"byte_end":12239262,"line_start":8,"line_end":8,"column_start":118,"column_end":126},"name":"0","qualname":"::tokenizer::Token::WhiteSpace::0","value":"&'a str","parent":{"krate":0,"index":1437},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1440},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12239522,"byte_end":12239529,"line_start":8,"line_end":8,"column_start":386,"column_end":393},"name":"Comment","qualname":"::tokenizer::Token::Comment","value":"Token::Comment(&'a str)","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A comment.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1442},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12239531,"byte_end":12239539,"line_start":8,"line_end":8,"column_start":395,"column_end":403},"name":"0","qualname":"::tokenizer::Token::Comment::0","value":"&'a str","parent":{"krate":0,"index":1440},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1443},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12239578,"byte_end":12239583,"line_start":8,"line_end":8,"column_start":442,"column_end":447},"name":"Colon","qualname":"::tokenizer::Token::Colon","value":"Token::Colon","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A `:` `<colon-token>`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1445},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12239625,"byte_end":12239634,"line_start":8,"line_end":8,"column_start":489,"column_end":498},"name":"Semicolon","qualname":"::tokenizer::Token::Semicolon","value":"Token::Semicolon","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A `;` `<semicolon-token>`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1447},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12239672,"byte_end":12239677,"line_start":8,"line_end":8,"column_start":536,"column_end":541},"name":"Comma","qualname":"::tokenizer::Token::Comma","value":"Token::Comma","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A `,` `<comma-token>`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1449},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12239792,"byte_end":12239804,"line_start":8,"line_end":8,"column_start":656,"column_end":668},"name":"IncludeMatch","qualname":"::tokenizer::Token::IncludeMatch","value":"Token::IncludeMatch","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A `~=` [`<include-match-token>`](https://drafts.csswg.org/css-syntax/#include-match-token-diagram)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1451},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12239913,"byte_end":12239922,"line_start":8,"line_end":8,"column_start":777,"column_end":786},"name":"DashMatch","qualname":"::tokenizer::Token::DashMatch","value":"Token::DashMatch","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A `|=` [`<dash-match-token>`](https://drafts.csswg.org/css-syntax/#dash-match-token-diagram)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1453},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12240035,"byte_end":12240046,"line_start":8,"line_end":8,"column_start":899,"column_end":910},"name":"PrefixMatch","qualname":"::tokenizer::Token::PrefixMatch","value":"Token::PrefixMatch","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A `^=` [`<prefix-match-token>`](https://drafts.csswg.org/css-syntax/#prefix-match-token-diagram)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1455},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12240159,"byte_end":12240170,"line_start":8,"line_end":8,"column_start":1023,"column_end":1034},"name":"SuffixMatch","qualname":"::tokenizer::Token::SuffixMatch","value":"Token::SuffixMatch","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A `$=` [`<suffix-match-token>`](https://drafts.csswg.org/css-syntax/#suffix-match-token-diagram)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1457},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12240289,"byte_end":12240303,"line_start":8,"line_end":8,"column_start":1153,"column_end":1167},"name":"SubstringMatch","qualname":"::tokenizer::Token::SubstringMatch","value":"Token::SubstringMatch","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A `*=` [`<substring-match-token>`](https://drafts.csswg.org/css-syntax/#substring-match-token-diagram)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1459},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12240400,"byte_end":12240403,"line_start":8,"line_end":8,"column_start":1264,"column_end":1267},"name":"CDO","qualname":"::tokenizer::Token::CDO","value":"Token::CDO","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A `<!--` [`<CDO-token>`](https://drafts.csswg.org/css-syntax/#CDO-token-diagram)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1461},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12240499,"byte_end":12240502,"line_start":8,"line_end":8,"column_start":1363,"column_end":1366},"name":"CDC","qualname":"::tokenizer::Token::CDC","value":"Token::CDC","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A `-->` [`<CDC-token>`](https://drafts.csswg.org/css-syntax/#CDC-token-diagram)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1463},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12240678,"byte_end":12240686,"line_start":8,"line_end":8,"column_start":1542,"column_end":1550},"name":"Function","qualname":"::tokenizer::Token::Function","value":"Token::Function(CowRcStr)","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A [`<function-token>`](https://drafts.csswg.org/css-syntax/#function-token-diagram)","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1465},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12240688,"byte_end":12240703,"line_start":8,"line_end":8,"column_start":1552,"column_end":1567},"name":"0","qualname":"::tokenizer::Token::Function::0","value":"cow_rc_str::CowRcStr<'a>","parent":{"krate":0,"index":1463},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1466},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12240734,"byte_end":12240750,"line_start":8,"line_end":8,"column_start":1598,"column_end":1614},"name":"ParenthesisBlock","qualname":"::tokenizer::Token::ParenthesisBlock","value":"Token::ParenthesisBlock","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A `<(-token>`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1468},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12240780,"byte_end":12240798,"line_start":8,"line_end":8,"column_start":1644,"column_end":1662},"name":"SquareBracketBlock","qualname":"::tokenizer::Token::SquareBracketBlock","value":"Token::SquareBracketBlock","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A `<[-token>`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1470},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12240828,"byte_end":12240845,"line_start":8,"line_end":8,"column_start":1692,"column_end":1709},"name":"CurlyBracketBlock","qualname":"::tokenizer::Token::CurlyBracketBlock","value":"Token::CurlyBracketBlock","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A `<{-token>`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1472},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12240950,"byte_end":12240956,"line_start":8,"line_end":8,"column_start":1814,"column_end":1820},"name":"BadUrl","qualname":"::tokenizer::Token::BadUrl","value":"Token::BadUrl(CowRcStr)","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A `<bad-url-token>`","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1474},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12240958,"byte_end":12240973,"line_start":8,"line_end":8,"column_start":1822,"column_end":1837},"name":"0","qualname":"::tokenizer::Token::BadUrl::0","value":"cow_rc_str::CowRcStr<'a>","parent":{"krate":0,"index":1472},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1475},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12241082,"byte_end":12241091,"line_start":8,"line_end":8,"column_start":1946,"column_end":1955},"name":"BadString","qualname":"::tokenizer::Token::BadString","value":"Token::BadString(CowRcStr)","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A `<bad-string-token>`","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1477},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12241093,"byte_end":12241108,"line_start":8,"line_end":8,"column_start":1957,"column_end":1972},"name":"0","qualname":"::tokenizer::Token::BadString::0","value":"cow_rc_str::CowRcStr<'a>","parent":{"krate":0,"index":1475},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1478},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12241293,"byte_end":12241309,"line_start":8,"line_end":8,"column_start":2157,"column_end":2173},"name":"CloseParenthesis","qualname":"::tokenizer::Token::CloseParenthesis","value":"Token::CloseParenthesis","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A `<)-token>`","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1480},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12241493,"byte_end":12241511,"line_start":8,"line_end":8,"column_start":2357,"column_end":2375},"name":"CloseSquareBracket","qualname":"::tokenizer::Token::CloseSquareBracket","value":"Token::CloseSquareBracket","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A `<]-token>`","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1482},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12241695,"byte_end":12241712,"line_start":8,"line_end":8,"column_start":2559,"column_end":2576},"name":"CloseCurlyBracket","qualname":"::tokenizer::Token::CloseCurlyBracket","value":"Token::CloseCurlyBracket","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" A `<}-token>`","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1401},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12236370,"byte_end":12236375,"line_start":1,"line_end":1,"column_start":455,"column_end":460},"name":"Token","qualname":"::tokenizer::Token","value":"enum Token<'a> {\n    Ident(CowRcStr),\n    AtKeyword(CowRcStr),\n    Hash(CowRcStr),\n    IDHash(CowRcStr),\n    QuotedString(CowRcStr),\n    UnquotedUrl(CowRcStr),\n    Delim(char),\n    Number {\n            has_sign: bool,\n            value: f32,\n            int_value: Option<i32>,\n        },\n    Percentage {\n            has_sign: bool,\n            unit_value: f32,\n            int_value: Option<i32>,\n        },\n    Dimension {\n            has_sign: bool,\n            value: f32,\n            int_value: Option<i32>,\n            unit: CowRcStr,\n        },\n    WhiteSpace(&'a str),\n    Comment(&'a str),\n    Colon,\n    Semicolon,\n    Comma,\n    IncludeMatch,\n    DashMatch,\n    PrefixMatch,\n    SuffixMatch,\n    SubstringMatch,\n    CDO,\n    CDC,\n    Function(CowRcStr),\n    ParenthesisBlock,\n    SquareBracketBlock,\n    CurlyBracketBlock,\n    BadUrl(CowRcStr),\n    BadString(CowRcStr),\n    CloseParenthesis,\n    CloseSquareBracket,\n    CloseCurlyBracket,\n}","parent":null,"children":[{"krate":0,"index":1403},{"krate":0,"index":1406},{"krate":0,"index":1409},{"krate":0,"index":1412},{"krate":0,"index":1415},{"krate":0,"index":1418},{"krate":0,"index":1421},{"krate":0,"index":1424},{"krate":0,"index":1428},{"krate":0,"index":1432},{"krate":0,"index":1437},{"krate":0,"index":1440},{"krate":0,"index":1443},{"krate":0,"index":1445},{"krate":0,"index":1447},{"krate":0,"index":1449},{"krate":0,"index":1451},{"krate":0,"index":1453},{"krate":0,"index":1455},{"krate":0,"index":1457},{"krate":0,"index":1459},{"krate":0,"index":1461},{"krate":0,"index":1463},{"krate":0,"index":1466},{"krate":0,"index":1468},{"krate":0,"index":1470},{"krate":0,"index":1472},{"krate":0,"index":1475},{"krate":0,"index":1478},{"krate":0,"index":1480},{"krate":0,"index":1482}],"decl_id":null,"docs":" One of the pieces the CSS input is broken into.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12242102,"byte_end":12242116,"line_start":10,"line_end":10,"column_start":359,"column_end":373},"name":"is_parse_error","qualname":"<Token>::is_parse_error","value":"fn is_parse_error<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return whether this token represents a parse error.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1524},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12257888,"byte_end":12257902,"line_start":177,"line_end":177,"column_start":161,"column_end":175},"name":"SourcePosition","qualname":"::tokenizer::SourcePosition","value":"","parent":null,"children":[],"decl_id":null,"docs":" A position from the start of the input, counted in UTF-8 bytes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12258032,"byte_end":12258042,"line_start":178,"line_end":178,"column_start":86,"column_end":96},"name":"byte_index","qualname":"<SourcePosition>::byte_index","value":"fn byte_index<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current byte index in the original input.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12258014,"byte_end":12258024,"line_start":178,"line_end":178,"column_start":68,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1543},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12258217,"byte_end":12258231,"line_start":181,"line_end":181,"column_start":144,"column_end":158},"name":"SourceLocation","qualname":"::tokenizer::SourceLocation","value":"SourceLocation { line, column }","parent":null,"children":[{"krate":0,"index":1544},{"krate":0,"index":1545}],"decl_id":null,"docs":" The line and column number for a given position within the input.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1544},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12258344,"byte_end":12258348,"line_start":182,"line_end":182,"column_start":111,"column_end":115},"name":"line","qualname":"::tokenizer::SourceLocation::line","value":"u32","parent":{"krate":0,"index":1543},"children":[],"decl_id":null,"docs":" The line number, starting at 0 for the first line, unless `with_first_line_number` was used.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1545},"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12258520,"byte_end":12258526,"line_start":182,"line_end":182,"column_start":287,"column_end":293},"name":"column","qualname":"::tokenizer::SourceLocation::column","value":"u32","parent":{"krate":0,"index":1543},"children":[],"decl_id":null,"docs":" The column number within a line, starting at 1 for first the character of the line.\n Column numbers are counted in UTF-16 code units.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1558},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":32824,"byte_end":32828,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"RGBA","qualname":"::color::RGBA","value":"RGBA { red, green, blue, alpha }","parent":null,"children":[{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562}],"decl_id":null,"docs":" A color with red, green, blue, and alpha components, in a byte each.\n","sig":null,"attributes":[{"value":"/ A color with red, green, blue, and alpha components, in a byte each.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":32688,"byte_end":32760,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"repr(C)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":32802,"byte_end":32812,"line_start":15,"line_end":15,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1559},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":32866,"byte_end":32869,"line_start":18,"line_end":18,"column_start":9,"column_end":12},"name":"red","qualname":"::color::RGBA::red","value":"u8","parent":{"krate":0,"index":1558},"children":[],"decl_id":null,"docs":" The red component.\n","sig":null,"attributes":[{"value":"/ The red component.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":32835,"byte_end":32857,"line_start":17,"line_end":17,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":1560},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":32912,"byte_end":32917,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"name":"green","qualname":"::color::RGBA::green","value":"u8","parent":{"krate":0,"index":1558},"children":[],"decl_id":null,"docs":" The green component.\n","sig":null,"attributes":[{"value":"/ The green component.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":32879,"byte_end":32903,"line_start":19,"line_end":19,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1561},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":32959,"byte_end":32963,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"name":"blue","qualname":"::color::RGBA::blue","value":"u8","parent":{"krate":0,"index":1558},"children":[],"decl_id":null,"docs":" The blue component.\n","sig":null,"attributes":[{"value":"/ The blue component.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":32927,"byte_end":32950,"line_start":21,"line_end":21,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1562},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":33006,"byte_end":33011,"line_start":24,"line_end":24,"column_start":9,"column_end":14},"name":"alpha","qualname":"::color::RGBA::alpha","value":"u8","parent":{"krate":0,"index":1558},"children":[],"decl_id":null,"docs":" The alpha component.\n","sig":null,"attributes":[{"value":"/ The alpha component.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":32973,"byte_end":32997,"line_start":23,"line_end":23,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":33255,"byte_end":33266,"line_start":32,"line_end":32,"column_start":12,"column_end":23},"name":"from_floats","qualname":"<RGBA>::from_floats","value":"fn from_floats(f32, f32, f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new RGBA value from float components. It expects the red,\n green, blue and alpha channels in that order, and all values will be\n clamped to the 0.0 ... 1.0 range.\n","sig":null,"attributes":[{"value":"/ Constructs a new RGBA value from float components. It expects the red,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":33036,"byte_end":33110,"line_start":28,"line_end":28,"column_start":5,"column_end":79}},{"value":"/ green, blue and alpha channels in that order, and all values will be","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":33115,"byte_end":33187,"line_start":29,"line_end":29,"column_start":5,"column_end":77}},{"value":"/ clamped to the 0.0 ... 1.0 range.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":33192,"byte_end":33229,"line_start":30,"line_end":30,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":33234,"byte_end":33243,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":33557,"byte_end":33568,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"name":"transparent","qualname":"<RGBA>::transparent","value":"fn transparent() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a transparent color.\n","sig":null,"attributes":[{"value":"/ Returns a transparent color.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":33499,"byte_end":33531,"line_start":41,"line_end":41,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":33536,"byte_end":33545,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":33723,"byte_end":33726,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<RGBA>::new","value":"fn new(u8, u8, u8, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Same thing, but with `u8` values instead of floats in the 0 to 1 range.\n","sig":null,"attributes":[{"value":"/ Same thing, but with `u8` values instead of floats in the 0 to 1 range.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":33622,"byte_end":33697,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":33702,"byte_end":33711,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":34011,"byte_end":34018,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"red_f32","qualname":"<RGBA>::red_f32","value":"fn red_f32<'_>(&'_ Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the red channel in a floating point number form, from 0 to 1.\n","sig":null,"attributes":[{"value":"/ Returns the red channel in a floating point number form, from 0 to 1.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":33912,"byte_end":33985,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":33990,"byte_end":33999,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":34179,"byte_end":34188,"line_start":66,"line_end":66,"column_start":12,"column_end":21},"name":"green_f32","qualname":"<RGBA>::green_f32","value":"fn green_f32<'_>(&'_ Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the green channel in a floating point number form, from 0 to 1.\n","sig":null,"attributes":[{"value":"/ Returns the green channel in a floating point number form, from 0 to 1.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":34078,"byte_end":34153,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":34158,"byte_end":34167,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":34350,"byte_end":34358,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"blue_f32","qualname":"<RGBA>::blue_f32","value":"fn blue_f32<'_>(&'_ Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the blue channel in a floating point number form, from 0 to 1.\n","sig":null,"attributes":[{"value":"/ Returns the blue channel in a floating point number form, from 0 to 1.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":34250,"byte_end":34324,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":34329,"byte_end":34338,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":34520,"byte_end":34529,"line_start":78,"line_end":78,"column_start":12,"column_end":21},"name":"alpha_f32","qualname":"<RGBA>::alpha_f32","value":"fn alpha_f32<'_>(&'_ Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the alpha channel in a floating point number form, from 0 to 1.\n","sig":null,"attributes":[{"value":"/ Returns the alpha channel in a floating point number form, from 0 to 1.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":34419,"byte_end":34494,"line_start":76,"line_end":76,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":34499,"byte_end":34508,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":35149,"byte_end":35155,"line_start":105,"line_end":105,"column_start":8,"column_end":14},"name":"to_css","qualname":"<RGBA as serializer::ToCss>::to_css","value":"fn to_css<W, '_, '_>(&'_ Self, &'_ mut W) -> fmt::Result where W: fmt::Write","parent":{"krate":0,"index":799},"children":[],"decl_id":{"krate":0,"index":800},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1573},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":36087,"byte_end":36099,"line_start":136,"line_end":136,"column_start":5,"column_end":17},"name":"CurrentColor","qualname":"::color::Color::CurrentColor","value":"Color::CurrentColor","parent":{"krate":0,"index":1572},"children":[],"decl_id":null,"docs":" The 'currentcolor' keyword\n","sig":null,"attributes":[{"value":"/ The 'currentcolor' keyword","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":36052,"byte_end":36082,"line_start":135,"line_end":135,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1575},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":36167,"byte_end":36171,"line_start":138,"line_end":138,"column_start":5,"column_end":9},"name":"RGBA","qualname":"::color::Color::RGBA","value":"Color::RGBA(RGBA)","parent":{"krate":0,"index":1572},"children":[],"decl_id":null,"docs":" Everything else gets converted to RGBA during parsing\n","sig":null,"attributes":[{"value":"/ Everything else gets converted to RGBA during parsing","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":36105,"byte_end":36162,"line_start":137,"line_end":137,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":1577},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":36172,"byte_end":36176,"line_start":138,"line_end":138,"column_start":10,"column_end":14},"name":"0","qualname":"::color::Color::RGBA::0","value":"color::RGBA","parent":{"krate":0,"index":1575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1572},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":36040,"byte_end":36045,"line_start":134,"line_end":134,"column_start":10,"column_end":15},"name":"Color","qualname":"::color::Color","value":"enum Color { CurrentColor, RGBA(RGBA), }","parent":null,"children":[{"krate":0,"index":1573},{"krate":0,"index":1575}],"decl_id":null,"docs":" A <color> value.\n","sig":null,"attributes":[{"value":"/ A <color> value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":35969,"byte_end":35989,"line_start":132,"line_end":132,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":36212,"byte_end":36218,"line_start":142,"line_end":142,"column_start":8,"column_end":14},"name":"to_css","qualname":"<Color as serializer::ToCss>::to_css","value":"fn to_css<W, '_, '_>(&'_ Self, &'_ mut W) -> fmt::Result where W: fmt::Write","parent":{"krate":0,"index":799},"children":[],"decl_id":{"krate":0,"index":800},"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":352},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":36552,"byte_end":36558,"line_start":156,"line_end":156,"column_start":5,"column_end":11},"name":"Number","qualname":"::color::NumberOrPercentage::Number","value":"NumberOrPercentage::Number { value }","parent":{"krate":0,"index":351},"children":[],"decl_id":null,"docs":" `<number>`.\n","sig":null,"attributes":[{"value":"/ `<number>`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":36532,"byte_end":36547,"line_start":155,"line_end":155,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":353},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":36619,"byte_end":36624,"line_start":158,"line_end":158,"column_start":9,"column_end":14},"name":"value","qualname":"::color::NumberOrPercentage::Number::value","value":"f32","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" The numeric value parsed, as a float.\n","sig":null,"attributes":[{"value":"/ The numeric value parsed, as a float.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":36569,"byte_end":36610,"line_start":157,"line_end":157,"column_start":9,"column_end":50}}]},{"kind":"StructVariant","id":{"krate":0,"index":354},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":36665,"byte_end":36675,"line_start":161,"line_end":161,"column_start":5,"column_end":15},"name":"Percentage","qualname":"::color::NumberOrPercentage::Percentage","value":"NumberOrPercentage::Percentage { unit_value }","parent":{"krate":0,"index":351},"children":[],"decl_id":null,"docs":" `<percentage>`\n","sig":null,"attributes":[{"value":"/ `<percentage>`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":36642,"byte_end":36660,"line_start":160,"line_end":160,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":355},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":36788,"byte_end":36798,"line_start":164,"line_end":164,"column_start":9,"column_end":19},"name":"unit_value","qualname":"::color::NumberOrPercentage::Percentage::unit_value","value":"f32","parent":{"krate":0,"index":354},"children":[],"decl_id":null,"docs":" The value as a float, divided by 100 so that the nominal range is\n 0.0 to 1.0.\n","sig":null,"attributes":[{"value":"/ The value as a float, divided by 100 so that the nominal range is","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":36686,"byte_end":36755,"line_start":162,"line_end":162,"column_start":9,"column_end":78}},{"value":"/ 0.0 to 1.0.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":36764,"byte_end":36779,"line_start":163,"line_end":163,"column_start":9,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":351},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":36507,"byte_end":36525,"line_start":154,"line_end":154,"column_start":10,"column_end":28},"name":"NumberOrPercentage","qualname":"::color::NumberOrPercentage","value":"enum NumberOrPercentage {\n    Number {\n            value: f32,\n        },\n    Percentage {\n            unit_value: f32,\n        },\n}","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":354}],"decl_id":null,"docs":" Either a number or a percentage.\n","sig":null,"attributes":[{"value":"/ Either a number or a percentage.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":36461,"byte_end":36497,"line_start":153,"line_end":153,"column_start":1,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":359},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":37130,"byte_end":37136,"line_start":180,"line_end":180,"column_start":5,"column_end":11},"name":"Number","qualname":"::color::AngleOrNumber::Number","value":"AngleOrNumber::Number { value }","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" `<number>`.\n","sig":null,"attributes":[{"value":"/ `<number>`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":37110,"byte_end":37125,"line_start":179,"line_end":179,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":360},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":37197,"byte_end":37202,"line_start":182,"line_end":182,"column_start":9,"column_end":14},"name":"value","qualname":"::color::AngleOrNumber::Number::value","value":"f32","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":" The numeric value parsed, as a float.\n","sig":null,"attributes":[{"value":"/ The numeric value parsed, as a float.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":37147,"byte_end":37188,"line_start":181,"line_end":181,"column_start":9,"column_end":50}}]},{"kind":"StructVariant","id":{"krate":0,"index":361},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":37238,"byte_end":37243,"line_start":185,"line_end":185,"column_start":5,"column_end":10},"name":"Angle","qualname":"::color::AngleOrNumber::Angle","value":"AngleOrNumber::Angle { degrees }","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" `<angle>`\n","sig":null,"attributes":[{"value":"/ `<angle>`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":37220,"byte_end":37233,"line_start":184,"line_end":184,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":362},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":37300,"byte_end":37307,"line_start":187,"line_end":187,"column_start":9,"column_end":16},"name":"degrees","qualname":"::color::AngleOrNumber::Angle::degrees","value":"f32","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":" The value as a number of degrees.\n","sig":null,"attributes":[{"value":"/ The value as a number of degrees.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":37254,"byte_end":37291,"line_start":186,"line_end":186,"column_start":9,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":358},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":37090,"byte_end":37103,"line_start":178,"line_end":178,"column_start":10,"column_end":23},"name":"AngleOrNumber","qualname":"::color::AngleOrNumber","value":"enum AngleOrNumber {\n    Number {\n            value: f32,\n        },\n    Angle {\n            degrees: f32,\n        },\n}","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":361}],"decl_id":null,"docs":" Either an angle or a number.\n","sig":null,"attributes":[{"value":"/ Either an angle or a number.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":37048,"byte_end":37080,"line_start":177,"line_end":177,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":365},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":37758,"byte_end":37778,"line_start":204,"line_end":204,"column_start":11,"column_end":31},"name":"ColorComponentParser","qualname":"::color::ColorComponentParser","value":"ColorComponentParser<'i>","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":372},{"krate":0,"index":374}],"decl_id":null,"docs":" A trait that can be used to hook into how `cssparser` parses color\n components, with the intention of implementing more complicated behavior.","sig":null,"attributes":[{"value":"/ A trait that can be used to hook into how `cssparser` parses color","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":37528,"byte_end":37598,"line_start":200,"line_end":200,"column_start":1,"column_end":71}},{"value":"/ components, with the intention of implementing more complicated behavior.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":37599,"byte_end":37676,"line_start":201,"line_end":201,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":37677,"byte_end":37680,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ For example, this is used by Servo to support calc() in color.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":37681,"byte_end":37747,"line_start":203,"line_end":203,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":367},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":37871,"byte_end":37876,"line_start":206,"line_end":206,"column_start":10,"column_end":15},"name":"Error","qualname":"::color::ColorComponentParser::Error","value":"type Error: 'i;","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" A custom error type that can be returned from the parsing functions.\n","sig":null,"attributes":[{"value":"/ A custom error type that can be returned from the parsing functions.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":37789,"byte_end":37861,"line_start":205,"line_end":205,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":37979,"byte_end":38000,"line_start":211,"line_end":211,"column_start":8,"column_end":29},"name":"parse_angle_or_number","qualname":"::color::ColorComponentParser::parse_angle_or_number","value":"fn parse_angle_or_number<'t, '_, '_>(&'_ Self, &'_ mut Parser)\n-> Result<AngleOrNumber, ParseError>","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Parse an `<angle>` or `<number>`.","sig":null,"attributes":[{"value":"/ Parse an `<angle>` or `<number>`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":37887,"byte_end":37924,"line_start":208,"line_end":208,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":37929,"byte_end":37932,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Returns the result in degrees.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":37937,"byte_end":37971,"line_start":210,"line_end":210,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":39002,"byte_end":39018,"line_start":238,"line_end":238,"column_start":8,"column_end":24},"name":"parse_percentage","qualname":"::color::ColorComponentParser::parse_percentage","value":"fn parse_percentage<'t, '_, '_>(&'_ Self, &'_ mut Parser)\n-> Result<f32, ParseError>","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Parse a `<percentage>` value.","sig":null,"attributes":[{"value":"/ Parse a `<percentage>` value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":38897,"byte_end":38930,"line_start":235,"line_end":235,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":38935,"byte_end":38938,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ Returns the result in a number from 0.0 to 1.0.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":38943,"byte_end":38994,"line_start":237,"line_end":237,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":39229,"byte_end":39241,"line_start":246,"line_end":246,"column_start":8,"column_end":20},"name":"parse_number","qualname":"::color::ColorComponentParser::parse_number","value":"fn parse_number<'t, '_, '_>(&'_ Self, &'_ mut Parser)\n-> Result<f32, ParseError>","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Parse a `<number>` value.\n","sig":null,"attributes":[{"value":"/ Parse a `<number>` value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":39192,"byte_end":39221,"line_start":245,"line_end":245,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":39474,"byte_end":39500,"line_start":254,"line_end":254,"column_start":8,"column_end":34},"name":"parse_number_or_percentage","qualname":"::color::ColorComponentParser::parse_number_or_percentage","value":"fn parse_number_or_percentage<'t, '_, '_>(&'_ Self, &'_ mut Parser)\n-> Result<NumberOrPercentage, ParseError>","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Parse a `<number>` value or a `<percentage>` value.\n","sig":null,"attributes":[{"value":"/ Parse a `<number>` value or a `<percentage>` value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":39411,"byte_end":39466,"line_start":253,"line_end":253,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":40277,"byte_end":40287,"line_start":276,"line_end":276,"column_start":12,"column_end":22},"name":"parse_with","qualname":"<Color>::parse_with","value":"fn parse_with<'i, 't, ComponentParser, '_,\n'_>(&'_ ComponentParser, &'_ mut Parser) -> Result<Color, ParseError> where\nComponentParser: ColorComponentParser","parent":null,"children":[],"decl_id":null,"docs":" Parse a <color> value, per CSS Color Module Level 3.","sig":null,"attributes":[{"value":"/ Parse a <color> value, per CSS Color Module Level 3.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":40130,"byte_end":40186,"line_start":273,"line_end":273,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":40191,"byte_end":40194,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ FIXME(#2) Deprecated CSS2 System Colors are not supported yet.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":40199,"byte_end":40265,"line_start":275,"line_end":275,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":41286,"byte_end":41291,"line_start":302,"line_end":302,"column_start":12,"column_end":17},"name":"parse","qualname":"<Color>::parse","value":"fn parse<'i, 't, '_>(&'_ mut Parser) -> Result<Color, BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse a <color> value, per CSS Color Module Level 3.\n","sig":null,"attributes":[{"value":"/ Parse a <color> value, per CSS Color Module Level 3.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":41218,"byte_end":41274,"line_start":301,"line_end":301,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":41596,"byte_end":41606,"line_start":309,"line_end":309,"column_start":12,"column_end":22},"name":"parse_hash","qualname":"<Color>::parse_hash","value":"fn parse_hash<'_>(&'_ [u8]) -> Result<Self, ()>","parent":null,"children":[],"decl_id":null,"docs":" Parse a color hash, without the leading '#' character.\n","sig":null,"attributes":[{"value":"/ Parse a color hash, without the leading '#' character.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":41512,"byte_end":41570,"line_start":307,"line_end":307,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":41575,"byte_end":41584,"line_start":308,"line_end":308,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":394},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":43102,"byte_end":43121,"line_start":354,"line_end":354,"column_start":8,"column_end":27},"name":"parse_color_keyword","qualname":"::color::parse_color_keyword","value":"fn parse_color_keyword<'_>(&'_ str) -> Result<Color, ()>","parent":null,"children":[],"decl_id":null,"docs":" Return the named color with the given name.","sig":null,"attributes":[{"value":"/ Return the named color with the given name.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":42842,"byte_end":42889,"line_start":348,"line_end":348,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":42890,"byte_end":42893,"line_start":349,"line_end":349,"column_start":1,"column_end":4}},{"value":"/ Matching is case-insensitive in the ASCII range.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":42894,"byte_end":42946,"line_start":350,"line_end":350,"column_start":1,"column_end":53}},{"value":"/ CSS escaping (if relevant) should be resolved before calling this function.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":42947,"byte_end":43026,"line_start":351,"line_end":351,"column_start":1,"column_end":80}},{"value":"/ (For example, the value of an `Ident` token is fine.)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":43027,"byte_end":43084,"line_start":352,"line_end":352,"column_start":1,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":43085,"byte_end":43094,"line_start":353,"line_end":353,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":452},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":56831,"byte_end":56839,"line_start":23,"line_end":23,"column_start":12,"column_end":20},"name":"CowRcStr","qualname":"::cow_rc_str::CowRcStr","value":"CowRcStr {  }","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"decl_id":null,"docs":" A string that is either shared (heap-allocated and reference-counted) or borrowed.","sig":null,"attributes":[{"value":"/ A string that is either shared (heap-allocated and reference-counted) or borrowed.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":56495,"byte_end":56581,"line_start":17,"line_end":17,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":56582,"byte_end":56585,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `enum { Borrowed(&'a str), Shared(Rc<String>) }`, but stored more compactly.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":56586,"byte_end":56680,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":56681,"byte_end":56684,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ FIXME(https://github.com/rust-lang/rfcs/issues/1230): use an actual enum if/when","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":56685,"byte_end":56769,"line_start":21,"line_end":21,"column_start":1,"column_end":85}},{"value":"/ the compiler can do this layout optimization.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":56770,"byte_end":56819,"line_start":22,"line_end":22,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":57768,"byte_end":57772,"line_start":47,"line_end":47,"column_start":8,"column_end":12},"name":"from","qualname":"<CowRcStr as std::convert::From>::from","value":"fn from(Cow) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":57751,"byte_end":57760,"line_start":46,"line_end":46,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":57999,"byte_end":58003,"line_start":57,"line_end":57,"column_start":8,"column_end":12},"name":"from","qualname":"<CowRcStr as std::convert::From>::from","value":"fn from(&'a str) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":57982,"byte_end":57991,"line_start":56,"line_end":56,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":58317,"byte_end":58321,"line_start":70,"line_end":70,"column_start":8,"column_end":12},"name":"from","qualname":"<CowRcStr as std::convert::From>::from","value":"fn from(String) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":58300,"byte_end":58309,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":59162,"byte_end":59167,"line_start":103,"line_end":103,"column_start":8,"column_end":13},"name":"clone","qualname":"<CowRcStr as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":59145,"byte_end":59154,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":59602,"byte_end":59606,"line_start":118,"line_end":118,"column_start":8,"column_end":12},"name":"drop","qualname":"<CowRcStr as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":59585,"byte_end":59594,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":59812,"byte_end":59817,"line_start":129,"line_end":129,"column_start":8,"column_end":13},"name":"deref","qualname":"<CowRcStr as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ str","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":59795,"byte_end":59804,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60005,"byte_end":60011,"line_start":138,"line_end":138,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<CowRcStr as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ str","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":59988,"byte_end":59997,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60112,"byte_end":60118,"line_start":145,"line_end":145,"column_start":8,"column_end":14},"name":"borrow","qualname":"<CowRcStr as std::borrow::Borrow>::borrow","value":"fn borrow<'_>(&'_ Self) -> &'_ str","parent":{"krate":2,"index":2857},"children":[],"decl_id":{"krate":2,"index":2859},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60095,"byte_end":60104,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60215,"byte_end":60222,"line_start":152,"line_end":152,"column_start":8,"column_end":15},"name":"default","qualname":"<CowRcStr as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60198,"byte_end":60207,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60327,"byte_end":60331,"line_start":159,"line_end":159,"column_start":8,"column_end":12},"name":"hash","qualname":"<CowRcStr as std::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: hash::Hasher","parent":{"krate":2,"index":10533},"children":[],"decl_id":{"krate":2,"index":10534},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60310,"byte_end":60319,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60492,"byte_end":60494,"line_start":166,"line_end":166,"column_start":8,"column_end":10},"name":"eq","qualname":"<CowRcStr as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ T) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60475,"byte_end":60484,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60648,"byte_end":60659,"line_start":173,"line_end":173,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<CowRcStr as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ T) -> Option<cmp::Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60631,"byte_end":60640,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60847,"byte_end":60850,"line_start":182,"line_end":182,"column_start":8,"column_end":11},"name":"cmp","qualname":"<CowRcStr as std::cmp::Ord>::cmp","value":"fn cmp<'_, '_>(&'_ Self, &'_ Self) -> cmp::Ordering","parent":{"krate":2,"index":2951},"children":[],"decl_id":{"krate":2,"index":2952},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60830,"byte_end":60839,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60992,"byte_end":60995,"line_start":189,"line_end":189,"column_start":8,"column_end":11},"name":"fmt","qualname":"<CowRcStr as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60975,"byte_end":60984,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":61155,"byte_end":61158,"line_start":196,"line_end":196,"column_start":8,"column_end":11},"name":"fmt","qualname":"<CowRcStr as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":61138,"byte_end":61147,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":516},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/from_bytes.rs","byte_start":61554,"byte_end":61569,"line_start":6,"line_end":6,"column_start":11,"column_end":26},"name":"EncodingSupport","qualname":"::from_bytes::EncodingSupport","value":"EncodingSupport","parent":null,"children":[{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520}],"decl_id":null,"docs":" Abstraction for avoiding a dependency from cssparser to an encoding library\n","sig":null,"attributes":[{"value":"/ Abstraction for avoiding a dependency from cssparser to an encoding library","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/from_bytes.rs","byte_start":61464,"byte_end":61543,"line_start":5,"line_end":5,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":517},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/from_bytes.rs","byte_start":61612,"byte_end":61620,"line_start":8,"line_end":8,"column_start":10,"column_end":18},"name":"Encoding","qualname":"::from_bytes::EncodingSupport::Encoding","value":"type Encoding;","parent":{"krate":0,"index":516},"children":[],"decl_id":null,"docs":" One character encoding\n","sig":null,"attributes":[{"value":"/ One character encoding","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/from_bytes.rs","byte_start":61576,"byte_end":61602,"line_start":7,"line_end":7,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/from_bytes.rs","byte_start":61693,"byte_end":61703,"line_start":11,"line_end":11,"column_start":8,"column_end":18},"name":"from_label","qualname":"::from_bytes::EncodingSupport::from_label","value":"fn from_label<'_>(&'_ [u8]) -> Option<Self::Encoding>","parent":{"krate":0,"index":516},"children":[],"decl_id":null,"docs":" https://encoding.spec.whatwg.org/#concept-encoding-get\n","sig":null,"attributes":[{"value":"/ https://encoding.spec.whatwg.org/#concept-encoding-get","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/from_bytes.rs","byte_start":61627,"byte_end":61685,"line_start":10,"line_end":10,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/from_bytes.rs","byte_start":61793,"byte_end":61797,"line_start":14,"line_end":14,"column_start":8,"column_end":12},"name":"utf8","qualname":"::from_bytes::EncodingSupport::utf8","value":"fn utf8() -> Self::Encoding","parent":{"krate":0,"index":516},"children":[],"decl_id":null,"docs":" Return the UTF-8 encoding\n","sig":null,"attributes":[{"value":"/ Return the UTF-8 encoding","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/from_bytes.rs","byte_start":61756,"byte_end":61785,"line_start":13,"line_end":13,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/from_bytes.rs","byte_start":61886,"byte_end":61903,"line_start":17,"line_end":17,"column_start":8,"column_end":25},"name":"is_utf16_be_or_le","qualname":"::from_bytes::EncodingSupport::is_utf16_be_or_le","value":"fn is_utf16_be_or_le<'_>(&'_ Self::Encoding) -> bool","parent":{"krate":0,"index":516},"children":[],"decl_id":null,"docs":" Whether the given encoding is UTF-16BE or UTF-16LE\n","sig":null,"attributes":[{"value":"/ Whether the given encoding is UTF-16BE or UTF-16LE","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/from_bytes.rs","byte_start":61824,"byte_end":61878,"line_start":16,"line_end":16,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":521},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/from_bytes.rs","byte_start":62540,"byte_end":62559,"line_start":32,"line_end":32,"column_start":8,"column_end":27},"name":"stylesheet_encoding","qualname":"::from_bytes::stylesheet_encoding","value":"fn stylesheet_encoding<E, '_,\n'_>(&'_ [u8], Option<&'_ [u8]>, Option<E::Encoding>) -> E::Encoding where\nE: EncodingSupport","parent":null,"children":[],"decl_id":null,"docs":" Determine the character encoding of a CSS stylesheet.","sig":null,"attributes":[{"value":"/ Determine the character encoding of a CSS stylesheet.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/from_bytes.rs","byte_start":61943,"byte_end":62000,"line_start":20,"line_end":20,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/from_bytes.rs","byte_start":62001,"byte_end":62004,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This is based on the presence of a BOM (Byte Order Mark), an `@charset` rule, and","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/from_bytes.rs","byte_start":62005,"byte_end":62090,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/ encoding meta-information.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/from_bytes.rs","byte_start":62091,"byte_end":62121,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/from_bytes.rs","byte_start":62122,"byte_end":62125,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * `css_bytes`: A byte string.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/from_bytes.rs","byte_start":62126,"byte_end":62159,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ * `protocol_encoding`: The encoding label, if any, defined by HTTP or equivalent protocol.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/from_bytes.rs","byte_start":62160,"byte_end":62254,"line_start":26,"line_end":26,"column_start":1,"column_end":95}},{"value":"/     (e.g. via the `charset` parameter of the `Content-Type` header.)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/from_bytes.rs","byte_start":62255,"byte_end":62327,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ * `environment_encoding`: An optional `Encoding` object for the [environment encoding]","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/from_bytes.rs","byte_start":62328,"byte_end":62418,"line_start":28,"line_end":28,"column_start":1,"column_end":91}},{"value":"/     (https://drafts.csswg.org/css-syntax/#environment-encoding), if any.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/from_bytes.rs","byte_start":62419,"byte_end":62495,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/from_bytes.rs","byte_start":62496,"byte_end":62499,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Returns the encoding to use.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/from_bytes.rs","byte_start":62500,"byte_end":62532,"line_start":31,"line_end":31,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":541},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/nth.rs","byte_start":64192,"byte_end":64201,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"parse_nth","qualname":"::nth::parse_nth","value":"fn parse_nth<'i, 't, '_>(&'_ mut Parser)\n-> Result<(i32, i32), BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse the *An+B* notation, as found in the `:nth-child()` selector.\n The input is typically the arguments of a function,\n in which case the caller needs to check if the arguments’ parser is exhausted.\n Return `Ok((A, B))`, or `Err(())` for a syntax error.\n","sig":null,"attributes":[{"value":"/ Parse the *An+B* notation, as found in the `:nth-child()` selector.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/nth.rs","byte_start":63914,"byte_end":63985,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/ The input is typically the arguments of a function,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/nth.rs","byte_start":63986,"byte_end":64041,"line_start":9,"line_end":9,"column_start":1,"column_end":56}},{"value":"/ in which case the caller needs to check if the arguments’ parser is exhausted.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/nth.rs","byte_start":64042,"byte_end":64126,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/ Return `Ok((A, B))`, or `Err(())` for a syntax error.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/nth.rs","byte_start":64127,"byte_end":64184,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1611},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":69363,"byte_end":69374,"line_start":17,"line_end":17,"column_start":12,"column_end":23},"name":"ParserState","qualname":"::parser::ParserState","value":"ParserState {  }","parent":null,"children":[{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1615}],"decl_id":null,"docs":" A capture of the internal state of a `Parser` (including the position within the input),\n obtained from the `Parser::position` method.","sig":null,"attributes":[{"value":"/ A capture of the internal state of a `Parser` (including the position within the input),","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":69046,"byte_end":69138,"line_start":11,"line_end":11,"column_start":1,"column_end":93}},{"value":"/ obtained from the `Parser::position` method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":69139,"byte_end":69187,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":69188,"byte_end":69191,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Can be used with the `Parser::reset` method to restore that state.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":69192,"byte_end":69262,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ Should only be used with the `Parser` instance it came from.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":69263,"byte_end":69327,"line_start":15,"line_end":15,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":69669,"byte_end":69677,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"position","qualname":"<ParserState>::position","value":"fn position<'_>(&'_ Self) -> SourcePosition","parent":null,"children":[],"decl_id":null,"docs":" The position from the start of the input, counted in UTF-8 bytes.\n","sig":null,"attributes":[{"value":"/ The position from the start of the input, counted in UTF-8 bytes.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":69574,"byte_end":69643,"line_start":25,"line_end":25,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":69648,"byte_end":69657,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":69817,"byte_end":69832,"line_start":33,"line_end":33,"column_start":12,"column_end":27},"name":"source_location","qualname":"<ParserState>::source_location","value":"fn source_location<'_>(&'_ Self) -> SourceLocation","parent":null,"children":[],"decl_id":null,"docs":" The line number and column number\n","sig":null,"attributes":[{"value":"/ The line number and column number","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":69754,"byte_end":69791,"line_start":31,"line_end":31,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":69796,"byte_end":69805,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1622},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":70188,"byte_end":70203,"line_start":45,"line_end":45,"column_start":5,"column_end":20},"name":"UnexpectedToken","qualname":"::parser::BasicParseErrorKind::UnexpectedToken","value":"BasicParseErrorKind::UnexpectedToken(Token)","parent":{"krate":0,"index":1620},"children":[],"decl_id":null,"docs":" An unexpected token was encountered.\n","sig":null,"attributes":[{"value":"/ An unexpected token was encountered.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":70143,"byte_end":70183,"line_start":44,"line_end":44,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1624},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":70204,"byte_end":70213,"line_start":45,"line_end":45,"column_start":21,"column_end":30},"name":"0","qualname":"::parser::BasicParseErrorKind::UnexpectedToken::0","value":"tokenizer::Token<'i>","parent":{"krate":0,"index":1622},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1625},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":70279,"byte_end":70289,"line_start":47,"line_end":47,"column_start":5,"column_end":15},"name":"EndOfInput","qualname":"::parser::BasicParseErrorKind::EndOfInput","value":"BasicParseErrorKind::EndOfInput","parent":{"krate":0,"index":1620},"children":[],"decl_id":null,"docs":" The end of the input was encountered unexpectedly.\n","sig":null,"attributes":[{"value":"/ The end of the input was encountered unexpectedly.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":70220,"byte_end":70274,"line_start":46,"line_end":46,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1627},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":70349,"byte_end":70362,"line_start":49,"line_end":49,"column_start":5,"column_end":18},"name":"AtRuleInvalid","qualname":"::parser::BasicParseErrorKind::AtRuleInvalid","value":"BasicParseErrorKind::AtRuleInvalid(CowRcStr)","parent":{"krate":0,"index":1620},"children":[],"decl_id":null,"docs":" An `@` rule was encountered that was invalid.\n","sig":null,"attributes":[{"value":"/ An `@` rule was encountered that was invalid.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":70295,"byte_end":70344,"line_start":48,"line_end":48,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1629},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":70363,"byte_end":70375,"line_start":49,"line_end":49,"column_start":19,"column_end":31},"name":"0","qualname":"::parser::BasicParseErrorKind::AtRuleInvalid::0","value":"cow_rc_str::CowRcStr<'i>","parent":{"krate":0,"index":1627},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1630},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":70427,"byte_end":70444,"line_start":51,"line_end":51,"column_start":5,"column_end":22},"name":"AtRuleBodyInvalid","qualname":"::parser::BasicParseErrorKind::AtRuleBodyInvalid","value":"BasicParseErrorKind::AtRuleBodyInvalid","parent":{"krate":0,"index":1620},"children":[],"decl_id":null,"docs":" The body of an '@' rule was invalid.\n","sig":null,"attributes":[{"value":"/ The body of an '@' rule was invalid.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":70382,"byte_end":70422,"line_start":50,"line_end":50,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1632},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":70509,"byte_end":70529,"line_start":53,"line_end":53,"column_start":5,"column_end":25},"name":"QualifiedRuleInvalid","qualname":"::parser::BasicParseErrorKind::QualifiedRuleInvalid","value":"BasicParseErrorKind::QualifiedRuleInvalid","parent":{"krate":0,"index":1620},"children":[],"decl_id":null,"docs":" A qualified rule was encountered that was invalid.\n","sig":null,"attributes":[{"value":"/ A qualified rule was encountered that was invalid.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":70450,"byte_end":70504,"line_start":52,"line_end":52,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":1620},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":70113,"byte_end":70132,"line_start":43,"line_end":43,"column_start":10,"column_end":29},"name":"BasicParseErrorKind","qualname":"::parser::BasicParseErrorKind","value":"enum BasicParseErrorKind<'i> {\n    UnexpectedToken(Token),\n    EndOfInput,\n    AtRuleInvalid(CowRcStr),\n    AtRuleBodyInvalid,\n    QualifiedRuleInvalid,\n}","parent":null,"children":[{"krate":0,"index":1622},{"krate":0,"index":1625},{"krate":0,"index":1627},{"krate":0,"index":1630},{"krate":0,"index":1632}],"decl_id":null,"docs":" Details about a `BasicParseError`\n","sig":null,"attributes":[{"value":"/ Details about a `BasicParseError`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":70031,"byte_end":70068,"line_start":41,"line_end":41,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1646},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":70666,"byte_end":70681,"line_start":58,"line_end":58,"column_start":12,"column_end":27},"name":"BasicParseError","qualname":"::parser::BasicParseError","value":"BasicParseError { kind, location }","parent":null,"children":[{"krate":0,"index":1648},{"krate":0,"index":1649}],"decl_id":null,"docs":" The funamental parsing errors that can be triggered by built-in parsing routines.\n","sig":null,"attributes":[{"value":"/ The funamental parsing errors that can be triggered by built-in parsing routines.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":70534,"byte_end":70619,"line_start":56,"line_end":56,"column_start":1,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":1648},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":70726,"byte_end":70730,"line_start":60,"line_end":60,"column_start":9,"column_end":13},"name":"kind","qualname":"::parser::BasicParseError::kind","value":"parser::BasicParseErrorKind<'i>","parent":{"krate":0,"index":1646},"children":[],"decl_id":null,"docs":" Details of this error\n","sig":null,"attributes":[{"value":"/ Details of this error","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":70692,"byte_end":70717,"line_start":59,"line_end":59,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1649},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":70808,"byte_end":70816,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"name":"location","qualname":"::parser::BasicParseError::location","value":"tokenizer::SourceLocation","parent":{"krate":0,"index":1646},"children":[],"decl_id":null,"docs":" Location where this error occurred\n","sig":null,"attributes":[{"value":"/ Location where this error occurred","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":70761,"byte_end":70799,"line_start":61,"line_end":61,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":70920,"byte_end":70924,"line_start":67,"line_end":67,"column_start":8,"column_end":12},"name":"from","qualname":"<ParseError as std::convert::From>::from","value":"fn from(BasicParseError) -> ParseError","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":70903,"byte_end":70912,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":71229,"byte_end":71261,"line_start":78,"line_end":78,"column_start":12,"column_end":44},"name":"new_basic_unexpected_token_error","qualname":"<SourceLocation>::new_basic_unexpected_token_error","value":"fn new_basic_unexpected_token_error<'i>(Self, Token) -> BasicParseError","parent":null,"children":[],"decl_id":null,"docs":" Create a new BasicParseError at this location for an unexpected token\n","sig":null,"attributes":[{"value":"/ Create a new BasicParseError at this location for an unexpected token","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":71130,"byte_end":71203,"line_start":76,"line_end":76,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":71208,"byte_end":71217,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":71547,"byte_end":71573,"line_start":87,"line_end":87,"column_start":12,"column_end":38},"name":"new_unexpected_token_error","qualname":"<SourceLocation>::new_unexpected_token_error","value":"fn new_unexpected_token_error<'i, E>(Self, Token) -> ParseError","parent":null,"children":[],"decl_id":null,"docs":" Create a new ParseError at this location for an unexpected token\n","sig":null,"attributes":[{"value":"/ Create a new ParseError at this location for an unexpected token","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":71453,"byte_end":71521,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":71526,"byte_end":71535,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":71861,"byte_end":71877,"line_start":96,"line_end":96,"column_start":12,"column_end":28},"name":"new_custom_error","qualname":"<SourceLocation>::new_custom_error","value":"fn new_custom_error<'i, E1, E2>(Self, E1) -> ParseError where E1: Into<E2>","parent":null,"children":[],"decl_id":null,"docs":" Create a new custom ParseError at this location\n","sig":null,"attributes":[{"value":"/ Create a new custom ParseError at this location","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":71784,"byte_end":71835,"line_start":94,"line_end":94,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":71840,"byte_end":71849,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1665},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":72238,"byte_end":72243,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"Basic","qualname":"::parser::ParseErrorKind::Basic","value":"ParseErrorKind::Basic(BasicParseErrorKind)","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":" A fundamental parse error from a built-in parsing routine.\n","sig":null,"attributes":[{"value":"/ A fundamental parse error from a built-in parsing routine.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":72171,"byte_end":72233,"line_start":107,"line_end":107,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":1667},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":72244,"byte_end":72267,"line_start":108,"line_end":108,"column_start":11,"column_end":34},"name":"0","qualname":"::parser::ParseErrorKind::Basic::0","value":"parser::BasicParseErrorKind<'i>","parent":{"krate":0,"index":1665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1668},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":72334,"byte_end":72340,"line_start":110,"line_end":110,"column_start":5,"column_end":11},"name":"Custom","qualname":"::parser::ParseErrorKind::Custom","value":"ParseErrorKind::Custom(T)","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":" A parse error reported by downstream consumer code.\n","sig":null,"attributes":[{"value":"/ A parse error reported by downstream consumer code.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":72274,"byte_end":72329,"line_start":109,"line_end":109,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1670},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":72341,"byte_end":72342,"line_start":110,"line_end":110,"column_start":12,"column_end":13},"name":"0","qualname":"::parser::ParseErrorKind::Custom::0","value":"T","parent":{"krate":0,"index":1668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1662},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":72139,"byte_end":72153,"line_start":106,"line_end":106,"column_start":10,"column_end":24},"name":"ParseErrorKind","qualname":"::parser::ParseErrorKind","value":"enum ParseErrorKind<'i, T> where T: 'i {\n    Basic(BasicParseErrorKind),\n    Custom(T),\n}","parent":null,"children":[{"krate":0,"index":1665},{"krate":0,"index":1668}],"decl_id":null,"docs":" Details of a `ParseError`\n","sig":null,"attributes":[{"value":"/ Details of a `ParseError`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":72065,"byte_end":72094,"line_start":104,"line_end":104,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":72435,"byte_end":72439,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"name":"into","qualname":"<ParseErrorKind>::into","value":"fn into<U>(Self) -> ParseErrorKind where T: Into<U>","parent":null,"children":[],"decl_id":null,"docs":" Like `std::convert::Into::into`\n","sig":null,"attributes":[{"value":"/ Like `std::convert::Into::into`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":72388,"byte_end":72423,"line_start":114,"line_end":114,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1687},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":72842,"byte_end":72852,"line_start":128,"line_end":128,"column_start":12,"column_end":22},"name":"ParseError","qualname":"::parser::ParseError","value":"ParseError { kind, location }","parent":null,"children":[{"krate":0,"index":1690},{"krate":0,"index":1691}],"decl_id":null,"docs":" Extensible parse errors that can be encountered by client parsing implementations.\n","sig":null,"attributes":[{"value":"/ Extensible parse errors that can be encountered by client parsing implementations.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":72709,"byte_end":72795,"line_start":126,"line_end":126,"column_start":1,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":1690},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":72900,"byte_end":72904,"line_start":130,"line_end":130,"column_start":9,"column_end":13},"name":"kind","qualname":"::parser::ParseError::kind","value":"parser::ParseErrorKind<'i, E>","parent":{"krate":0,"index":1687},"children":[],"decl_id":null,"docs":" Details of this error\n","sig":null,"attributes":[{"value":"/ Details of this error","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":72866,"byte_end":72891,"line_start":129,"line_end":129,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1691},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":72980,"byte_end":72988,"line_start":132,"line_end":132,"column_start":9,"column_end":17},"name":"location","qualname":"::parser::ParseError::location","value":"tokenizer::SourceLocation","parent":{"krate":0,"index":1687},"children":[],"decl_id":null,"docs":" Location where this error occurred\n","sig":null,"attributes":[{"value":"/ Location where this error occurred","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":72933,"byte_end":72971,"line_start":131,"line_end":131,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":73122,"byte_end":73127,"line_start":137,"line_end":137,"column_start":12,"column_end":17},"name":"basic","qualname":"<ParseError>::basic","value":"fn basic(Self) -> BasicParseError","parent":null,"children":[],"decl_id":null,"docs":" Extract the fundamental parse error from an extensible error.\n","sig":null,"attributes":[{"value":"/ Extract the fundamental parse error from an extensible error.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":73045,"byte_end":73110,"line_start":136,"line_end":136,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":73474,"byte_end":73478,"line_start":148,"line_end":148,"column_start":12,"column_end":16},"name":"into","qualname":"<ParseError>::into","value":"fn into<U>(Self) -> ParseError where T: Into<U>","parent":null,"children":[],"decl_id":null,"docs":" Like `std::convert::Into::into`\n","sig":null,"attributes":[{"value":"/ Like `std::convert::Into::into`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":73427,"byte_end":73462,"line_start":147,"line_end":147,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":607},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":73703,"byte_end":73714,"line_start":160,"line_end":160,"column_start":12,"column_end":23},"name":"ParserInput","qualname":"::parser::ParserInput","value":"ParserInput {  }","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610}],"decl_id":null,"docs":" The owned input for a parser.\n","sig":null,"attributes":[{"value":"/ The owned input for a parser.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":73658,"byte_end":73691,"line_start":159,"line_end":159,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":73990,"byte_end":73993,"line_start":173,"line_end":173,"column_start":12,"column_end":15},"name":"new","qualname":"<ParserInput>::new","value":"fn new(&'i str) -> ParserInput","parent":null,"children":[],"decl_id":null,"docs":" Create a new input for a parser.\n","sig":null,"attributes":[{"value":"/ Create a new input for a parser.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":73942,"byte_end":73978,"line_start":172,"line_end":172,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":74266,"byte_end":74293,"line_start":182,"line_end":182,"column_start":12,"column_end":39},"name":"new_with_line_number_offset","qualname":"<ParserInput>::new_with_line_number_offset","value":"fn new_with_line_number_offset(&'i str, u32) -> ParserInput","parent":null,"children":[],"decl_id":null,"docs":" Create a new input for a parser.  Line numbers in locations\n are offset by the given value.\n","sig":null,"attributes":[{"value":"/ Create a new input for a parser.  Line numbers in locations","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":74152,"byte_end":74215,"line_start":180,"line_end":180,"column_start":5,"column_end":68}},{"value":"/ are offset by the given value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":74220,"byte_end":74254,"line_start":181,"line_end":181,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":621},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":74763,"byte_end":74769,"line_start":198,"line_end":198,"column_start":12,"column_end":18},"name":"Parser","qualname":"::parser::Parser","value":"Parser {  }","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626}],"decl_id":null,"docs":" A CSS parser that borrows its `&str` input,\n yields `Token`s,\n and keeps track of nested blocks and functions.\n","sig":null,"attributes":[{"value":"/ A CSS parser that borrows its `&str` input,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":74631,"byte_end":74678,"line_start":195,"line_end":195,"column_start":1,"column_end":48}},{"value":"/ yields `Token`s,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":74679,"byte_end":74699,"line_start":196,"line_end":196,"column_start":1,"column_end":21}},{"value":"/ and keeps track of nested blocks and functions.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":74700,"byte_end":74751,"line_start":197,"line_end":197,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1726},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":76160,"byte_end":76170,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"Delimiters","qualname":"::parser::Delimiters","value":"Delimiters {  }","parent":null,"children":[{"krate":0,"index":1727}],"decl_id":null,"docs":" A set of characters, to be used with the `Parser::parse_until*` methods.","sig":null,"attributes":[{"value":"/ A set of characters, to be used with the `Parser::parse_until*` methods.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":75834,"byte_end":75910,"line_start":233,"line_end":233,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":75911,"byte_end":75914,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ The union of two sets can be obtained with the `|` operator. Example:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":75915,"byte_end":75988,"line_start":235,"line_end":235,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":75989,"byte_end":75992,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ```{rust,ignore}","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":75993,"byte_end":76013,"line_start":237,"line_end":237,"column_start":1,"column_end":21}},{"value":"/ input.parse_until_before(Delimiter::CurlyBracketBlock | Delimiter::Semicolon)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":76014,"byte_end":76095,"line_start":238,"line_end":238,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":76096,"byte_end":76103,"line_start":239,"line_end":239,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":630},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":76275,"byte_end":76284,"line_start":247,"line_end":247,"column_start":9,"column_end":18},"name":"Delimiter","qualname":"::parser::Delimiter","value":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638}],"decl_id":null,"docs":" `Delimiters` constants.\n","sig":null,"attributes":[{"value":"/ `Delimiters` constants.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":76190,"byte_end":76217,"line_start":245,"line_end":245,"column_start":1,"column_end":28}},{"value":"allow(non_upper_case_globals, non_snake_case)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":76218,"byte_end":76266,"line_start":246,"line_end":246,"column_start":1,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":634},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":76361,"byte_end":76365,"line_start":251,"line_end":251,"column_start":15,"column_end":19},"name":"None","qualname":"::parser::Delimiter::None","value":"Delimiters","parent":null,"children":[],"decl_id":null,"docs":" The empty delimiter set\n","sig":null,"attributes":[{"value":"/ The empty delimiter set","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":76319,"byte_end":76346,"line_start":250,"line_end":250,"column_start":5,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":635},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":76484,"byte_end":76501,"line_start":253,"line_end":253,"column_start":15,"column_end":32},"name":"CurlyBracketBlock","qualname":"::parser::Delimiter::CurlyBracketBlock","value":"Delimiters","parent":null,"children":[],"decl_id":null,"docs":" The delimiter set with only the `{` opening curly bracket\n","sig":null,"attributes":[{"value":"/ The delimiter set with only the `{` opening curly bracket","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":76408,"byte_end":76469,"line_start":252,"line_end":252,"column_start":5,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":636},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":76613,"byte_end":76622,"line_start":255,"line_end":255,"column_start":15,"column_end":24},"name":"Semicolon","qualname":"::parser::Delimiter::Semicolon","value":"Delimiters","parent":null,"children":[],"decl_id":null,"docs":" The delimiter set with only the `;` semicolon\n","sig":null,"attributes":[{"value":"/ The delimiter set with only the `;` semicolon","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":76549,"byte_end":76598,"line_start":254,"line_end":254,"column_start":5,"column_end":54}}]},{"kind":"Const","id":{"krate":0,"index":637},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":76742,"byte_end":76746,"line_start":257,"line_end":257,"column_start":15,"column_end":19},"name":"Bang","qualname":"::parser::Delimiter::Bang","value":"Delimiters","parent":null,"children":[],"decl_id":null,"docs":" The delimiter set with only the `!` exclamation point\n","sig":null,"attributes":[{"value":"/ The delimiter set with only the `!` exclamation point","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":76670,"byte_end":76727,"line_start":256,"line_end":256,"column_start":5,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":638},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":76854,"byte_end":76859,"line_start":259,"line_end":259,"column_start":15,"column_end":20},"name":"Comma","qualname":"::parser::Delimiter::Comma","value":"Delimiters","parent":null,"children":[],"decl_id":null,"docs":" The delimiter set with only the `,` comma\n","sig":null,"attributes":[{"value":"/ The delimiter set with only the `,` comma","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":76794,"byte_end":76839,"line_start":258,"line_end":258,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":77326,"byte_end":77331,"line_start":275,"line_end":275,"column_start":8,"column_end":13},"name":"bitor","qualname":"<Delimiters as std::ops::BitOr>::bitor","value":"fn bitor(Self, Delimiters) -> Delimiters","parent":{"krate":2,"index":3395},"children":[],"decl_id":{"krate":2,"index":3398},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":77309,"byte_end":77318,"line_start":274,"line_end":274,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":78617,"byte_end":78620,"line_start":321,"line_end":321,"column_start":12,"column_end":15},"name":"new","qualname":"<Parser>::new","value":"fn new(&'t mut ParserInput) -> Parser","parent":null,"children":[],"decl_id":null,"docs":" Create a new parser\n","sig":null,"attributes":[{"value":"/ Create a new parser","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":78568,"byte_end":78591,"line_start":319,"line_end":319,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":78596,"byte_end":78605,"line_start":320,"line_end":320,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":78871,"byte_end":78883,"line_start":330,"line_end":330,"column_start":12,"column_end":24},"name":"current_line","qualname":"<Parser>::current_line","value":"fn current_line<'_>(&'_ Self) -> &'i str","parent":null,"children":[],"decl_id":null,"docs":" Return the current line that is being parsed.\n","sig":null,"attributes":[{"value":"/ Return the current line that is being parsed.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":78810,"byte_end":78859,"line_start":329,"line_end":329,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":79131,"byte_end":79143,"line_start":338,"line_end":338,"column_start":12,"column_end":24},"name":"is_exhausted","qualname":"<Parser>::is_exhausted","value":"fn is_exhausted<'_>(&'_ mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the input is exhausted. That is, if `.next()` would return a token.","sig":null,"attributes":[{"value":"/ Check whether the input is exhausted. That is, if `.next()` would return a token.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":78966,"byte_end":79051,"line_start":334,"line_end":334,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":79056,"byte_end":79059,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ This ignores whitespace and comments.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":79064,"byte_end":79105,"line_start":336,"line_end":336,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":79110,"byte_end":79119,"line_start":337,"line_end":337,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":79473,"byte_end":79489,"line_start":347,"line_end":347,"column_start":12,"column_end":28},"name":"expect_exhausted","qualname":"<Parser>::expect_exhausted","value":"fn expect_exhausted<'_>(&'_ mut Self) -> Result<(), BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Check whether the input is exhausted. That is, if `.next()` would return a token.\n Return a `Result` so that the `?` operator can be used: `input.expect_exhausted()?`","sig":null,"attributes":[{"value":"/ Check whether the input is exhausted. That is, if `.next()` would return a token.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":79216,"byte_end":79301,"line_start":342,"line_end":342,"column_start":5,"column_end":90}},{"value":"/ Return a `Result` so that the `?` operator can be used: `input.expect_exhausted()?`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":79306,"byte_end":79393,"line_start":343,"line_end":343,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":79398,"byte_end":79401,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ This ignores whitespace and comments.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":79406,"byte_end":79447,"line_start":345,"line_end":345,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":79452,"byte_end":79461,"line_start":346,"line_end":346,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":80177,"byte_end":80185,"line_start":367,"line_end":367,"column_start":12,"column_end":20},"name":"position","qualname":"<Parser>::position","value":"fn position<'_>(&'_ Self) -> SourcePosition","parent":null,"children":[],"decl_id":null,"docs":" Return the current position within the input.","sig":null,"attributes":[{"value":"/ Return the current position within the input.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":80018,"byte_end":80067,"line_start":363,"line_end":363,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":80072,"byte_end":80075,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This can be used with the `Parser::slice` and `slice_from` methods.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":80080,"byte_end":80151,"line_start":365,"line_end":365,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":80156,"byte_end":80165,"line_start":366,"line_end":366,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":80336,"byte_end":80359,"line_start":373,"line_end":373,"column_start":12,"column_end":35},"name":"current_source_location","qualname":"<Parser>::current_source_location","value":"fn current_source_location<'_>(&'_ Self) -> SourceLocation","parent":null,"children":[],"decl_id":null,"docs":" The current line number and column number.\n","sig":null,"attributes":[{"value":"/ The current line number and column number.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":80264,"byte_end":80310,"line_start":371,"line_end":371,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":80315,"byte_end":80324,"line_start":372,"line_end":372,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":80676,"byte_end":80698,"line_start":382,"line_end":382,"column_start":12,"column_end":34},"name":"current_source_map_url","qualname":"<Parser>::current_source_map_url","value":"fn current_source_map_url<'_>(&'_ Self) -> Option<&'_ str>","parent":null,"children":[],"decl_id":null,"docs":" The source map URL, if known.","sig":null,"attributes":[{"value":"/ The source map URL, if known.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":80453,"byte_end":80486,"line_start":377,"line_end":377,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":80491,"byte_end":80494,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ The source map URL is extracted from a specially formatted","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":80499,"byte_end":80561,"line_start":379,"line_end":379,"column_start":5,"column_end":67}},{"value":"/ comment.  The last such comment is used, so this value may","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":80566,"byte_end":80628,"line_start":380,"line_end":380,"column_start":5,"column_end":67}},{"value":"/ change as parsing proceeds.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":80633,"byte_end":80664,"line_start":381,"line_end":381,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":81004,"byte_end":81022,"line_start":391,"line_end":391,"column_start":12,"column_end":30},"name":"current_source_url","qualname":"<Parser>::current_source_url","value":"fn current_source_url<'_>(&'_ Self) -> Option<&'_ str>","parent":null,"children":[],"decl_id":null,"docs":" The source URL, if known.","sig":null,"attributes":[{"value":"/ The source URL, if known.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":80789,"byte_end":80818,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":80823,"byte_end":80826,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ The source URL is extracted from a specially formatted","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":80831,"byte_end":80889,"line_start":388,"line_end":388,"column_start":5,"column_end":63}},{"value":"/ comment.  The last such comment is used, so this value may","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":80894,"byte_end":80956,"line_start":389,"line_end":389,"column_start":5,"column_end":67}},{"value":"/ change as parsing proceeds.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":80961,"byte_end":80992,"line_start":390,"line_end":390,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":81191,"byte_end":81206,"line_start":397,"line_end":397,"column_start":12,"column_end":27},"name":"new_basic_error","qualname":"<Parser>::new_basic_error","value":"fn new_basic_error<'_>(&'_ Self, BasicParseErrorKind) -> BasicParseError","parent":null,"children":[],"decl_id":null,"docs":" Create a new BasicParseError at the current location\n","sig":null,"attributes":[{"value":"/ Create a new BasicParseError at the current location","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":81109,"byte_end":81165,"line_start":395,"line_end":395,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":81170,"byte_end":81179,"line_start":396,"line_end":396,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":81478,"byte_end":81487,"line_start":406,"line_end":406,"column_start":12,"column_end":21},"name":"new_error","qualname":"<Parser>::new_error","value":"fn new_error<E, '_>(&'_ Self, BasicParseErrorKind) -> ParseError","parent":null,"children":[],"decl_id":null,"docs":" Create a new basic ParseError at the current location\n","sig":null,"attributes":[{"value":"/ Create a new basic ParseError at the current location","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":81395,"byte_end":81452,"line_start":404,"line_end":404,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":81457,"byte_end":81466,"line_start":405,"line_end":405,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":81784,"byte_end":81800,"line_start":415,"line_end":415,"column_start":12,"column_end":28},"name":"new_custom_error","qualname":"<Parser>::new_custom_error","value":"fn new_custom_error<E1, E2, '_>(&'_ Self, E1) -> ParseError where E1: Into<E2>","parent":null,"children":[],"decl_id":null,"docs":" Create a new custom BasicParseError at the current location\n","sig":null,"attributes":[{"value":"/ Create a new custom BasicParseError at the current location","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":81695,"byte_end":81758,"line_start":413,"line_end":413,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":81763,"byte_end":81772,"line_start":414,"line_end":414,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":82034,"byte_end":82066,"line_start":421,"line_end":421,"column_start":12,"column_end":44},"name":"new_basic_unexpected_token_error","qualname":"<Parser>::new_basic_unexpected_token_error","value":"fn new_basic_unexpected_token_error<'_>(&'_ Self, Token) -> BasicParseError","parent":null,"children":[],"decl_id":null,"docs":" Create a new unexpected token BasicParseError at the current location\n","sig":null,"attributes":[{"value":"/ Create a new unexpected token BasicParseError at the current location","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":81935,"byte_end":82008,"line_start":419,"line_end":419,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":82013,"byte_end":82022,"line_start":420,"line_end":420,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":82296,"byte_end":82322,"line_start":427,"line_end":427,"column_start":12,"column_end":38},"name":"new_unexpected_token_error","qualname":"<Parser>::new_unexpected_token_error","value":"fn new_unexpected_token_error<E, '_>(&'_ Self, Token) -> ParseError","parent":null,"children":[],"decl_id":null,"docs":" Create a new unexpected token ParseError at the current location\n","sig":null,"attributes":[{"value":"/ Create a new unexpected token ParseError at the current location","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":82202,"byte_end":82270,"line_start":425,"line_end":425,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":82275,"byte_end":82284,"line_start":426,"line_end":426,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":82554,"byte_end":82578,"line_start":433,"line_end":433,"column_start":12,"column_end":36},"name":"new_error_for_next_token","qualname":"<Parser>::new_error_for_next_token","value":"fn new_error_for_next_token<E, '_>(&'_ mut Self) -> ParseError","parent":null,"children":[],"decl_id":null,"docs":" Create a new unexpected token or EOF ParseError at the current location\n","sig":null,"attributes":[{"value":"/ Create a new unexpected token or EOF ParseError at the current location","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":82453,"byte_end":82528,"line_start":431,"line_end":431,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":82533,"byte_end":82542,"line_start":432,"line_end":432,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":83023,"byte_end":83028,"line_start":445,"line_end":445,"column_start":12,"column_end":17},"name":"state","qualname":"<Parser>::state","value":"fn state<'_>(&'_ Self) -> ParserState","parent":null,"children":[],"decl_id":null,"docs":" Return the current internal state of the parser (including position within the input).","sig":null,"attributes":[{"value":"/ Return the current internal state of the parser (including position within the input).","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":82825,"byte_end":82915,"line_start":441,"line_end":441,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":82920,"byte_end":82923,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ This state can later be restored with the `Parser::reset` method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":82928,"byte_end":82997,"line_start":443,"line_end":443,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":83002,"byte_end":83011,"line_start":444,"line_end":444,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":83288,"byte_end":83303,"line_start":454,"line_end":454,"column_start":12,"column_end":27},"name":"skip_whitespace","qualname":"<Parser>::skip_whitespace","value":"fn skip_whitespace<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Advance the input until the next token that’s not whitespace or a comment.\n","sig":null,"attributes":[{"value":"/ Advance the input until the next token that’s not whitespace or a comment.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":83182,"byte_end":83262,"line_start":452,"line_end":452,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":83267,"byte_end":83276,"line_start":453,"line_end":453,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":84310,"byte_end":84315,"line_start":485,"line_end":485,"column_start":12,"column_end":17},"name":"reset","qualname":"<Parser>::reset","value":"fn reset<'_, '_>(&'_ mut Self, &'_ ParserState)","parent":null,"children":[],"decl_id":null,"docs":" Restore the internal state of the parser (including position within the input)\n to what was previously saved by the `Parser::position` method.","sig":null,"attributes":[{"value":"/ Restore the internal state of the parser (including position within the input)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":84033,"byte_end":84115,"line_start":480,"line_end":480,"column_start":5,"column_end":87}},{"value":"/ to what was previously saved by the `Parser::position` method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":84120,"byte_end":84186,"line_start":481,"line_end":481,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":84191,"byte_end":84194,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ Should only be used with `SourcePosition` values from the same `Parser` instance.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":84199,"byte_end":84284,"line_start":483,"line_end":483,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":84289,"byte_end":84298,"line_start":484,"line_end":484,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":84583,"byte_end":84612,"line_start":493,"line_end":493,"column_start":12,"column_end":41},"name":"look_for_var_or_env_functions","qualname":"<Parser>::look_for_var_or_env_functions","value":"fn look_for_var_or_env_functions<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Start looking for `var()` / `env()` functions. (See the\n `.seen_var_or_env_functions()` method.)\n","sig":null,"attributes":[{"value":"/ Start looking for `var()` / `env()` functions. (See the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":84450,"byte_end":84509,"line_start":490,"line_end":490,"column_start":5,"column_end":64}},{"value":"/ `.seen_var_or_env_functions()` method.)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":84514,"byte_end":84557,"line_start":491,"line_end":491,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":84562,"byte_end":84571,"line_start":492,"line_end":492,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":84894,"byte_end":84919,"line_start":501,"line_end":501,"column_start":12,"column_end":37},"name":"seen_var_or_env_functions","qualname":"<Parser>::seen_var_or_env_functions","value":"fn seen_var_or_env_functions<'_>(&'_ mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return whether a `var()` or `env()` function has been seen by the\n tokenizer since either `look_for_var_or_env_functions` was called, and\n stop looking.\n","sig":null,"attributes":[{"value":"/ Return whether a `var()` or `env()` function has been seen by the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":84698,"byte_end":84767,"line_start":497,"line_end":497,"column_start":5,"column_end":74}},{"value":"/ tokenizer since either `look_for_var_or_env_functions` was called, and","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":84772,"byte_end":84846,"line_start":498,"line_end":498,"column_start":5,"column_end":79}},{"value":"/ stop looking.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":84851,"byte_end":84868,"line_start":499,"line_end":499,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":84873,"byte_end":84882,"line_start":500,"line_end":500,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":85124,"byte_end":85129,"line_start":507,"line_end":507,"column_start":12,"column_end":17},"name":"try","qualname":"<Parser>::try","value":"fn r#try<F, T, E, '_>(&'_ mut Self, F) -> Result<T, E> where\nF: for<'_> FnOnce(&'_ mut Parser) -> Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" The old name of `try_parse`, which requires raw identifiers in the Rust 2018 edition.\n","sig":null,"attributes":[{"value":"/ The old name of `try_parse`, which requires raw identifiers in the Rust 2018 edition.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":85009,"byte_end":85098,"line_start":505,"line_end":505,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":85103,"byte_end":85112,"line_start":506,"line_end":506,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":85553,"byte_end":85562,"line_start":519,"line_end":519,"column_start":12,"column_end":21},"name":"try_parse","qualname":"<Parser>::try_parse","value":"fn try_parse<F, T, E, '_>(&'_ mut Self, F) -> Result<T, E> where\nF: for<'_> FnOnce(&'_ mut Parser) -> Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Execute the given closure, passing it the parser.\n If the result (returned unchanged) is `Err`,\n the internal state of the parser  (including position within the input)\n is restored to what it was before the call.\n","sig":null,"attributes":[{"value":"/ Execute the given closure, passing it the parser.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":85289,"byte_end":85342,"line_start":514,"line_end":514,"column_start":5,"column_end":58}},{"value":"/ If the result (returned unchanged) is `Err`,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":85347,"byte_end":85395,"line_start":515,"line_end":515,"column_start":5,"column_end":53}},{"value":"/ the internal state of the parser  (including position within the input)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":85400,"byte_end":85475,"line_start":516,"line_end":516,"column_start":5,"column_end":80}},{"value":"/ is restored to what it was before the call.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":85480,"byte_end":85527,"line_start":517,"line_end":517,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":85532,"byte_end":85541,"line_start":518,"line_end":518,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":85906,"byte_end":85911,"line_start":533,"line_end":533,"column_start":12,"column_end":17},"name":"slice","qualname":"<Parser>::slice","value":"fn slice<'_>(&'_ Self, Range<SourcePosition>) -> &'i str","parent":null,"children":[],"decl_id":null,"docs":" Return a slice of the CSS input\n","sig":null,"attributes":[{"value":"/ Return a slice of the CSS input","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":85845,"byte_end":85880,"line_start":531,"line_end":531,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":85885,"byte_end":85894,"line_start":532,"line_end":532,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":86121,"byte_end":86131,"line_start":539,"line_end":539,"column_start":12,"column_end":22},"name":"slice_from","qualname":"<Parser>::slice_from","value":"fn slice_from<'_>(&'_ Self, SourcePosition) -> &'i str","parent":null,"children":[],"decl_id":null,"docs":" Return a slice of the CSS input, from the given position to the current one.\n","sig":null,"attributes":[{"value":"/ Return a slice of the CSS input, from the given position to the current one.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":86015,"byte_end":86095,"line_start":537,"line_end":537,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":86100,"byte_end":86109,"line_start":538,"line_end":538,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":86853,"byte_end":86857,"line_start":554,"line_end":554,"column_start":12,"column_end":16},"name":"next","qualname":"<Parser>::next","value":"fn next<'_>(&'_ mut Self) -> Result<&'_ Token, BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Return the next token in the input that is neither whitespace or a comment,\n and advance the position accordingly.","sig":null,"attributes":[{"value":"/ Return the next token in the input that is neither whitespace or a comment,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":86251,"byte_end":86330,"line_start":543,"line_end":543,"column_start":5,"column_end":84}},{"value":"/ and advance the position accordingly.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":86335,"byte_end":86376,"line_start":544,"line_end":544,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":86381,"byte_end":86384,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ After returning a `Function`, `ParenthesisBlock`,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":86389,"byte_end":86442,"line_start":546,"line_end":546,"column_start":5,"column_end":58}},{"value":"/ `CurlyBracketBlock`, or `SquareBracketBlock` token,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":86447,"byte_end":86502,"line_start":547,"line_end":547,"column_start":5,"column_end":60}},{"value":"/ the next call will skip until after the matching `CloseParenthesis`,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":86507,"byte_end":86579,"line_start":548,"line_end":548,"column_start":5,"column_end":77}},{"value":"/ `CloseCurlyBracket`, or `CloseSquareBracket` token.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":86584,"byte_end":86639,"line_start":549,"line_end":549,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":86644,"byte_end":86647,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ See the `Parser::parse_nested_block` method to parse the content of functions or blocks.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":86652,"byte_end":86744,"line_start":551,"line_end":551,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":86749,"byte_end":86752,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This only returns a closing token when it is unmatched (and therefore an error).","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":86757,"byte_end":86841,"line_start":553,"line_end":553,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":87087,"byte_end":87112,"line_start":560,"line_end":560,"column_start":12,"column_end":37},"name":"next_including_whitespace","qualname":"<Parser>::next_including_whitespace","value":"fn next_including_whitespace<'_>(&'_ mut Self)\n-> Result<&'_ Token, BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Parser::next`, but does not skip whitespace tokens.\n","sig":null,"attributes":[{"value":"/ Same as `Parser::next`, but does not skip whitespace tokens.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":87011,"byte_end":87075,"line_start":559,"line_end":559,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":87788,"byte_end":87826,"line_start":577,"line_end":577,"column_start":12,"column_end":50},"name":"next_including_whitespace_and_comments","qualname":"<Parser>::next_including_whitespace_and_comments","value":"fn next_including_whitespace_and_comments<'_>(&'_ mut Self)\n-> Result<&'_ Token, BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Parser::next`, but does not skip whitespace or comment tokens.","sig":null,"attributes":[{"value":"/ Same as `Parser::next`, but does not skip whitespace or comment tokens.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":87441,"byte_end":87516,"line_start":571,"line_end":571,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":87521,"byte_end":87524,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ **Note**: This should only be used in contexts like a CSS pre-processor","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":87529,"byte_end":87604,"line_start":573,"line_end":573,"column_start":5,"column_end":80}},{"value":"/ where comments are preserved.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":87609,"byte_end":87642,"line_start":574,"line_end":574,"column_start":5,"column_end":38}},{"value":"/ When parsing higher-level values, per the CSS Syntax specification,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":87647,"byte_end":87718,"line_start":575,"line_end":575,"column_start":5,"column_end":76}},{"value":"/ comments should always be ignored between tokens.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":87723,"byte_end":87776,"line_start":576,"line_end":576,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":89829,"byte_end":89843,"line_start":630,"line_end":630,"column_start":12,"column_end":26},"name":"parse_entirely","qualname":"<Parser>::parse_entirely","value":"fn parse_entirely<F, T, E, '_>(&'_ mut Self, F) -> Result<T, ParseError> where\nF: for<'_> FnOnce(&'_ mut Parser) -> Result<T, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Have the given closure parse something, then check the the input is exhausted.\n The result is overridden to `Err(())` if some input remains.","sig":null,"attributes":[{"value":"/ Have the given closure parse something, then check the the input is exhausted.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":89571,"byte_end":89653,"line_start":625,"line_end":625,"column_start":5,"column_end":87}},{"value":"/ The result is overridden to `Err(())` if some input remains.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":89658,"byte_end":89722,"line_start":626,"line_end":626,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":89727,"byte_end":89730,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ This can help tell e.g. `color: green;` from `color: green 4px;`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":89735,"byte_end":89803,"line_start":628,"line_end":628,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":89808,"byte_end":89817,"line_start":629,"line_end":629,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":90664,"byte_end":90685,"line_start":650,"line_end":650,"column_start":12,"column_end":33},"name":"parse_comma_separated","qualname":"<Parser>::parse_comma_separated","value":"fn parse_comma_separated<F, T, E, '_>(&'_ mut Self, F)\n-> Result<Vec<T>, ParseError> where F: for<'tt, '_> FnMut(&'_ mut Parser) ->\nResult<T, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse a list of comma-separated values, all with the same syntax.","sig":null,"attributes":[{"value":"/ Parse a list of comma-separated values, all with the same syntax.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":90093,"byte_end":90162,"line_start":639,"line_end":639,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":90167,"byte_end":90170,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ The given closure is called repeatedly with a \"delimited\" parser","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":90175,"byte_end":90243,"line_start":641,"line_end":641,"column_start":5,"column_end":73}},{"value":"/ (see the `Parser::parse_until_before` method)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":90248,"byte_end":90297,"line_start":642,"line_end":642,"column_start":5,"column_end":54}},{"value":"/ so that it can over consume the input past a comma at this block/function nesting level.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":90302,"byte_end":90394,"line_start":643,"line_end":643,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":90399,"byte_end":90402,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Successful results are accumulated in a vector.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":90407,"byte_end":90458,"line_start":645,"line_end":645,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":90463,"byte_end":90466,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ This method retuns `Err(())` the first time that a closure call does,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":90471,"byte_end":90544,"line_start":647,"line_end":647,"column_start":5,"column_end":78}},{"value":"/ or if a closure call leaves some input before the next comma or the end of the input.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":90549,"byte_end":90638,"line_start":648,"line_end":648,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":90643,"byte_end":90652,"line_start":649,"line_end":649,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":92212,"byte_end":92230,"line_start":685,"line_end":685,"column_start":12,"column_end":30},"name":"parse_nested_block","qualname":"<Parser>::parse_nested_block","value":"fn parse_nested_block<F, T, E, '_>(&'_ mut Self, F) -> Result<T, ParseError>\nwhere F: for<'tt, '_> FnOnce(&'_ mut Parser) -> Result<T, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse the content of a block or function.","sig":null,"attributes":[{"value":"/ Parse the content of a block or function.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":91606,"byte_end":91651,"line_start":673,"line_end":673,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":91656,"byte_end":91659,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ This method panics if the last token yielded by this parser","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":91664,"byte_end":91727,"line_start":675,"line_end":675,"column_start":5,"column_end":68}},{"value":"/ (from one of the `next*` methods)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":91732,"byte_end":91769,"line_start":676,"line_end":676,"column_start":5,"column_end":42}},{"value":"/ is not a on that marks the start of a block or function:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":91774,"byte_end":91834,"line_start":677,"line_end":677,"column_start":5,"column_end":65}},{"value":"/ a `Function`, `ParenthesisBlock`, `CurlyBracketBlock`, or `SquareBracketBlock`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":91839,"byte_end":91922,"line_start":678,"line_end":678,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":91927,"byte_end":91930,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ The given closure is called with a \"delimited\" parser","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":91935,"byte_end":91992,"line_start":680,"line_end":680,"column_start":5,"column_end":62}},{"value":"/ that stops at the end of the block or function (at the matching closing token).","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":91997,"byte_end":92080,"line_start":681,"line_end":681,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":92085,"byte_end":92088,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ The result is overridden to `Err(())` if the closure leaves some input before that point.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":92093,"byte_end":92186,"line_start":683,"line_end":683,"column_start":5,"column_end":98}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":92191,"byte_end":92200,"line_start":684,"line_end":684,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":92923,"byte_end":92941,"line_start":701,"line_end":701,"column_start":12,"column_end":30},"name":"parse_until_before","qualname":"<Parser>::parse_until_before","value":"fn parse_until_before<F, T, E, '_>(&'_ mut Self, Delimiters, F)\n-> Result<T, ParseError> where F: for<'tt, '_> FnOnce(&'_ mut Parser) ->\nResult<T, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Limit parsing to until a given delimiter or the end of the input. (E.g.\n a semicolon for a property value.)","sig":null,"attributes":[{"value":"/ Limit parsing to until a given delimiter or the end of the input. (E.g.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":92442,"byte_end":92517,"line_start":692,"line_end":692,"column_start":5,"column_end":80}},{"value":"/ a semicolon for a property value.)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":92522,"byte_end":92560,"line_start":693,"line_end":693,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":92565,"byte_end":92568,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ The given closure is called with a \"delimited\" parser","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":92573,"byte_end":92630,"line_start":695,"line_end":695,"column_start":5,"column_end":62}},{"value":"/ that stops before the first character at this block/function nesting level","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":92635,"byte_end":92713,"line_start":696,"line_end":696,"column_start":5,"column_end":83}},{"value":"/ that matches the given set of delimiters, or at the end of the input.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":92718,"byte_end":92791,"line_start":697,"line_end":697,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":92796,"byte_end":92799,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ The result is overridden to `Err(())` if the closure leaves some input before that point.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":92804,"byte_end":92897,"line_start":699,"line_end":699,"column_start":5,"column_end":98}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":92902,"byte_end":92911,"line_start":700,"line_end":700,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":93536,"byte_end":93553,"line_start":718,"line_end":718,"column_start":12,"column_end":29},"name":"parse_until_after","qualname":"<Parser>::parse_until_after","value":"fn parse_until_after<F, T, E, '_>(&'_ mut Self, Delimiters, F)\n-> Result<T, ParseError> where F: for<'tt, '_> FnOnce(&'_ mut Parser) ->\nResult<T, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Like `parse_until_before`, but also consume the delimiter token.","sig":null,"attributes":[{"value":"/ Like `parse_until_before`, but also consume the delimiter token.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":93220,"byte_end":93288,"line_start":712,"line_end":712,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":93293,"byte_end":93296,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ This can be useful when you don’t need to know which delimiter it was","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":93301,"byte_end":93376,"line_start":714,"line_end":714,"column_start":5,"column_end":78}},{"value":"/ (e.g. if these is only one in the given set)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":93381,"byte_end":93429,"line_start":715,"line_end":715,"column_start":5,"column_end":53}},{"value":"/ or if it was there at all (as opposed to reaching the end of the input).","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":93434,"byte_end":93510,"line_start":716,"line_end":716,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":93515,"byte_end":93524,"line_start":717,"line_end":717,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":93909,"byte_end":93926,"line_start":731,"line_end":731,"column_start":12,"column_end":29},"name":"expect_whitespace","qualname":"<Parser>::expect_whitespace","value":"fn expect_whitespace<'_>(&'_ mut Self) -> Result<&'i str, BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse a <whitespace-token> and return its value.\n","sig":null,"attributes":[{"value":"/ Parse a <whitespace-token> and return its value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":93831,"byte_end":93883,"line_start":729,"line_end":729,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":93888,"byte_end":93897,"line_start":730,"line_end":730,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":94333,"byte_end":94345,"line_start":741,"line_end":741,"column_start":12,"column_end":24},"name":"expect_ident","qualname":"<Parser>::expect_ident","value":"fn expect_ident<'_>(&'_ mut Self) -> Result<&'_ CowRcStr, BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse a <ident-token> and return the unescaped value.\n","sig":null,"attributes":[{"value":"/ Parse a <ident-token> and return the unescaped value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":94250,"byte_end":94307,"line_start":739,"line_end":739,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":94312,"byte_end":94321,"line_start":740,"line_end":740,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":94565,"byte_end":94584,"line_start":749,"line_end":749,"column_start":12,"column_end":31},"name":"expect_ident_cloned","qualname":"<Parser>::expect_ident_cloned","value":"fn expect_ident_cloned<'_>(&'_ mut Self) -> Result<CowRcStr, BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" expect_ident, but clone the CowRcStr\n","sig":null,"attributes":[{"value":"/ expect_ident, but clone the CowRcStr","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":94499,"byte_end":94539,"line_start":747,"line_end":747,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":94544,"byte_end":94553,"line_start":748,"line_end":748,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":94825,"byte_end":94846,"line_start":755,"line_end":755,"column_start":12,"column_end":33},"name":"expect_ident_matching","qualname":"<Parser>::expect_ident_matching","value":"fn expect_ident_matching<'_, '_>(&'_ mut Self, &'_ str)\n-> Result<(), BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse a <ident-token> whose unescaped value is an ASCII-insensitive match for the given value.\n","sig":null,"attributes":[{"value":"/ Parse a <ident-token> whose unescaped value is an ASCII-insensitive match for the given value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":94701,"byte_end":94799,"line_start":753,"line_end":753,"column_start":5,"column_end":103}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":94804,"byte_end":94813,"line_start":754,"line_end":754,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":95161,"byte_end":95174,"line_start":766,"line_end":766,"column_start":12,"column_end":25},"name":"expect_string","qualname":"<Parser>::expect_string","value":"fn expect_string<'_>(&'_ mut Self) -> Result<&'_ CowRcStr, BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse a <string-token> and return the unescaped value.\n","sig":null,"attributes":[{"value":"/ Parse a <string-token> and return the unescaped value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":95077,"byte_end":95135,"line_start":764,"line_end":764,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":95140,"byte_end":95149,"line_start":765,"line_end":765,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":95402,"byte_end":95422,"line_start":774,"line_end":774,"column_start":12,"column_end":32},"name":"expect_string_cloned","qualname":"<Parser>::expect_string_cloned","value":"fn expect_string_cloned<'_>(&'_ mut Self) -> Result<CowRcStr, BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" expect_string, but clone the CowRcStr\n","sig":null,"attributes":[{"value":"/ expect_string, but clone the CowRcStr","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":95335,"byte_end":95376,"line_start":772,"line_end":772,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":95381,"byte_end":95390,"line_start":773,"line_end":773,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":95651,"byte_end":95673,"line_start":780,"line_end":780,"column_start":12,"column_end":34},"name":"expect_ident_or_string","qualname":"<Parser>::expect_ident_or_string","value":"fn expect_ident_or_string<'_>(&'_ mut Self)\n-> Result<&'_ CowRcStr, BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse either a <ident-token> or a <string-token>, and return the unescaped value.\n","sig":null,"attributes":[{"value":"/ Parse either a <ident-token> or a <string-token>, and return the unescaped value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":95540,"byte_end":95625,"line_start":778,"line_end":778,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":95630,"byte_end":95639,"line_start":779,"line_end":779,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":95965,"byte_end":95975,"line_start":789,"line_end":789,"column_start":12,"column_end":22},"name":"expect_url","qualname":"<Parser>::expect_url","value":"fn expect_url<'_>(&'_ mut Self) -> Result<CowRcStr, BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse a <url-token> and return the unescaped value.\n","sig":null,"attributes":[{"value":"/ Parse a <url-token> and return the unescaped value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":95884,"byte_end":95939,"line_start":787,"line_end":787,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":95944,"byte_end":95953,"line_start":788,"line_end":788,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":96544,"byte_end":96564,"line_start":803,"line_end":803,"column_start":12,"column_end":32},"name":"expect_url_or_string","qualname":"<Parser>::expect_url_or_string","value":"fn expect_url_or_string<'_>(&'_ mut Self) -> Result<CowRcStr, BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse either a <url-token> or a <string-token>, and return the unescaped value.\n","sig":null,"attributes":[{"value":"/ Parse either a <url-token> or a <string-token>, and return the unescaped value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":96435,"byte_end":96518,"line_start":801,"line_end":801,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":96523,"byte_end":96532,"line_start":802,"line_end":802,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":97171,"byte_end":97184,"line_start":818,"line_end":818,"column_start":12,"column_end":25},"name":"expect_number","qualname":"<Parser>::expect_number","value":"fn expect_number<'_>(&'_ mut Self) -> Result<f32, BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse a <number-token> and return the integer value.\n","sig":null,"attributes":[{"value":"/ Parse a <number-token> and return the integer value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":97089,"byte_end":97145,"line_start":816,"line_end":816,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":97150,"byte_end":97159,"line_start":817,"line_end":817,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":97452,"byte_end":97466,"line_start":826,"line_end":826,"column_start":12,"column_end":26},"name":"expect_integer","qualname":"<Parser>::expect_integer","value":"fn expect_integer<'_>(&'_ mut Self) -> Result<i32, BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse a <number-token> that does not have a fractional part, and return the integer value.\n","sig":null,"attributes":[{"value":"/ Parse a <number-token> that does not have a fractional part, and return the integer value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":97332,"byte_end":97426,"line_start":824,"line_end":824,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":97431,"byte_end":97440,"line_start":825,"line_end":825,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":97793,"byte_end":97810,"line_start":835,"line_end":835,"column_start":12,"column_end":29},"name":"expect_percentage","qualname":"<Parser>::expect_percentage","value":"fn expect_percentage<'_>(&'_ mut Self) -> Result<f32, BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse a <percentage-token> and return the value.\n `0%` and `100%` map to `0.0` and `1.0` (not `100.0`), respectively.\n","sig":null,"attributes":[{"value":"/ Parse a <percentage-token> and return the value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":97639,"byte_end":97691,"line_start":832,"line_end":832,"column_start":5,"column_end":57}},{"value":"/ `0%` and `100%` map to `0.0` and `1.0` (not `100.0`), respectively.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":97696,"byte_end":97767,"line_start":833,"line_end":833,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":97772,"byte_end":97781,"line_start":834,"line_end":834,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":98028,"byte_end":98040,"line_start":843,"line_end":843,"column_start":12,"column_end":24},"name":"expect_colon","qualname":"<Parser>::expect_colon","value":"fn expect_colon<'_>(&'_ mut Self) -> Result<(), BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `:` <colon-token>.\n","sig":null,"attributes":[{"value":"/ Parse a `:` <colon-token>.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":97972,"byte_end":98002,"line_start":841,"line_end":841,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":98007,"byte_end":98016,"line_start":842,"line_end":842,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":98229,"byte_end":98245,"line_start":851,"line_end":851,"column_start":12,"column_end":28},"name":"expect_semicolon","qualname":"<Parser>::expect_semicolon","value":"fn expect_semicolon<'_>(&'_ mut Self) -> Result<(), BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `;` <semicolon-token>.\n","sig":null,"attributes":[{"value":"/ Parse a `;` <semicolon-token>.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":98169,"byte_end":98203,"line_start":849,"line_end":849,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":98208,"byte_end":98217,"line_start":850,"line_end":850,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":98434,"byte_end":98446,"line_start":859,"line_end":859,"column_start":12,"column_end":24},"name":"expect_comma","qualname":"<Parser>::expect_comma","value":"fn expect_comma<'_>(&'_ mut Self) -> Result<(), BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `,` <comma-token>.\n","sig":null,"attributes":[{"value":"/ Parse a `,` <comma-token>.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":98378,"byte_end":98408,"line_start":857,"line_end":857,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":98413,"byte_end":98422,"line_start":858,"line_end":858,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":98648,"byte_end":98660,"line_start":867,"line_end":867,"column_start":12,"column_end":24},"name":"expect_delim","qualname":"<Parser>::expect_delim","value":"fn expect_delim<'_>(&'_ mut Self, char) -> Result<(), BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse a <delim-token> with the given value.\n","sig":null,"attributes":[{"value":"/ Parse a <delim-token> with the given value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":98575,"byte_end":98622,"line_start":865,"line_end":865,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":98627,"byte_end":98636,"line_start":866,"line_end":866,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":99018,"byte_end":99044,"line_start":877,"line_end":877,"column_start":12,"column_end":38},"name":"expect_curly_bracket_block","qualname":"<Parser>::expect_curly_bracket_block","value":"fn expect_curly_bracket_block<'_>(&'_ mut Self) -> Result<(), BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `{ /* ... */ }` curly brackets block.","sig":null,"attributes":[{"value":"/ Parse a `{ /* ... */ }` curly brackets block.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":98845,"byte_end":98894,"line_start":873,"line_end":873,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":98899,"byte_end":98902,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ If the result is `Ok`, you can then call the `Parser::parse_nested_block` method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":98907,"byte_end":98992,"line_start":875,"line_end":875,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":98997,"byte_end":99006,"line_start":876,"line_end":876,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":99359,"byte_end":99386,"line_start":887,"line_end":887,"column_start":12,"column_end":39},"name":"expect_square_bracket_block","qualname":"<Parser>::expect_square_bracket_block","value":"fn expect_square_bracket_block<'_>(&'_ mut Self)\n-> Result<(), BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `[ /* ... */ ]` square brackets block.","sig":null,"attributes":[{"value":"/ Parse a `[ /* ... */ ]` square brackets block.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":99185,"byte_end":99235,"line_start":883,"line_end":883,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":99240,"byte_end":99243,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ If the result is `Ok`, you can then call the `Parser::parse_nested_block` method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":99248,"byte_end":99333,"line_start":885,"line_end":885,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":99338,"byte_end":99347,"line_start":886,"line_end":886,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":99698,"byte_end":99722,"line_start":897,"line_end":897,"column_start":12,"column_end":36},"name":"expect_parenthesis_block","qualname":"<Parser>::expect_parenthesis_block","value":"fn expect_parenthesis_block<'_>(&'_ mut Self) -> Result<(), BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `( /* ... */ )` parenthesis block.","sig":null,"attributes":[{"value":"/ Parse a `( /* ... */ )` parenthesis block.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":99528,"byte_end":99574,"line_start":893,"line_end":893,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":99579,"byte_end":99582,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ If the result is `Ok`, you can then call the `Parser::parse_nested_block` method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":99587,"byte_end":99672,"line_start":895,"line_end":895,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":99677,"byte_end":99686,"line_start":896,"line_end":896,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":100035,"byte_end":100050,"line_start":907,"line_end":907,"column_start":12,"column_end":27},"name":"expect_function","qualname":"<Parser>::expect_function","value":"fn expect_function<'_>(&'_ mut Self) -> Result<&'_ CowRcStr, BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse a <function> token and return its name.","sig":null,"attributes":[{"value":"/ Parse a <function> token and return its name.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":99862,"byte_end":99911,"line_start":903,"line_end":903,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":99916,"byte_end":99919,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ If the result is `Ok`, you can then call the `Parser::parse_nested_block` method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":99924,"byte_end":100009,"line_start":905,"line_end":905,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":100014,"byte_end":100023,"line_start":906,"line_end":906,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":100419,"byte_end":100443,"line_start":917,"line_end":917,"column_start":12,"column_end":36},"name":"expect_function_matching","qualname":"<Parser>::expect_function_matching","value":"fn expect_function_matching<'_, '_>(&'_ mut Self, &'_ str)\n-> Result<(), BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse a <function> token whose name is an ASCII-insensitive match for the given value.","sig":null,"attributes":[{"value":"/ Parse a <function> token whose name is an ASCII-insensitive match for the given value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":100205,"byte_end":100295,"line_start":913,"line_end":913,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":100300,"byte_end":100303,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ If the result is `Ok`, you can then call the `Parser::parse_nested_block` method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":100308,"byte_end":100393,"line_start":915,"line_end":915,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":100398,"byte_end":100407,"line_start":916,"line_end":916,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":100887,"byte_end":100908,"line_start":930,"line_end":930,"column_start":12,"column_end":33},"name":"expect_no_error_token","qualname":"<Parser>::expect_no_error_token","value":"fn expect_no_error_token<'_>(&'_ mut Self) -> Result<(), BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse the input until exhaustion and check that it contains no “error” token.","sig":null,"attributes":[{"value":"/ Parse the input until exhaustion and check that it contains no “error” token.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":100673,"byte_end":100758,"line_start":926,"line_end":926,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":100763,"byte_end":100766,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ See `Token::is_parse_error`. This also checks nested blocks and functions recursively.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":100771,"byte_end":100861,"line_start":928,"line_end":928,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":100866,"byte_end":100875,"line_start":929,"line_end":929,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":799},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":106390,"byte_end":106395,"line_start":15,"line_end":15,"column_start":11,"column_end":16},"name":"ToCss","qualname":"::serializer::ToCss","value":"ToCss","parent":null,"children":[{"krate":0,"index":800},{"krate":0,"index":802}],"decl_id":null,"docs":" Trait for things the can serialize themselves in CSS syntax.\n","sig":null,"attributes":[{"value":"/ Trait for things the can serialize themselves in CSS syntax.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":106315,"byte_end":106379,"line_start":14,"line_end":14,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":106464,"byte_end":106470,"line_start":17,"line_end":17,"column_start":8,"column_end":14},"name":"to_css","qualname":"::serializer::ToCss::to_css","value":"fn to_css<W, '_, '_>(&'_ Self, &'_ mut W) -> fmt::Result where W: fmt::Write","parent":{"krate":0,"index":799},"children":[],"decl_id":null,"docs":" Serialize `self` in CSS syntax, writing to `dest`.\n","sig":null,"attributes":[{"value":"/ Serialize `self` in CSS syntax, writing to `dest`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":106402,"byte_end":106456,"line_start":16,"line_end":16,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":106725,"byte_end":106738,"line_start":25,"line_end":25,"column_start":8,"column_end":21},"name":"to_css_string","qualname":"::serializer::ToCss::to_css_string","value":"fn to_css_string<'_>(&'_ Self) -> String","parent":{"krate":0,"index":799},"children":[],"decl_id":null,"docs":" Serialize `self` in CSS syntax and return a string.","sig":null,"attributes":[{"value":"/ Serialize `self` in CSS syntax and return a string.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":106548,"byte_end":106603,"line_start":21,"line_end":21,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":106608,"byte_end":106611,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ (This is a convenience wrapper for `to_css` and probably should not be overridden.)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":106616,"byte_end":106703,"line_start":23,"line_end":23,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":106708,"byte_end":106717,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":107634,"byte_end":107640,"line_start":62,"line_end":62,"column_start":8,"column_end":14},"name":"to_css","qualname":"<Token as serializer::ToCss>::to_css","value":"fn to_css<W, '_, '_>(&'_ Self, &'_ mut W) -> fmt::Result where W: fmt::Write","parent":{"krate":0,"index":799},"children":[],"decl_id":{"krate":0,"index":800},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":815},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":112506,"byte_end":112526,"line_start":193,"line_end":193,"column_start":8,"column_end":28},"name":"serialize_identifier","qualname":"::serializer::serialize_identifier","value":"fn serialize_identifier<W, '_, '_>(&'_ str, &'_ mut W) -> fmt::Result where\nW: fmt::Write","parent":null,"children":[],"decl_id":null,"docs":" Write a CSS identifier, escaping characters as necessary.\n","sig":null,"attributes":[{"value":"/ Write a CSS identifier, escaping characters as necessary.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":112437,"byte_end":112498,"line_start":192,"line_end":192,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":817},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":113322,"byte_end":113336,"line_start":223,"line_end":223,"column_start":8,"column_end":22},"name":"serialize_name","qualname":"::serializer::serialize_name","value":"fn serialize_name<W, '_, '_>(&'_ str, &'_ mut W) -> fmt::Result where\nW: fmt::Write","parent":null,"children":[],"decl_id":null,"docs":" Write a CSS name, like a custom property name.","sig":null,"attributes":[{"value":"/ Write a CSS name, like a custom property name.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":113140,"byte_end":113190,"line_start":219,"line_end":219,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":113191,"byte_end":113194,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ You should only use this when you know what you're doing, when in doubt,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":113195,"byte_end":113271,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ consider using `serialize_identifier`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":113272,"byte_end":113314,"line_start":222,"line_end":222,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":821},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":114747,"byte_end":114763,"line_start":271,"line_end":271,"column_start":8,"column_end":24},"name":"serialize_string","qualname":"::serializer::serialize_string","value":"fn serialize_string<W, '_, '_>(&'_ str, &'_ mut W) -> fmt::Result where\nW: fmt::Write","parent":null,"children":[],"decl_id":null,"docs":" Write a double-quoted CSS string token, escaping content as necessary.\n","sig":null,"attributes":[{"value":"/ Write a double-quoted CSS string token, escaping content as necessary.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":114665,"byte_end":114739,"line_start":270,"line_end":270,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":823},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":115426,"byte_end":115441,"line_start":297,"line_end":297,"column_start":12,"column_end":27},"name":"CssStringWriter","qualname":"::serializer::CssStringWriter","value":"CssStringWriter {  }","parent":null,"children":[{"krate":0,"index":826}],"decl_id":null,"docs":" A `fmt::Write` adapter that escapes text for writing as a double-quoted CSS string.\n Quotes are not included.","sig":null,"attributes":[{"value":"/ A `fmt::Write` adapter that escapes text for writing as a double-quoted CSS string.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":114954,"byte_end":115041,"line_start":281,"line_end":281,"column_start":1,"column_end":88}},{"value":"/ Quotes are not included.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":115042,"byte_end":115070,"line_start":282,"line_end":282,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":115071,"byte_end":115074,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ Typical usage:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":115075,"byte_end":115093,"line_start":284,"line_end":284,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":115094,"byte_end":115097,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```{rust,ignore}","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":115098,"byte_end":115118,"line_start":286,"line_end":286,"column_start":1,"column_end":21}},{"value":"/ fn write_foo<W>(foo: &Foo, dest: &mut W) -> fmt::Result where W: fmt::Write {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":115119,"byte_end":115200,"line_start":287,"line_end":287,"column_start":1,"column_end":82}},{"value":"/     dest.write_str(\"\\\"\")?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":115201,"byte_end":115231,"line_start":288,"line_end":288,"column_start":1,"column_end":31}},{"value":"/     {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":115232,"byte_end":115241,"line_start":289,"line_end":289,"column_start":1,"column_end":10}},{"value":"/         let mut string_dest = CssStringWriter::new(dest);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":115242,"byte_end":115303,"line_start":290,"line_end":290,"column_start":1,"column_end":62}},{"value":"/         // Write into string_dest...","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":115304,"byte_end":115344,"line_start":291,"line_end":291,"column_start":1,"column_end":41}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":115345,"byte_end":115354,"line_start":292,"line_end":292,"column_start":1,"column_end":10}},{"value":"/     dest.write_str(\"\\\"\")?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":115355,"byte_end":115385,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/     Ok(())","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":115386,"byte_end":115400,"line_start":294,"line_end":294,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":115401,"byte_end":115406,"line_start":295,"line_end":295,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":115407,"byte_end":115414,"line_start":296,"line_end":296,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":115607,"byte_end":115610,"line_start":306,"line_end":306,"column_start":12,"column_end":15},"name":"new","qualname":"<CssStringWriter>::new","value":"fn new(&'a mut W) -> CssStringWriter","parent":null,"children":[],"decl_id":null,"docs":" Wrap a text writer to create a `CssStringWriter`.\n","sig":null,"attributes":[{"value":"/ Wrap a text writer to create a `CssStringWriter`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":115542,"byte_end":115595,"line_start":305,"line_end":305,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":115791,"byte_end":115800,"line_start":315,"line_end":315,"column_start":8,"column_end":17},"name":"write_str","qualname":"<CssStringWriter as std::fmt::Write>::write_str","value":"fn write_str<'_, '_>(&'_ mut Self, &'_ str) -> fmt::Result","parent":{"krate":2,"index":10245},"children":[],"decl_id":{"krate":2,"index":10246},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1866},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":118525,"byte_end":118547,"line_start":403,"line_end":403,"column_start":12,"column_end":34},"name":"TokenSerializationType","qualname":"::serializer::TokenSerializationType","value":"","parent":null,"children":[],"decl_id":null,"docs":" A category of token. See the `needs_separator_when_before` method.\n","sig":null,"attributes":[{"value":"/ A category of token. See the `needs_separator_when_before` method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":118398,"byte_end":118468,"line_start":401,"line_end":401,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":118722,"byte_end":118729,"line_start":407,"line_end":407,"column_start":12,"column_end":19},"name":"nothing","qualname":"<TokenSerializationType>::nothing","value":"fn nothing() -> TokenSerializationType","parent":null,"children":[],"decl_id":null,"docs":" Return a value that represents the absence of a token, e.g. before the start of the input.\n","sig":null,"attributes":[{"value":"/ Return a value that represents the absence of a token, e.g. before the start of the input.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":118616,"byte_end":118710,"line_start":406,"line_end":406,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":118947,"byte_end":118961,"line_start":412,"line_end":412,"column_start":12,"column_end":26},"name":"set_if_nothing","qualname":"<TokenSerializationType>::set_if_nothing","value":"fn set_if_nothing<'_>(&'_ mut Self, TokenSerializationType)","parent":null,"children":[],"decl_id":null,"docs":" If this value is `TokenSerializationType::nothing()`, set it to the given value instead.\n","sig":null,"attributes":[{"value":"/ If this value is `TokenSerializationType::nothing()`, set it to the given value instead.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":118843,"byte_end":118935,"line_start":411,"line_end":411,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":119583,"byte_end":119610,"line_start":427,"line_end":427,"column_start":12,"column_end":39},"name":"needs_separator_when_before","qualname":"<TokenSerializationType>::needs_separator_when_before","value":"fn needs_separator_when_before(Self, TokenSerializationType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if, when a token of category `self` is serialized just before\n a token of category `other` with no whitespace in between,\n an empty comment `/**/` needs to be inserted between them\n so that they are not re-parsed as a single token.","sig":null,"attributes":[{"value":"/ Return true if, when a token of category `self` is serialized just before","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":119127,"byte_end":119204,"line_start":418,"line_end":418,"column_start":5,"column_end":82}},{"value":"/ a token of category `other` with no whitespace in between,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":119209,"byte_end":119271,"line_start":419,"line_end":419,"column_start":5,"column_end":67}},{"value":"/ an empty comment `/**/` needs to be inserted between them","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":119276,"byte_end":119337,"line_start":420,"line_end":420,"column_start":5,"column_end":66}},{"value":"/ so that they are not re-parsed as a single token.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":119342,"byte_end":119395,"line_start":421,"line_end":421,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":119400,"byte_end":119403,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ See https://drafts.csswg.org/css-syntax/#serialization","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":119408,"byte_end":119466,"line_start":423,"line_end":423,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":119471,"byte_end":119474,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ See https://github.com/w3c/csswg-drafts/issues/4088 for the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":119479,"byte_end":119542,"line_start":425,"line_end":425,"column_start":5,"column_end":68}},{"value":"/ `DelimPercent` bits.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":119547,"byte_end":119571,"line_start":426,"line_end":426,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":122358,"byte_end":122376,"line_start":508,"line_end":508,"column_start":12,"column_end":30},"name":"serialization_type","qualname":"<Token>::serialization_type","value":"fn serialization_type<'_>(&'_ Self) -> TokenSerializationType","parent":null,"children":[],"decl_id":null,"docs":" Categorize a token into a type that determines when `/**/` needs to be inserted\n between two tokens when serialized next to each other without whitespace in between.","sig":null,"attributes":[{"value":"/ Categorize a token into a type that determines when `/**/` needs to be inserted","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":122084,"byte_end":122167,"line_start":504,"line_end":504,"column_start":5,"column_end":88}},{"value":"/ between two tokens when serialized next to each other without whitespace in between.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":122172,"byte_end":122260,"line_start":505,"line_end":505,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":122265,"byte_end":122268,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ See the `TokenSerializationType::needs_separator_when_before` method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":122273,"byte_end":122346,"line_start":507,"line_end":507,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1943},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/unicode_range.rs","byte_start":124804,"byte_end":124816,"line_start":17,"line_end":17,"column_start":12,"column_end":24},"name":"UnicodeRange","qualname":"::unicode_range::UnicodeRange","value":"UnicodeRange { start, end }","parent":null,"children":[{"krate":0,"index":1944},{"krate":0,"index":1945}],"decl_id":null,"docs":" One contiguous range of code points.","sig":null,"attributes":[{"value":"/ One contiguous range of code points.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/unicode_range.rs","byte_start":124624,"byte_end":124664,"line_start":12,"line_end":12,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/unicode_range.rs","byte_start":124665,"byte_end":124668,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Can not be empty. Can represent a single code point when start == end.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/unicode_range.rs","byte_start":124669,"byte_end":124743,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"repr(C)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/unicode_range.rs","byte_start":124782,"byte_end":124792,"line_start":16,"line_end":16,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1944},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/unicode_range.rs","byte_start":124878,"byte_end":124883,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"name":"start","qualname":"::unicode_range::UnicodeRange::start","value":"u32","parent":{"krate":0,"index":1943},"children":[],"decl_id":null,"docs":" Inclusive start of the range. In [0, end].\n","sig":null,"attributes":[{"value":"/ Inclusive start of the range. In [0, end].","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/unicode_range.rs","byte_start":124823,"byte_end":124869,"line_start":18,"line_end":18,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1945},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/unicode_range.rs","byte_start":124953,"byte_end":124956,"line_start":22,"line_end":22,"column_start":9,"column_end":12},"name":"end","qualname":"::unicode_range::UnicodeRange::end","value":"u32","parent":{"krate":0,"index":1943},"children":[],"decl_id":null,"docs":" Inclusive end of the range. In [0, 0x10FFFF].\n","sig":null,"attributes":[{"value":"/ Inclusive end of the range. In [0, 0x10FFFF].","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/unicode_range.rs","byte_start":124895,"byte_end":124944,"line_start":21,"line_end":21,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/unicode_range.rs","byte_start":125056,"byte_end":125061,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"parse","qualname":"<UnicodeRange>::parse","value":"fn parse<'i, 't, '_>(&'_ mut Parser) -> Result<Self, BasicParseError>","parent":null,"children":[],"decl_id":null,"docs":" https://drafts.csswg.org/css-syntax/#urange-syntax\n","sig":null,"attributes":[{"value":"/ https://drafts.csswg.org/css-syntax/#urange-syntax","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/unicode_range.rs","byte_start":124990,"byte_end":125044,"line_start":26,"line_end":26,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/unicode_range.rs","byte_start":129567,"byte_end":129570,"line_start":165,"line_end":165,"column_start":8,"column_end":11},"name":"fmt","qualname":"<UnicodeRange as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/unicode_range.rs","byte_start":129704,"byte_end":129710,"line_start":171,"line_end":171,"column_start":8,"column_end":14},"name":"to_css","qualname":"<UnicodeRange as serializer::ToCss>::to_css","value":"fn to_css<W, '_, '_>(&'_ Self, &'_ mut W) -> fmt::Result where W: fmt::Write","parent":{"krate":0,"index":799},"children":[],"decl_id":{"krate":0,"index":800},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":20318,"byte_end":20339,"line_start":232,"line_end":232,"column_start":31,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":21583,"byte_end":21604,"line_start":260,"line_end":260,"column_start":44,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":23841,"byte_end":23855,"line_start":315,"line_end":315,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":25542,"byte_end":25556,"line_start":356,"line_end":356,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12241729,"byte_end":12241734,"line_start":9,"line_end":9,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12242876,"byte_end":12242885,"line_start":17,"line_end":17,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12257930,"byte_end":12257944,"line_start":177,"line_end":177,"column_start":203,"column_end":217},"value":"","parent":null,"children":[{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":33025,"byte_end":33029,"line_start":27,"line_end":27,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":35135,"byte_end":35139,"line_start":104,"line_end":104,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":36197,"byte_end":36202,"line_start":141,"line_end":141,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":36820,"byte_end":36838,"line_start":168,"line_end":168,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":37329,"byte_end":37342,"line_start":191,"line_end":191,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":40064,"byte_end":40086,"line_start":268,"line_end":268,"column_start":39,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":40118,"byte_end":40123,"line_start":272,"line_end":272,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":388},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":57732,"byte_end":57740,"line_start":45,"line_end":45,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":57963,"byte_end":57971,"line_start":55,"line_end":55,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":58281,"byte_end":58289,"line_start":68,"line_end":68,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":58399,"byte_end":58407,"line_start":75,"line_end":75,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":59126,"byte_end":59134,"line_start":101,"line_end":101,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":59566,"byte_end":59574,"line_start":116,"line_end":116,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":59752,"byte_end":59760,"line_start":125,"line_end":125,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":59969,"byte_end":59977,"line_start":136,"line_end":136,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60076,"byte_end":60084,"line_start":143,"line_end":143,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60179,"byte_end":60187,"line_start":150,"line_end":150,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60291,"byte_end":60299,"line_start":157,"line_end":157,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60456,"byte_end":60464,"line_start":164,"line_end":164,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60612,"byte_end":60620,"line_start":171,"line_end":171,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60777,"byte_end":60785,"line_start":178,"line_end":178,"column_start":17,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60811,"byte_end":60819,"line_start":180,"line_end":180,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60956,"byte_end":60964,"line_start":187,"line_end":187,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":61119,"byte_end":61127,"line_start":194,"line_end":194,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":69556,"byte_end":69567,"line_start":24,"line_end":24,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":70879,"byte_end":70889,"line_start":65,"line_end":65,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":71109,"byte_end":71123,"line_start":75,"line_end":75,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":589},{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":72360,"byte_end":72374,"line_start":113,"line_end":113,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":73021,"byte_end":73031,"line_start":135,"line_end":135,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":73920,"byte_end":73931,"line_start":171,"line_end":171,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":75141,"byte_end":75150,"line_start":213,"line_end":213,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":77261,"byte_end":77271,"line_start":271,"line_end":271,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":77460,"byte_end":77470,"line_start":282,"line_end":282,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":78547,"byte_end":78553,"line_start":318,"line_end":318,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":667},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":673},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":686},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":697},{"krate":0,"index":701},{"krate":0,"index":706},{"krate":0,"index":711},{"krate":0,"index":716},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":107615,"byte_end":107620,"line_start":61,"line_end":61,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":115488,"byte_end":115503,"line_start":301,"line_end":301,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":115734,"byte_end":115749,"line_start":311,"line_end":311,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":118587,"byte_end":118609,"line_start":405,"line_end":405,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":122068,"byte_end":122073,"line_start":503,"line_end":503,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/unicode_range.rs","byte_start":124971,"byte_end":124983,"line_start":25,"line_end":25,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/unicode_range.rs","byte_start":129545,"byte_end":129557,"line_start":164,"line_end":164,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/unicode_range.rs","byte_start":129682,"byte_end":129694,"line_start":170,"line_end":170,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":20318,"byte_end":20339,"line_start":232,"line_end":232,"column_start":31,"column_end":52},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":21583,"byte_end":21604,"line_start":260,"line_end":260,"column_start":44,"column_end":65},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":8603}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":23841,"byte_end":23855,"line_start":315,"line_end":315,"column_start":31,"column_end":45},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/rules_and_declarations.rs","byte_start":25542,"byte_end":25556,"line_start":356,"line_end":356,"column_start":44,"column_end":58},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":254},"to":{"krate":2,"index":8603}},{"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12241729,"byte_end":12241734,"line_start":9,"line_end":9,"column_start":15,"column_end":20},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12242876,"byte_end":12242885,"line_start":17,"line_end":17,"column_start":15,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/build/cssparser-346c769a1f19ba01/out/tokenizer.rs","byte_start":12257930,"byte_end":12257944,"line_start":177,"line_end":177,"column_start":203,"column_end":217},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":33025,"byte_end":33029,"line_start":27,"line_end":27,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":35135,"byte_end":35139,"line_start":104,"line_end":104,"column_start":16,"column_end":20},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1558},"to":{"krate":0,"index":799}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":36197,"byte_end":36202,"line_start":141,"line_end":141,"column_start":16,"column_end":21},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1572},"to":{"krate":0,"index":799}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":36820,"byte_end":36838,"line_start":168,"line_end":168,"column_start":6,"column_end":24},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":37329,"byte_end":37342,"line_start":191,"line_end":191,"column_start":6,"column_end":19},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":40064,"byte_end":40086,"line_start":268,"line_end":268,"column_start":39,"column_end":61},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":376},"to":{"krate":0,"index":365}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/color.rs","byte_start":40118,"byte_end":40123,"line_start":272,"line_end":272,"column_start":6,"column_end":11},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":57732,"byte_end":57740,"line_start":45,"line_end":45,"column_start":33,"column_end":41},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":57963,"byte_end":57971,"line_start":55,"line_end":55,"column_start":28,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":58281,"byte_end":58289,"line_start":68,"line_end":68,"column_start":27,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":58399,"byte_end":58407,"line_start":75,"line_end":75,"column_start":10,"column_end":18},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":59126,"byte_end":59134,"line_start":101,"line_end":101,"column_start":20,"column_end":28},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":59566,"byte_end":59574,"line_start":116,"line_end":116,"column_start":19,"column_end":27},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":59752,"byte_end":59760,"line_start":125,"line_end":125,"column_start":20,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":59969,"byte_end":59977,"line_start":136,"line_end":136,"column_start":25,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60076,"byte_end":60084,"line_start":143,"line_end":143,"column_start":26,"column_end":34},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":2857}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60179,"byte_end":60187,"line_start":150,"line_end":150,"column_start":22,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60291,"byte_end":60299,"line_start":157,"line_end":157,"column_start":25,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":10533}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60456,"byte_end":60464,"line_start":164,"line_end":164,"column_start":42,"column_end":50},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60612,"byte_end":60620,"line_start":171,"line_end":171,"column_start":43,"column_end":51},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60777,"byte_end":60785,"line_start":178,"line_end":178,"column_start":17,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60811,"byte_end":60819,"line_start":180,"line_end":180,"column_start":18,"column_end":26},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":2951}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":60956,"byte_end":60964,"line_start":187,"line_end":187,"column_start":27,"column_end":35},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/cow_rc_str.rs","byte_start":61119,"byte_end":61127,"line_start":194,"line_end":194,"column_start":25,"column_end":33},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":69556,"byte_end":69567,"line_start":24,"line_end":24,"column_start":6,"column_end":17},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":70879,"byte_end":70889,"line_start":65,"line_end":65,"column_start":43,"column_end":53},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1687},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":71109,"byte_end":71123,"line_start":75,"line_end":75,"column_start":6,"column_end":20},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":72360,"byte_end":72374,"line_start":113,"line_end":113,"column_start":13,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":73021,"byte_end":73031,"line_start":135,"line_end":135,"column_start":13,"column_end":23},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":73920,"byte_end":73931,"line_start":171,"line_end":171,"column_start":10,"column_end":21},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":75141,"byte_end":75150,"line_start":213,"line_end":213,"column_start":6,"column_end":15},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":77261,"byte_end":77271,"line_start":271,"line_end":271,"column_start":28,"column_end":38},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1726},"to":{"krate":2,"index":3395}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":77460,"byte_end":77470,"line_start":282,"line_end":282,"column_start":6,"column_end":16},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/parser.rs","byte_start":78547,"byte_end":78553,"line_start":318,"line_end":318,"column_start":18,"column_end":24},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":621},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":107615,"byte_end":107620,"line_start":61,"line_end":61,"column_start":20,"column_end":25},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1401},"to":{"krate":0,"index":799}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":115488,"byte_end":115503,"line_start":301,"line_end":301,"column_start":13,"column_end":28},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":115734,"byte_end":115749,"line_start":311,"line_end":311,"column_start":28,"column_end":43},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":823},"to":{"krate":2,"index":10245}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":118587,"byte_end":118609,"line_start":405,"line_end":405,"column_start":6,"column_end":28},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/serializer.rs","byte_start":122068,"byte_end":122073,"line_start":503,"line_end":503,"column_start":10,"column_end":15},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/unicode_range.rs","byte_start":124971,"byte_end":124983,"line_start":25,"line_end":25,"column_start":6,"column_end":18},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/unicode_range.rs","byte_start":129545,"byte_end":129557,"line_start":164,"line_end":164,"column_start":21,"column_end":33},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1943},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.27.2/src/unicode_range.rs","byte_start":129682,"byte_end":129694,"line_start":170,"line_end":170,"column_start":16,"column_end":28},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1943},"to":{"krate":0,"index":799}}]}