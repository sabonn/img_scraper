{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25","program":"/Users/itayeshkar/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"io\"","--cfg","feature=\"memchr\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=a040c4d726ba3c7d","-C","extra-filename=-a040c4d726ba3c7d","--out-dir","/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/deps","-L","dependency=/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/deps","--extern","futures_core=/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/deps/libfutures_core-2c31a4ada90a5eb5.rmeta","--extern","futures_io=/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/deps/libfutures_io-08d843d286aa6bb7.rmeta","--extern","futures_task=/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/deps/libfutures_task-95c11485d703eac9.rmeta","--extern","memchr=/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/deps/libmemchr-a67e036d8cbcff7e.rmeta","--extern","pin_project_lite=/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/deps/libpin_project_lite-6d07fd99c72705e6.rmeta","--extern","pin_utils=/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/deps/libpin_utils-5814714d9f4dcbe0.rmeta","--extern","slab=/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/deps/libslab-34b492bb6d1ca10f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/itayeshkar/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/deps/libfutures_util-a040c4d726ba3c7d.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[15270021279898879252,0]},"crate_root":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src","external_crates":[{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16128539464339909492,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","num":2,"id":{"name":"core","disambiguator":[5119190964148522055,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10836880961308110442,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9122960886372739080,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16262469955255852816,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6458319553461162962,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12001007181761242293,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17631836945948346775,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[14397519445266417684,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8668729914222175237,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6081650140881955662,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5498968616666872476,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2537156866219993108,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[16178185567501436822,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[3784531562979233881,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[17755498883195052578,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11111166150786070161,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[518337477295170700,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[6962753159787162907,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":20,"id":{"name":"futures_core","disambiguator":[10114599761136903196,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":21,"id":{"name":"pin_utils","disambiguator":[568644568986885198,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","num":22,"id":{"name":"futures_task","disambiguator":[14920737023550017385,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","num":23,"id":{"name":"pin_project_lite","disambiguator":[6971910164290660896,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","num":24,"id":{"name":"slab","disambiguator":[9564011234661687872,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","num":25,"id":{"name":"futures_io","disambiguator":[15725964863218812417,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","num":26,"id":{"name":"memchr","disambiguator":[12626078750116297769,0]}}],"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":0,"byte_end":11572,"line_start":1,"line_end":337,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":169},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":861,"byte_end":866,"line_start":29,"line_end":29,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":7},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":887,"byte_end":894,"line_start":30,"line_end":30,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":13770},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12041,"byte_end":12047,"line_start":13,"line_end":13,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":20,"index":21},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12107,"byte_end":12116,"line_start":16,"line_end":16,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":20,"index":24},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12118,"byte_end":12132,"line_start":16,"line_end":16,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":20,"index":27},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12166,"byte_end":12177,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":20,"index":44},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12179,"byte_end":12188,"line_start":17,"line_end":17,"column_start":45,"column_end":54},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":22,"index":237},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12214,"byte_end":12223,"line_start":18,"line_end":18,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":22,"index":203},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12225,"byte_end":12239,"line_start":18,"line_end":18,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":22,"index":258},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12241,"byte_end":12256,"line_start":18,"line_end":18,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":8952},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":16330,"byte_end":16334,"line_start":46,"line_end":46,"column_start":15,"column_end":19},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":9540},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18054,"byte_end":18065,"line_start":101,"line_end":101,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":337},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18582,"byte_end":18588,"line_start":117,"line_end":117,"column_start":24,"column_end":30},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":348},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18590,"byte_end":18600,"line_start":117,"line_end":117,"column_start":32,"column_end":42},"alias_span":null,"name":"WeakShared","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":9043},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12371,"byte_end":12378,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":8952},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12380,"byte_end":12384,"line_start":24,"line_end":24,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":433},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12386,"byte_end":12395,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9386},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12397,"byte_end":12404,"line_start":24,"line_end":24,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9201},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12406,"byte_end":12416,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9141},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12418,"byte_end":12421,"line_start":24,"line_end":24,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9251},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12423,"byte_end":12430,"line_start":24,"line_end":24,"column_start":57,"column_end":64},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9446},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12432,"byte_end":12442,"line_start":24,"line_end":24,"column_start":66,"column_end":76},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9313},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12444,"byte_end":12448,"line_start":24,"line_end":24,"column_start":78,"column_end":82},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9494},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12450,"byte_end":12459,"line_start":24,"line_end":24,"column_start":84,"column_end":93},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9091},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12555,"byte_end":12568,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9540},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12617,"byte_end":12628,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":337},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12828,"byte_end":12834,"line_start":39,"line_end":39,"column_start":24,"column_end":30},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":348},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12836,"byte_end":12846,"line_start":39,"line_end":39,"column_start":32,"column_end":42},"alias_span":null,"name":"WeakShared","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9576},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59779,"byte_end":59789,"line_start":104,"line_end":104,"column_start":28,"column_end":38},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":506}},{"kind":"Use","ref_id":{"krate":0,"index":9881},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12898,"byte_end":12905,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10028},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12907,"byte_end":12914,"line_start":43,"line_end":43,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10211},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12916,"byte_end":12926,"line_start":43,"line_end":43,"column_start":23,"column_end":33},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10150},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12928,"byte_end":12937,"line_start":43,"line_end":43,"column_start":35,"column_end":44},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9576},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12939,"byte_end":12949,"line_start":43,"line_end":43,"column_start":46,"column_end":56},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10333},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12951,"byte_end":12957,"line_start":43,"line_end":43,"column_start":58,"column_end":64},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10272},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12959,"byte_end":12964,"line_start":43,"line_end":43,"column_start":66,"column_end":71},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10395},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12966,"byte_end":12977,"line_start":43,"line_end":43,"column_start":73,"column_end":84},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10089},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12979,"byte_end":12985,"line_start":43,"line_end":43,"column_start":86,"column_end":92},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9955},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12991,"byte_end":12997,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9709},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12999,"byte_end":13009,"line_start":44,"line_end":44,"column_start":13,"column_end":23},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9830},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13011,"byte_end":13027,"line_start":44,"line_end":44,"column_start":25,"column_end":41},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":712},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13029,"byte_end":13041,"line_start":44,"line_end":44,"column_start":43,"column_end":55},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10468},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13043,"byte_end":13055,"line_start":44,"line_end":44,"column_start":57,"column_end":69},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":809},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13227,"byte_end":13231,"line_start":54,"line_end":54,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10526},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13233,"byte_end":13237,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":855},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13278,"byte_end":13285,"line_start":57,"line_end":57,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10532},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13287,"byte_end":13294,"line_start":57,"line_end":57,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":902},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13341,"byte_end":13351,"line_start":60,"line_end":60,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10538},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13353,"byte_end":13362,"line_start":60,"line_end":60,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":954},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13417,"byte_end":13431,"line_start":63,"line_end":63,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10551},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13433,"byte_end":13445,"line_start":63,"line_end":63,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10564},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13483,"byte_end":13495,"line_start":66,"line_end":66,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1036},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13535,"byte_end":13542,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1031},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13544,"byte_end":13550,"line_start":69,"line_end":69,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1095},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13605,"byte_end":13619,"line_start":72,"line_end":72,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10603},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13621,"byte_end":13634,"line_start":72,"line_end":72,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1142},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13671,"byte_end":13674,"line_start":75,"line_end":75,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1139},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13676,"byte_end":13678,"line_start":75,"line_end":75,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1137},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13680,"byte_end":13685,"line_start":75,"line_end":75,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10642},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13687,"byte_end":13692,"line_start":75,"line_end":75,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1193},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13727,"byte_end":13731,"line_start":78,"line_end":78,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1196},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13733,"byte_end":13738,"line_start":78,"line_end":78,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1200},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13740,"byte_end":13745,"line_start":78,"line_end":78,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1205},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13747,"byte_end":13752,"line_start":78,"line_end":78,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10744},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13754,"byte_end":13758,"line_start":78,"line_end":78,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10789},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13760,"byte_end":13765,"line_start":78,"line_end":78,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10846},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13767,"byte_end":13772,"line_start":78,"line_end":78,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10915},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13774,"byte_end":13779,"line_start":78,"line_end":78,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1299},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13874,"byte_end":13882,"line_start":83,"line_end":83,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1286},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13884,"byte_end":13891,"line_start":83,"line_end":83,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1348},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13930,"byte_end":13936,"line_start":86,"line_end":86,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10996},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13938,"byte_end":13944,"line_start":86,"line_end":86,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1398},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14043,"byte_end":14053,"line_start":91,"line_end":91,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":11004},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14055,"byte_end":14064,"line_start":91,"line_end":91,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1454},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14112,"byte_end":14120,"line_start":95,"line_end":95,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1457},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14122,"byte_end":14131,"line_start":95,"line_end":95,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1461},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14133,"byte_end":14142,"line_start":95,"line_end":95,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1466},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14144,"byte_end":14153,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":11080},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14155,"byte_end":14162,"line_start":95,"line_end":95,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":11125},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14164,"byte_end":14172,"line_start":95,"line_end":95,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":11182},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14174,"byte_end":14182,"line_start":95,"line_end":95,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":11251},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14184,"byte_end":14192,"line_start":95,"line_end":95,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1576},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14297,"byte_end":14309,"line_start":101,"line_end":101,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1564},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14311,"byte_end":14321,"line_start":101,"line_end":101,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1622},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14368,"byte_end":14378,"line_start":104,"line_end":104,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":11332},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14380,"byte_end":14389,"line_start":104,"line_end":104,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1672},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14486,"byte_end":14495,"line_start":109,"line_end":109,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":11340},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14497,"byte_end":14505,"line_start":109,"line_end":109,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":11346},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14543,"byte_end":14549,"line_start":112,"line_end":112,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":16171},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14716,"byte_end":14727,"line_start":119,"line_end":119,"column_start":28,"column_end":39},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":16167},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14729,"byte_end":14746,"line_start":119,"line_end":119,"column_start":41,"column_end":58},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":16124},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14748,"byte_end":14757,"line_start":119,"line_end":119,"column_start":60,"column_end":69},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":16182},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14759,"byte_end":14766,"line_start":119,"line_end":119,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":16183},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14759,"byte_end":14766,"line_start":119,"line_end":119,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1829},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14849,"byte_end":14858,"line_start":122,"line_end":122,"column_start":20,"column_end":29},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":2,"index":13770},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10673,"byte_end":10679,"line_start":296,"line_end":296,"column_start":25,"column_end":31},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":433},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10681,"byte_end":10690,"line_start":296,"line_end":296,"column_start":33,"column_end":42},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":44},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10692,"byte_end":10701,"line_start":296,"line_end":296,"column_start":44,"column_end":53},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":712},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10703,"byte_end":10715,"line_start":296,"line_end":296,"column_start":55,"column_end":67},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":90},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":148698,"byte_end":148707,"line_start":13,"line_end":13,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":20,"index":93},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":148709,"byte_end":148723,"line_start":13,"line_end":13,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":20,"index":110},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":148757,"byte_end":148768,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":20,"index":96},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":148770,"byte_end":148776,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":20,"index":127},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":148778,"byte_end":148787,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":11363},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153093,"byte_end":153098,"line_start":29,"line_end":29,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":11412},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153213,"byte_end":153220,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":11461},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153331,"byte_end":153336,"line_start":37,"line_end":37,"column_start":22,"column_end":27},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":11523},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153449,"byte_end":153455,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":11600},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153682,"byte_end":153687,"line_start":49,"line_end":49,"column_start":22,"column_end":27},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":11640},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153806,"byte_end":153815,"line_start":53,"line_end":53,"column_start":26,"column_end":35},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":11684},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153928,"byte_end":153934,"line_start":57,"line_end":57,"column_start":23,"column_end":29},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":11749},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154055,"byte_end":154064,"line_start":61,"line_end":61,"column_start":27,"column_end":36},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":11918},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154452,"byte_end":154456,"line_start":75,"line_end":75,"column_start":21,"column_end":25},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":12109},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155170,"byte_end":155177,"line_start":100,"line_end":100,"column_start":25,"column_end":32},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":12166},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155286,"byte_end":155290,"line_start":104,"line_end":104,"column_start":21,"column_end":25},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":12210},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155413,"byte_end":155425,"line_start":108,"line_end":108,"column_start":28,"column_end":40},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":12285},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155788,"byte_end":155791,"line_start":119,"line_end":119,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":12417},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156174,"byte_end":156178,"line_start":130,"line_end":130,"column_start":21,"column_end":25},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":12425},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156311,"byte_end":156325,"line_start":134,"line_end":134,"column_start":33,"column_end":47},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":12559},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156435,"byte_end":156441,"line_start":138,"line_end":138,"column_start":22,"column_end":28},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":12608},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156443,"byte_end":156451,"line_start":138,"line_end":138,"column_start":30,"column_end":38},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":12477},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156453,"byte_end":156457,"line_start":138,"line_end":138,"column_start":40,"column_end":44},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":12518},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156459,"byte_end":156466,"line_start":138,"line_end":138,"column_start":46,"column_end":53},"alias_span":null,"name":"PeekMut","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":12433},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156468,"byte_end":156476,"line_start":138,"line_end":138,"column_start":55,"column_end":63},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":12657},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156586,"byte_end":156590,"line_start":142,"line_end":142,"column_start":21,"column_end":25},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":12701},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156711,"byte_end":156720,"line_start":146,"line_end":146,"column_start":27,"column_end":36},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":12770},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156829,"byte_end":156833,"line_start":150,"line_end":150,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":12814},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156954,"byte_end":156963,"line_start":154,"line_end":154,"column_start":27,"column_end":36},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":12883},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157084,"byte_end":157093,"line_start":158,"line_end":158,"column_start":27,"column_end":36},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":12940},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157202,"byte_end":157206,"line_start":162,"line_end":162,"column_start":21,"column_end":25},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":13001},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157313,"byte_end":157316,"line_start":166,"line_end":166,"column_start":20,"column_end":23},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":13058},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157481,"byte_end":157487,"line_start":172,"line_end":172,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":13106},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157664,"byte_end":157675,"line_start":178,"line_end":178,"column_start":29,"column_end":40},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":13154},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157784,"byte_end":157788,"line_start":182,"line_end":182,"column_start":21,"column_end":25},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":13223},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158043,"byte_end":158058,"line_start":190,"line_end":190,"column_start":33,"column_end":48},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":13268},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158297,"byte_end":158305,"line_start":198,"line_end":198,"column_start":25,"column_end":33},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":13496},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159247,"byte_end":159264,"line_start":225,"line_end":225,"column_start":36,"column_end":53},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":13557},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159854,"byte_end":159865,"line_start":243,"line_end":243,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1881}},{"kind":"Use","ref_id":{"krate":0,"index":11363},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":148903,"byte_end":148908,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":11412},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":148910,"byte_end":148917,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":11523},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":148919,"byte_end":148925,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":11600},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":148927,"byte_end":148932,"line_start":21,"line_end":21,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":11640},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":148934,"byte_end":148943,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":11684},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":148945,"byte_end":148951,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":11749},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":148953,"byte_end":148962,"line_start":21,"line_end":21,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":12338},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":148964,"byte_end":148971,"line_start":21,"line_end":21,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":11865},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":148973,"byte_end":148980,"line_start":21,"line_end":21,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":11918},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":148982,"byte_end":148986,"line_start":21,"line_end":21,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":12109},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":148988,"byte_end":148995,"line_start":21,"line_end":21,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":12166},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149001,"byte_end":149005,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":12219},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149007,"byte_end":149014,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":12285},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149016,"byte_end":149019,"line_start":22,"line_end":22,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":12417},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149021,"byte_end":149025,"line_start":22,"line_end":22,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":12559},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149027,"byte_end":149033,"line_start":22,"line_end":22,"column_start":31,"column_end":37},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":12608},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149035,"byte_end":149043,"line_start":22,"line_end":22,"column_start":39,"column_end":47},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":12477},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149045,"byte_end":149049,"line_start":22,"line_end":22,"column_start":49,"column_end":53},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":12518},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149051,"byte_end":149058,"line_start":22,"line_end":22,"column_start":55,"column_end":62},"alias_span":null,"name":"PeekMut","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":12433},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149060,"byte_end":149068,"line_start":22,"line_end":22,"column_start":64,"column_end":72},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":13154},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149070,"byte_end":149074,"line_start":22,"line_end":22,"column_start":74,"column_end":78},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":12425},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149076,"byte_end":149090,"line_start":22,"line_end":22,"column_start":80,"column_end":94},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":12657},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149096,"byte_end":149100,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":12701},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149102,"byte_end":149111,"line_start":23,"line_end":23,"column_start":11,"column_end":20},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":3880},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149113,"byte_end":149122,"line_start":23,"line_end":23,"column_start":22,"column_end":31},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":12210},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149124,"byte_end":149136,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":12770},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149138,"byte_end":149142,"line_start":23,"line_end":23,"column_start":47,"column_end":51},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":12883},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149144,"byte_end":149153,"line_start":23,"line_end":23,"column_start":53,"column_end":62},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":12814},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149155,"byte_end":149164,"line_start":23,"line_end":23,"column_start":64,"column_end":73},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":12940},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149166,"byte_end":149170,"line_start":23,"line_end":23,"column_start":75,"column_end":79},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":11461},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149172,"byte_end":149177,"line_start":23,"line_end":23,"column_start":81,"column_end":86},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":13001},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149179,"byte_end":149182,"line_start":23,"line_end":23,"column_start":88,"column_end":91},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":13557},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149234,"byte_end":149245,"line_start":27,"line_end":27,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":13058},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149296,"byte_end":149302,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":13106},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149353,"byte_end":149364,"line_start":33,"line_end":33,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":13223},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149556,"byte_end":149571,"line_start":41,"line_end":41,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":13268},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149573,"byte_end":149581,"line_start":41,"line_end":41,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":13496},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149583,"byte_end":149600,"line_start":41,"line_end":41,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":13601},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323647,"byte_end":323654,"line_start":26,"line_end":26,"column_start":25,"column_end":32},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":4089}},{"kind":"Use","ref_id":{"krate":0,"index":13869},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":324649,"byte_end":324659,"line_start":51,"line_end":51,"column_start":28,"column_end":38},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":4089}},{"kind":"Use","ref_id":{"krate":0,"index":14047},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":325339,"byte_end":325345,"line_start":69,"line_end":69,"column_start":24,"column_end":30},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":4089}},{"kind":"Use","ref_id":{"krate":0,"index":14108},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":325462,"byte_end":325469,"line_start":73,"line_end":73,"column_start":25,"column_end":32},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":4089}},{"kind":"Use","ref_id":{"krate":0,"index":14116},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":325594,"byte_end":325604,"line_start":77,"line_end":77,"column_start":29,"column_end":39},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":4089}},{"kind":"Use","ref_id":{"krate":0,"index":14173},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":325725,"byte_end":325734,"line_start":81,"line_end":81,"column_start":27,"column_end":36},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":4089}},{"kind":"Use","ref_id":{"krate":0,"index":14238},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":325863,"byte_end":325875,"line_start":85,"line_end":85,"column_start":31,"column_end":43},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":4089}},{"kind":"Use","ref_id":{"krate":0,"index":14299},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":325998,"byte_end":326008,"line_start":89,"line_end":89,"column_start":28,"column_end":38},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":4089}},{"kind":"Use","ref_id":{"krate":0,"index":14343},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326131,"byte_end":326141,"line_start":93,"line_end":93,"column_start":28,"column_end":38},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":4089}},{"kind":"Use","ref_id":{"krate":0,"index":14392},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326262,"byte_end":326271,"line_start":97,"line_end":97,"column_start":27,"column_end":36},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":4089}},{"kind":"Use","ref_id":{"krate":0,"index":14432},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326445,"byte_end":326454,"line_start":103,"line_end":103,"column_start":28,"column_end":37},"alias_span":null,"name":"TryChunks","value":"","parent":{"krate":0,"index":4089}},{"kind":"Use","ref_id":{"krate":0,"index":14480},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326456,"byte_end":326470,"line_start":103,"line_end":103,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":4089}},{"kind":"Use","ref_id":{"krate":0,"index":14481},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326456,"byte_end":326470,"line_start":103,"line_end":103,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":4089}},{"kind":"Use","ref_id":{"krate":0,"index":14501},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326588,"byte_end":326595,"line_start":107,"line_end":107,"column_start":25,"column_end":32},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":4089}},{"kind":"Use","ref_id":{"krate":0,"index":4813},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326717,"byte_end":326727,"line_start":111,"line_end":111,"column_start":28,"column_end":38},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":4089}},{"kind":"Use","ref_id":{"krate":0,"index":14570},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326729,"byte_end":326738,"line_start":111,"line_end":111,"column_start":40,"column_end":49},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":4089}},{"kind":"Use","ref_id":{"krate":0,"index":14627},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326868,"byte_end":326880,"line_start":115,"line_end":115,"column_start":31,"column_end":43},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":4089}},{"kind":"Use","ref_id":{"krate":0,"index":14696},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":327009,"byte_end":327021,"line_start":119,"line_end":119,"column_start":31,"column_end":43},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":4089}},{"kind":"Use","ref_id":{"krate":0,"index":14765},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":327284,"byte_end":327302,"line_start":127,"line_end":127,"column_start":37,"column_end":55},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":4089}},{"kind":"Use","ref_id":{"krate":0,"index":14813},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":327549,"byte_end":327560,"line_start":135,"line_end":135,"column_start":29,"column_end":40},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":4089}},{"kind":"Use","ref_id":{"krate":0,"index":14861},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":327829,"byte_end":327849,"line_start":143,"line_end":143,"column_start":40,"column_end":60},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":4089}},{"kind":"Use","ref_id":{"krate":0,"index":14922},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328120,"byte_end":328133,"line_start":152,"line_end":152,"column_start":32,"column_end":45},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":4089}},{"kind":"Use","ref_id":{"krate":0,"index":4813},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149849,"byte_end":149859,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":13601},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149861,"byte_end":149868,"line_start":51,"line_end":51,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":13665},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149870,"byte_end":149877,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":13803},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149879,"byte_end":149889,"line_start":51,"line_end":51,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":13734},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149891,"byte_end":149900,"line_start":51,"line_end":51,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":13869},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149902,"byte_end":149912,"line_start":51,"line_end":51,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":13981},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149914,"byte_end":149920,"line_start":51,"line_end":51,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":13912},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149922,"byte_end":149927,"line_start":51,"line_end":51,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":14047},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149929,"byte_end":149935,"line_start":51,"line_end":51,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":14343},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149941,"byte_end":149951,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":14392},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149953,"byte_end":149962,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":14173},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149964,"byte_end":149973,"line_start":52,"line_end":52,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":14238},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149975,"byte_end":149987,"line_start":52,"line_end":52,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":14299},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":149989,"byte_end":149999,"line_start":52,"line_end":52,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":14501},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150001,"byte_end":150008,"line_start":52,"line_end":52,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":14116},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150010,"byte_end":150020,"line_start":52,"line_end":52,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":14108},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150022,"byte_end":150029,"line_start":52,"line_end":52,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":14627},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150035,"byte_end":150047,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":5186},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150049,"byte_end":150061,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":14696},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150063,"byte_end":150075,"line_start":53,"line_end":53,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":14570},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150077,"byte_end":150086,"line_start":53,"line_end":53,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":14922},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150211,"byte_end":150224,"line_start":59,"line_end":59,"column_start":27,"column_end":40},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":14765},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150315,"byte_end":150333,"line_start":63,"line_end":63,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":14813},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150335,"byte_end":150346,"line_start":63,"line_end":63,"column_start":48,"column_end":59},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":14861},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150348,"byte_end":150368,"line_start":63,"line_end":63,"column_start":61,"column_end":81},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":14432},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150425,"byte_end":150434,"line_start":66,"line_end":66,"column_start":28,"column_end":37},"alias_span":null,"name":"TryChunks","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":14480},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150436,"byte_end":150450,"line_start":66,"line_end":66,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":14481},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150436,"byte_end":150450,"line_start":66,"line_end":66,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":5343},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150507,"byte_end":150511,"line_start":71,"line_end":71,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":14974},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150513,"byte_end":150517,"line_start":71,"line_end":71,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":5378},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150556,"byte_end":150562,"line_start":74,"line_end":74,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":14983},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150564,"byte_end":150570,"line_start":74,"line_end":74,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":5431},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150619,"byte_end":150630,"line_start":77,"line_end":77,"column_start":29,"column_end":40},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":14992},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150632,"byte_end":150642,"line_start":77,"line_end":77,"column_start":42,"column_end":52},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":5465},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150679,"byte_end":150684,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":15001},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150686,"byte_end":150691,"line_start":80,"line_end":80,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":5517},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150726,"byte_end":150730,"line_start":83,"line_end":83,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":15007},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150732,"byte_end":150736,"line_start":83,"line_end":83,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":5561},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150777,"byte_end":150784,"line_start":86,"line_end":86,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":15043},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150786,"byte_end":150793,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":5611},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150834,"byte_end":150841,"line_start":89,"line_end":89,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":5603},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150843,"byte_end":150849,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":5652},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150904,"byte_end":150918,"line_start":92,"line_end":92,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":15049},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150920,"byte_end":150933,"line_start":92,"line_end":92,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":5695},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150972,"byte_end":150978,"line_start":95,"line_end":95,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":15088},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":150980,"byte_end":150986,"line_start":95,"line_end":95,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":5766},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":151053,"byte_end":151073,"line_start":98,"line_end":98,"column_start":38,"column_end":58},"alias_span":null,"name":"select_with_strategy","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":15133},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":151075,"byte_end":151083,"line_start":98,"line_end":98,"column_start":60,"column_end":68},"alias_span":null,"name":"PollNext","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":15152},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":151085,"byte_end":151103,"line_start":98,"line_end":98,"column_start":70,"column_end":88},"alias_span":null,"name":"SelectWithStrategy","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":5855},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":151142,"byte_end":151148,"line_start":101,"line_end":101,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":15225},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":151150,"byte_end":151156,"line_start":101,"line_end":101,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":5955},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":151334,"byte_end":151348,"line_start":108,"line_end":108,"column_start":32,"column_end":46},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":15357},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":453855,"byte_end":453863,"line_start":26,"line_end":26,"column_start":22,"column_end":30},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":5997}},{"kind":"Use","ref_id":{"krate":0,"index":15348},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":453865,"byte_end":453869,"line_start":26,"line_end":26,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":5997}},{"kind":"Use","ref_id":{"krate":0,"index":15349},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":453865,"byte_end":453869,"line_start":26,"line_end":26,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":5997}},{"kind":"Use","ref_id":{"krate":0,"index":15328},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":453871,"byte_end":453878,"line_start":26,"line_end":26,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":5997}},{"kind":"Use","ref_id":{"krate":0,"index":15329},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":453871,"byte_end":453878,"line_start":26,"line_end":26,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":5997}},{"kind":"Use","ref_id":{"krate":0,"index":15318},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":453880,"byte_end":453890,"line_start":26,"line_end":26,"column_start":47,"column_end":57},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":5997}},{"kind":"Use","ref_id":{"krate":0,"index":15337},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":453892,"byte_end":453902,"line_start":26,"line_end":26,"column_start":59,"column_end":69},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":5997}},{"kind":"Use","ref_id":{"krate":0,"index":6318},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":151548,"byte_end":151564,"line_start":116,"line_end":116,"column_start":34,"column_end":50},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":6478},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":151751,"byte_end":151761,"line_start":124,"line_end":124,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":15364},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":151763,"byte_end":151772,"line_start":124,"line_end":124,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":16171},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":151940,"byte_end":151951,"line_start":131,"line_end":131,"column_start":28,"column_end":39},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":16167},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":151953,"byte_end":151970,"line_start":131,"line_end":131,"column_start":41,"column_end":58},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":16124},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":151972,"byte_end":151981,"line_start":131,"line_end":131,"column_start":60,"column_end":69},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":16182},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":151983,"byte_end":151990,"line_start":131,"line_end":131,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":16183},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":151983,"byte_end":151990,"line_start":131,"line_end":131,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":6549},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":152073,"byte_end":152082,"line_start":134,"line_end":134,"column_start":20,"column_end":29},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":20,"index":96},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10777,"byte_end":10783,"line_start":300,"line_end":300,"column_start":25,"column_end":31},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3880},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10785,"byte_end":10794,"line_start":300,"line_end":300,"column_start":33,"column_end":42},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":127},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10796,"byte_end":10805,"line_start":300,"line_end":300,"column_start":44,"column_end":53},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5186},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10807,"byte_end":10819,"line_start":300,"line_end":300,"column_start":55,"column_end":67},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":14072},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":502656,"byte_end":502663,"line_start":14,"line_end":14,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":6583}},{"kind":"Use","ref_id":{"krate":2,"index":43815},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":502665,"byte_end":502669,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":6583}},{"kind":"Use","ref_id":{"krate":2,"index":43851},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":502671,"byte_end":502679,"line_start":14,"line_end":14,"column_start":37,"column_end":45},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":6583}},{"kind":"Use","ref_id":{"krate":2,"index":43860},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":502681,"byte_end":502695,"line_start":14,"line_end":14,"column_start":47,"column_end":61},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":6583}},{"kind":"Use","ref_id":{"krate":2,"index":14082},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":502697,"byte_end":502702,"line_start":14,"line_end":14,"column_start":63,"column_end":68},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":6583}},{"kind":"Use","ref_id":{"krate":22,"index":237},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":502729,"byte_end":502738,"line_start":16,"line_end":16,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":6583}},{"kind":"Use","ref_id":{"krate":22,"index":203},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":502740,"byte_end":502754,"line_start":16,"line_end":16,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":6583}},{"kind":"Use","ref_id":{"krate":22,"index":18},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":502756,"byte_end":502766,"line_start":16,"line_end":16,"column_start":51,"column_end":61},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":6583}},{"kind":"Use","ref_id":{"krate":22,"index":15},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":502768,"byte_end":502773,"line_start":16,"line_end":16,"column_start":63,"column_end":68},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":6583}},{"kind":"Use","ref_id":{"krate":22,"index":21},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":502775,"byte_end":502785,"line_start":16,"line_end":16,"column_start":70,"column_end":80},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":6583}},{"kind":"Use","ref_id":{"krate":22,"index":258},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":502787,"byte_end":502802,"line_start":16,"line_end":16,"column_start":82,"column_end":97},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":6583}},{"kind":"Use","ref_id":{"krate":22,"index":378},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":502828,"byte_end":502838,"line_start":18,"line_end":18,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":6583}},{"kind":"Use","ref_id":{"krate":22,"index":379},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":502862,"byte_end":502876,"line_start":19,"line_end":19,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":6583}},{"kind":"Use","ref_id":{"krate":22,"index":94},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":502962,"byte_end":502969,"line_start":23,"line_end":23,"column_start":23,"column_end":30},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":6583}},{"kind":"Use","ref_id":{"krate":22,"index":122},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":503055,"byte_end":503060,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":6583}},{"kind":"Use","ref_id":{"krate":22,"index":170},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":503147,"byte_end":503156,"line_start":31,"line_end":31,"column_start":24,"column_end":33},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":6583}},{"kind":"Use","ref_id":{"krate":22,"index":407},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":503158,"byte_end":503166,"line_start":31,"line_end":31,"column_start":35,"column_end":43},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":6583}},{"kind":"Use","ref_id":{"krate":20,"index":194},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":503245,"byte_end":503256,"line_start":34,"line_end":34,"column_start":41,"column_end":52},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":6583}},{"kind":"Use","ref_id":{"krate":0,"index":6672},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":503292,"byte_end":503305,"line_start":37,"line_end":37,"column_start":23,"column_end":36},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":6583}},{"kind":"Use","ref_id":{"krate":0,"index":6669},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":503307,"byte_end":503315,"line_start":37,"line_end":37,"column_start":38,"column_end":46},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":6583}},{"kind":"Use","ref_id":{"krate":1,"index":4084},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":511543,"byte_end":511548,"line_start":29,"line_end":29,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":1,"index":10705},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":511550,"byte_end":511559,"line_start":29,"line_end":29,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":1,"index":10829},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":511561,"byte_end":511568,"line_start":29,"line_end":29,"column_start":37,"column_end":44},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":1,"index":4685},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":511570,"byte_end":511580,"line_start":29,"line_end":29,"column_start":46,"column_end":56},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":1,"index":4082},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":511582,"byte_end":511588,"line_start":29,"line_end":29,"column_start":58,"column_end":64},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":1,"index":10841},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":511590,"byte_end":511598,"line_start":29,"line_end":29,"column_start":66,"column_end":74},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":25,"index":49},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":511623,"byte_end":511635,"line_start":31,"line_end":31,"column_start":22,"column_end":34},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":25,"index":39},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":511637,"byte_end":511646,"line_start":31,"line_end":31,"column_start":36,"column_end":45},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":25,"index":47},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":511648,"byte_end":511657,"line_start":31,"line_end":31,"column_start":47,"column_end":56},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":25,"index":42},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":511659,"byte_end":511669,"line_start":31,"line_end":31,"column_start":58,"column_end":68},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":15422},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":512096,"byte_end":512106,"line_start":46,"line_end":46,"column_start":26,"column_end":36},"alias_span":null,"name":"AllowStdIo","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":15455},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":512152,"byte_end":512161,"line_start":49,"line_end":49,"column_start":28,"column_end":37},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":15508},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":512163,"byte_end":512175,"line_start":49,"line_end":49,"column_start":39,"column_end":51},"alias_span":null,"name":"SeeKRelative","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":15518},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":512221,"byte_end":512230,"line_start":52,"line_end":52,"column_start":27,"column_end":36},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":15567},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":512277,"byte_end":512287,"line_start":55,"line_end":55,"column_start":28,"column_end":38},"alias_span":null,"name":"LineWriter","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":15603},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":512322,"byte_end":512327,"line_start":58,"line_end":58,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":15652},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":512362,"byte_end":512367,"line_start":61,"line_end":61,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":7185},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":512401,"byte_end":512405,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":15660},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":512407,"byte_end":512411,"line_start":64,"line_end":64,"column_start":28,"column_end":32},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":7230},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":512454,"byte_end":512462,"line_start":67,"line_end":67,"column_start":26,"column_end":34},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":15714},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":512464,"byte_end":512471,"line_start":67,"line_end":67,"column_start":36,"column_end":43},"alias_span":null,"name":"CopyBuf","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":7288},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":512534,"byte_end":512552,"line_start":70,"line_end":70,"column_start":36,"column_end":54},"alias_span":null,"name":"copy_buf_abortable","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":15776},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":512554,"byte_end":512570,"line_start":70,"line_end":70,"column_start":56,"column_end":72},"alias_span":null,"name":"CopyBufAbortable","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":15842},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":512608,"byte_end":512614,"line_start":73,"line_end":73,"column_start":23,"column_end":29},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":7393},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":512650,"byte_end":512655,"line_start":76,"line_end":76,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":7391},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":512657,"byte_end":512662,"line_start":76,"line_end":76,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":15870},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":512704,"byte_end":512711,"line_start":79,"line_end":79,"column_start":25,"column_end":32},"alias_span":null,"name":"FillBuf","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":15878},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":512746,"byte_end":512751,"line_start":82,"line_end":82,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":15886},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":512983,"byte_end":512988,"line_start":92,"line_end":92,"column_start":22,"column_end":27},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":15934},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":513021,"byte_end":513025,"line_start":95,"line_end":95,"column_start":21,"column_end":25},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":15943},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":513076,"byte_end":513088,"line_start":98,"line_end":98,"column_start":30,"column_end":42},"alias_span":null,"name":"ReadVectored","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":15952},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":513133,"byte_end":513142,"line_start":101,"line_end":101,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadExact","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":15961},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":513185,"byte_end":513193,"line_start":104,"line_end":104,"column_start":26,"column_end":34},"alias_span":null,"name":"ReadLine","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":15972},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":513240,"byte_end":513249,"line_start":107,"line_end":107,"column_start":28,"column_end":37},"alias_span":null,"name":"ReadToEnd","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":15982},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":513302,"byte_end":513314,"line_start":110,"line_end":110,"column_start":31,"column_end":43},"alias_span":null,"name":"ReadToString","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":15993},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":513359,"byte_end":513368,"line_start":113,"line_end":113,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadUntil","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":7843},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":513406,"byte_end":513412,"line_start":116,"line_end":116,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":7841},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":513414,"byte_end":513420,"line_start":116,"line_end":116,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":16004},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":513454,"byte_end":513458,"line_start":119,"line_end":119,"column_start":21,"column_end":25},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":7919},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":513492,"byte_end":513496,"line_start":122,"line_end":122,"column_start":22,"column_end":26},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":7917},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":513498,"byte_end":513502,"line_start":122,"line_end":122,"column_start":28,"column_end":32},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":16013},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":513539,"byte_end":513547,"line_start":125,"line_end":125,"column_start":23,"column_end":31},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":8001},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":513549,"byte_end":513561,"line_start":125,"line_end":125,"column_start":33,"column_end":45},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":8002},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":513549,"byte_end":513561,"line_start":125,"line_end":125,"column_start":33,"column_end":45},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":16019},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":513563,"byte_end":513572,"line_start":125,"line_end":125,"column_start":47,"column_end":56},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":16025},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":513606,"byte_end":513610,"line_start":128,"line_end":128,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":16069},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":513647,"byte_end":513653,"line_start":131,"line_end":131,"column_start":23,"column_end":29},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":16076},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":513688,"byte_end":513693,"line_start":134,"line_end":134,"column_start":22,"column_end":27},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":16085},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":513746,"byte_end":513759,"line_start":137,"line_end":137,"column_start":31,"column_end":44},"alias_span":null,"name":"WriteVectored","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":0,"index":16094},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":513802,"byte_end":513810,"line_start":140,"line_end":140,"column_start":26,"column_end":34},"alias_span":null,"name":"WriteAll","value":"","parent":{"krate":0,"index":6684}},{"kind":"Use","ref_id":{"krate":25,"index":49},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11312,"byte_end":11324,"line_start":325,"line_end":325,"column_start":5,"column_end":17},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8242},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11326,"byte_end":11341,"line_start":325,"line_end":325,"column_start":19,"column_end":34},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":39},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11343,"byte_end":11352,"line_start":325,"line_end":325,"column_start":36,"column_end":45},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8209},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11354,"byte_end":11366,"line_start":325,"line_end":325,"column_start":47,"column_end":59},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":47},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11368,"byte_end":11377,"line_start":325,"line_end":325,"column_start":61,"column_end":70},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8237},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11379,"byte_end":11391,"line_start":325,"line_end":325,"column_start":72,"column_end":84},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":42},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11393,"byte_end":11403,"line_start":325,"line_end":325,"column_start":86,"column_end":96},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8226},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11409,"byte_end":11422,"line_start":326,"line_end":326,"column_start":5,"column_end":18},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8560},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":621322,"byte_end":621338,"line_start":17,"line_end":17,"column_start":5,"column_end":21},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":8281}},{"kind":"Use","ref_id":{"krate":0,"index":8446},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":621340,"byte_end":621345,"line_start":17,"line_end":17,"column_start":23,"column_end":28},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":8281}},{"kind":"Use","ref_id":{"krate":0,"index":8537},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":621347,"byte_end":621357,"line_start":17,"line_end":17,"column_start":30,"column_end":40},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":8281}},{"kind":"Use","ref_id":{"krate":0,"index":8518},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":621359,"byte_end":621374,"line_start":17,"line_end":17,"column_start":42,"column_end":57},"alias_span":null,"name":"MutexLockFuture","value":"","parent":{"krate":0,"index":8281}},{"kind":"Use","ref_id":{"krate":0,"index":8502},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":621376,"byte_end":621391,"line_start":17,"line_end":17,"column_start":59,"column_end":74},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":8281}},{"kind":"Use","ref_id":{"krate":0,"index":8485},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":621393,"byte_end":621413,"line_start":17,"line_end":17,"column_start":76,"column_end":96},"alias_span":null,"name":"OwnedMutexLockFuture","value":"","parent":{"krate":0,"index":8281}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":0,"byte_end":11572,"line_start":1,"line_end":337,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1854},{"krate":0,"index":1857},{"krate":0,"index":1860},{"krate":0,"index":1863},{"krate":0,"index":6570},{"krate":0,"index":6571},{"krate":0,"index":6574},{"krate":0,"index":6577},{"krate":0,"index":6580},{"krate":0,"index":6583},{"krate":0,"index":6682},{"krate":0,"index":6684},{"krate":0,"index":8256},{"krate":0,"index":8257},{"krate":0,"index":8260},{"krate":0,"index":8263},{"krate":0,"index":8266},{"krate":0,"index":8269},{"krate":0,"index":8272},{"krate":0,"index":8275},{"krate":0,"index":8278},{"krate":0,"index":8281},{"krate":0,"index":8617},{"krate":0,"index":8679},{"krate":0,"index":8893}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nsingle_use_lifetimes, unreachable_pub)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":243,"byte_end":375,"line_start":6,"line_end":12,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":17},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":487},{"krate":0,"index":490},{"krate":0,"index":493},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":753},{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":762},{"krate":0,"index":765},{"krate":0,"index":768},{"krate":0,"index":771},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":825},{"krate":0,"index":828},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1101},{"krate":0,"index":1104},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1149},{"krate":0,"index":1152},{"krate":0,"index":1155},{"krate":0,"index":1158},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1215},{"krate":0,"index":1218},{"krate":0,"index":1221},{"krate":0,"index":1224},{"krate":0,"index":1227},{"krate":0,"index":1230},{"krate":0,"index":1233},{"krate":0,"index":1236},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1314},{"krate":0,"index":1317},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1364},{"krate":0,"index":1367},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1416},{"krate":0,"index":1419},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1476},{"krate":0,"index":1479},{"krate":0,"index":1482},{"krate":0,"index":1485},{"krate":0,"index":1488},{"krate":0,"index":1491},{"krate":0,"index":1494},{"krate":0,"index":1497},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1591},{"krate":0,"index":1594},{"krate":0,"index":1630},{"krate":0,"index":1631},{"krate":0,"index":1634},{"krate":0,"index":1637},{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1687},{"krate":0,"index":1690},{"krate":0,"index":1809},{"krate":0,"index":1812},{"krate":0,"index":1831},{"krate":0,"index":1832},{"krate":0,"index":1835},{"krate":0,"index":1838},{"krate":0,"index":1841},{"krate":0,"index":1842},{"krate":0,"index":1844},{"krate":0,"index":1847}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"/ Asynchronous values.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11574,"byte_end":11598,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11599,"byte_end":11602,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11603,"byte_end":11628,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11629,"byte_end":11632,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Future`] trait.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11633,"byte_end":11660,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/ - The [`FutureExt`] and [`TryFutureExt`] trait, which provides adapters for","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11661,"byte_end":11740,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   chaining and composing futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11741,"byte_end":11778,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ - Top-level future combinators like [`lazy`](lazy()) which creates a future","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11779,"byte_end":11858,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   from a closure that defines its return value, and [`ready`](ready()),","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11859,"byte_end":11934,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/   which constructs a future with an immediate defined value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11935,"byte_end":11999,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":8908},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35381,"byte_end":35386,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First { f }","parent":{"krate":0,"index":8905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8909},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35396,"byte_end":35397,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"name":"f","qualname":"::future::future::flatten::Flatten::First::f","value":"Fut1","parent":{"krate":0,"index":8908},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8910},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35415,"byte_end":35421,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second { f }","parent":{"krate":0,"index":8905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8911},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35431,"byte_end":35432,"line_start":15,"line_end":15,"column_start":25,"column_end":26},"name":"f","qualname":"::future::future::flatten::Flatten::Second::f","value":"Fut2","parent":{"krate":0,"index":8910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8912},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35450,"byte_end":35455,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":8905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8905},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35351,"byte_end":35358,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"enum Flatten<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":8908},{"krate":0,"index":8910},{"krate":0,"index":8912}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35703,"byte_end":35716,"line_start":31,"line_end":31,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Flatten<Fut, Fut::Output> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35987,"byte_end":35991,"line_start":46,"line_end":46,"column_start":8,"column_end":12},"name":"poll","qualname":"<Flatten<Fut, Fut::Output> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":36716,"byte_end":36729,"line_start":69,"line_end":69,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Flatten<Fut, Fut::Output> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":36996,"byte_end":37005,"line_start":84,"line_end":84,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Flatten<Fut, Fut::Output> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8952},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":39812,"byte_end":39816,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":8954}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41635,"byte_end":41645,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40013,"byte_end":40081,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40086,"byte_end":40089,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40094,"byte_end":40162,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40167,"byte_end":40212,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40217,"byte_end":40220,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40225,"byte_end":40239,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40244,"byte_end":40247,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40252,"byte_end":40259,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40264,"byte_end":40305,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40310,"byte_end":40341,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40346,"byte_end":40402,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40407,"byte_end":40431,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40436,"byte_end":40471,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40476,"byte_end":40501,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40506,"byte_end":40509,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40514,"byte_end":40563,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40568,"byte_end":40571,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40576,"byte_end":40618,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40623,"byte_end":40662,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40667,"byte_end":40706,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40711,"byte_end":40728,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40733,"byte_end":40736,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40741,"byte_end":40811,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40816,"byte_end":40855,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40860,"byte_end":40901,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40906,"byte_end":40932,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40937,"byte_end":40940,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40945,"byte_end":40955,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40960,"byte_end":40977,"line_start":52,"line_end":52,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40982,"byte_end":41016,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41021,"byte_end":41068,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41073,"byte_end":41122,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41127,"byte_end":41189,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41194,"byte_end":41218,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41223,"byte_end":41266,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41271,"byte_end":41328,"line_start":59,"line_end":59,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41333,"byte_end":41408,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41413,"byte_end":41443,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41448,"byte_end":41465,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41470,"byte_end":41484,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41489,"byte_end":41573,"line_start":64,"line_end":64,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41578,"byte_end":41587,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41592,"byte_end":41597,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41602,"byte_end":41611,"line_start":67,"line_end":67,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41616,"byte_end":41623,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41749,"byte_end":41762,"line_start":75,"line_end":75,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Fuse<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41898,"byte_end":41902,"line_start":83,"line_end":83,"column_start":8,"column_end":12},"name":"poll","qualname":"<Fuse<Fut> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Fut::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8991},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":42703,"byte_end":42713,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":8988},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8992},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":42747,"byte_end":42753,"line_start":18,"line_end":18,"column_start":13,"column_end":19},"name":"future","qualname":"::future::future::map::Map::Incomplete::future","value":"Fut","parent":{"krate":0,"index":8991},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8993},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":42772,"byte_end":42773,"line_start":19,"line_end":19,"column_start":13,"column_end":14},"name":"f","qualname":"::future::future::map::Map::Incomplete::f","value":"F","parent":{"krate":0,"index":8991},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8994},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":42797,"byte_end":42805,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":8988},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8988},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":42681,"byte_end":42684,"line_start":15,"line_end":15,"column_start":14,"column_end":17},"name":"Map","qualname":"::future::future::map::Map","value":"enum Map<Fut, F> {\n    Incomplete {\n            future: Fut,\n            f: F,\n        },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":8991},{"krate":0,"index":8994}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12714098,"byte_end":12714107,"line_start":659,"line_end":659,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":43086,"byte_end":43099,"line_start":37,"line_end":37,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Map<Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":43373,"byte_end":43377,"line_start":52,"line_end":52,"column_start":8,"column_end":12},"name":"poll","qualname":"<Map<Fut, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<T>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9043},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":15807,"byte_end":15814,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":9045}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9091},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":16065,"byte_end":16078,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":9093}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9141},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":16418,"byte_end":16421,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":9144}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9201},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":16628,"byte_end":16638,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":9203}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9251},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":16844,"byte_end":16851,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":9254}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9313},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":17044,"byte_end":17048,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":9317}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9386},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":17293,"byte_end":17300,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":9389}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9446},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":17541,"byte_end":17551,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":9448}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9494},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":17764,"byte_end":17773,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":9496}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9540},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/catch_unwind.rs","byte_start":44401,"byte_end":44412,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::future::future::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":9542}],"decl_id":null,"docs":" Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/catch_unwind.rs","byte_start":44752,"byte_end":44756,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"poll","qualname":"<CatchUnwind<Fut> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":337},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":45415,"byte_end":45421,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340}],"decl_id":null,"docs":" Future for the [`shared`](super::FutureExt::shared) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`shared`](super::FutureExt::shared) method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":45272,"byte_end":45335,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":45336,"byte_end":45403,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":348},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":45795,"byte_end":45805,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"WeakShared","qualname":"::future::future::shared::WeakShared","value":"","parent":null,"children":[],"decl_id":null,"docs":" A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.\n","sig":null,"attributes":[{"value":"/ A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":45706,"byte_end":45783,"line_start":29,"line_end":29,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":45892,"byte_end":45897,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"clone","qualname":"<WeakShared<Fut> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":46148,"byte_end":46151,"line_start":43,"line_end":43,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Shared<Fut> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":46575,"byte_end":46578,"line_start":58,"line_end":58,"column_start":8,"column_end":11},"name":"fmt","qualname":"<WeakShared<Fut> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":47907,"byte_end":47911,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<Fut>>::peek","value":"fn peek<'_>(&'_ Self) -> Option<&'_ Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Some`] containing a reference to this [`Shared`]'s output if\n it has already been computed by a clone or [`None`] if it hasn't been\n computed yet or this [`Shared`] already returned its output from\n [`poll`](Future::poll).\n","sig":null,"attributes":[{"value":"/ Returns [`Some`] containing a reference to this [`Shared`]'s output if","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":47638,"byte_end":47712,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ it has already been computed by a clone or [`None`] if it hasn't been","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":47717,"byte_end":47790,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ computed yet or this [`Shared`] already returned its output from","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":47795,"byte_end":47863,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ [`poll`](Future::poll).","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":47868,"byte_end":47895,"line_start":111,"line_end":111,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":48406,"byte_end":48415,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<Shared<Fut>>::downgrade","value":"fn downgrade<'_>(&'_ Self) -> Option<WeakShared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`WeakShared`] for this [`Shared`].","sig":null,"attributes":[{"value":"/ Creates a new [`WeakShared`] for this [`Shared`].","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":48263,"byte_end":48316,"line_start":123,"line_end":123,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":48321,"byte_end":48324,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":48329,"byte_end":48394,"line_start":125,"line_end":125,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":49009,"byte_end":49021,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"strong_count","qualname":"<Shared<Fut>>::strong_count","value":"fn strong_count<'_>(&'_ Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of strong pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of strong pointers to this allocation.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":48597,"byte_end":48655,"line_start":133,"line_end":133,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":48660,"byte_end":48663,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":48668,"byte_end":48733,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":48738,"byte_end":48741,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":48746,"byte_end":48758,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":48763,"byte_end":48766,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":48771,"byte_end":48864,"line_start":139,"line_end":139,"column_start":5,"column_end":98}},{"value":"/ can change the strong count at any time, including potentially between calling this method","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":48869,"byte_end":48963,"line_start":140,"line_end":140,"column_start":5,"column_end":99}},{"value":"/ and acting on the result.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":48968,"byte_end":48997,"line_start":141,"line_end":141,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":49529,"byte_end":49539,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"weak_count","qualname":"<Shared<Fut>>::weak_count","value":"fn weak_count<'_>(&'_ Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of weak pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of weak pointers to this allocation.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":49121,"byte_end":49177,"line_start":146,"line_end":146,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":49182,"byte_end":49185,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":49190,"byte_end":49255,"line_start":148,"line_end":148,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":49260,"byte_end":49263,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":49268,"byte_end":49280,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":49285,"byte_end":49288,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":49293,"byte_end":49386,"line_start":152,"line_end":152,"column_start":5,"column_end":98}},{"value":"/ can change the weak count at any time, including potentially between calling this method","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":49391,"byte_end":49483,"line_start":153,"line_end":153,"column_start":5,"column_end":97}},{"value":"/ and acting on the result.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":49488,"byte_end":49517,"line_start":154,"line_end":154,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":51414,"byte_end":51427,"line_start":214,"line_end":214,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Shared<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":51604,"byte_end":51608,"line_start":226,"line_end":226,"column_start":8,"column_end":12},"name":"poll","qualname":"<Shared<Fut> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":55005,"byte_end":55010,"line_start":332,"line_end":332,"column_start":8,"column_end":13},"name":"clone","qualname":"<Shared<Fut> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":55170,"byte_end":55174,"line_start":341,"line_end":341,"column_start":8,"column_end":12},"name":"drop","qualname":"<Shared<Fut> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":56139,"byte_end":56146,"line_start":372,"line_end":372,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakShared<Fut>>::upgrade","value":"fn upgrade<'_>(&'_ Self) -> Option<Shared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade this [`WeakShared`] into a [`Shared`].","sig":null,"attributes":[{"value":"/ Attempts to upgrade this [`WeakShared`] into a [`Shared`].","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":55949,"byte_end":56011,"line_start":368,"line_end":368,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":56016,"byte_end":56019,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if all clones of the [`Shared`] have been dropped or polled","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":56024,"byte_end":56104,"line_start":370,"line_end":370,"column_start":5,"column_end":85}},{"value":"/ to completion.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":56109,"byte_end":56127,"line_start":371,"line_end":371,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":433},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18755,"byte_end":18764,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18656,"byte_end":18730,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18731,"byte_end":18744,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19596,"byte_end":19599,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18779,"byte_end":18854,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18859,"byte_end":18882,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18887,"byte_end":18890,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18895,"byte_end":18969,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18974,"byte_end":19045,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19050,"byte_end":19112,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19117,"byte_end":19120,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19125,"byte_end":19196,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19201,"byte_end":19272,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19277,"byte_end":19298,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19303,"byte_end":19306,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19311,"byte_end":19325,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19330,"byte_end":19333,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19338,"byte_end":19345,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19350,"byte_end":19391,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19396,"byte_end":19431,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19436,"byte_end":19439,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19444,"byte_end":19473,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19478,"byte_end":19521,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19526,"byte_end":19562,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19567,"byte_end":19576,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19581,"byte_end":19588,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19996,"byte_end":20004,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19769,"byte_end":19844,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19849,"byte_end":19872,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19877,"byte_end":19880,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19885,"byte_end":19963,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19968,"byte_end":19988,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21016,"byte_end":21020,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnOnce(Self::Output)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20163,"byte_end":20239,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20244,"byte_end":20287,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20292,"byte_end":20295,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20300,"byte_end":20371,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20376,"byte_end":20450,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20455,"byte_end":20471,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20476,"byte_end":20479,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20484,"byte_end":20559,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20564,"byte_end":20575,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20580,"byte_end":20583,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20588,"byte_end":20659,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20664,"byte_end":20690,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20695,"byte_end":20698,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20703,"byte_end":20717,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20722,"byte_end":20725,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20730,"byte_end":20737,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20742,"byte_end":20783,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20788,"byte_end":20823,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20828,"byte_end":20831,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20836,"byte_end":20870,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20875,"byte_end":20940,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20945,"byte_end":20982,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20987,"byte_end":20996,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21001,"byte_end":21008,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21890,"byte_end":21901,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21232,"byte_end":21307,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21312,"byte_end":21333,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21338,"byte_end":21341,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21346,"byte_end":21426,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21431,"byte_end":21503,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21508,"byte_end":21511,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21516,"byte_end":21530,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21535,"byte_end":21538,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21543,"byte_end":21550,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21555,"byte_end":21596,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21601,"byte_end":21636,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21641,"byte_end":21644,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21649,"byte_end":21663,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21668,"byte_end":21696,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21701,"byte_end":21737,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21742,"byte_end":21754,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21759,"byte_end":21797,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21802,"byte_end":21808,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21813,"byte_end":21816,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21821,"byte_end":21856,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21861,"byte_end":21870,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21875,"byte_end":21882,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22740,"byte_end":22752,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22081,"byte_end":22157,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22162,"byte_end":22183,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22188,"byte_end":22191,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22196,"byte_end":22275,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22280,"byte_end":22352,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22357,"byte_end":22360,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22365,"byte_end":22379,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22384,"byte_end":22387,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22392,"byte_end":22399,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22404,"byte_end":22445,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22450,"byte_end":22485,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22490,"byte_end":22493,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22498,"byte_end":22512,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22517,"byte_end":22545,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22550,"byte_end":22586,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22591,"byte_end":22603,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22608,"byte_end":22646,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22651,"byte_end":22657,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22662,"byte_end":22665,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22670,"byte_end":22706,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22711,"byte_end":22720,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22725,"byte_end":22732,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23531,"byte_end":23542,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22933,"byte_end":22986,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22991,"byte_end":22994,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22999,"byte_end":23073,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23078,"byte_end":23141,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23146,"byte_end":23149,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23154,"byte_end":23168,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23173,"byte_end":23176,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23181,"byte_end":23188,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23193,"byte_end":23234,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23239,"byte_end":23274,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23279,"byte_end":23314,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23319,"byte_end":23322,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23327,"byte_end":23357,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23362,"byte_end":23400,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23405,"byte_end":23456,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23461,"byte_end":23497,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23502,"byte_end":23511,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23516,"byte_end":23523,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24407,"byte_end":24414,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23681,"byte_end":23745,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23750,"byte_end":23786,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23791,"byte_end":23794,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23799,"byte_end":23868,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23873,"byte_end":23910,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23915,"byte_end":23918,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23923,"byte_end":23983,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23988,"byte_end":23991,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23996,"byte_end":24067,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24072,"byte_end":24098,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24103,"byte_end":24106,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24111,"byte_end":24125,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24130,"byte_end":24133,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24138,"byte_end":24145,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24150,"byte_end":24191,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24196,"byte_end":24231,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24236,"byte_end":24239,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24244,"byte_end":24290,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24295,"byte_end":24336,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24341,"byte_end":24373,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24378,"byte_end":24387,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24392,"byte_end":24399,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25519,"byte_end":25533,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24628,"byte_end":24703,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24708,"byte_end":24731,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24736,"byte_end":24739,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24744,"byte_end":24816,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24821,"byte_end":24894,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24899,"byte_end":24913,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24918,"byte_end":24921,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24926,"byte_end":24996,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25001,"byte_end":25019,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25024,"byte_end":25027,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25032,"byte_end":25046,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25051,"byte_end":25054,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25059,"byte_end":25066,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25071,"byte_end":25112,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25117,"byte_end":25152,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25157,"byte_end":25200,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25205,"byte_end":25208,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25213,"byte_end":25253,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25258,"byte_end":25324,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25329,"byte_end":25332,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25337,"byte_end":25390,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25395,"byte_end":25441,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25446,"byte_end":25485,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25490,"byte_end":25499,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25504,"byte_end":25511,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26621,"byte_end":26625,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25726,"byte_end":25799,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25804,"byte_end":25870,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25875,"byte_end":25893,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25898,"byte_end":25901,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25906,"byte_end":25973,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25978,"byte_end":26043,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26048,"byte_end":26120,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26125,"byte_end":26199,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26204,"byte_end":26230,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26235,"byte_end":26238,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26243,"byte_end":26314,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26319,"byte_end":26394,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26399,"byte_end":26453,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26458,"byte_end":26461,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26466,"byte_end":26540,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26545,"byte_end":26613,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27465,"byte_end":27472,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"fn inspect<F>(Self, F) -> Inspect<Self, F> where\nF: for<'_> FnOnce(&'_ Self::Output) -> (), Self: Sized","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26771,"byte_end":26837,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26842,"byte_end":26845,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26850,"byte_end":26925,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26930,"byte_end":27003,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27008,"byte_end":27077,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27082,"byte_end":27132,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27137,"byte_end":27140,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27145,"byte_end":27159,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27164,"byte_end":27167,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27172,"byte_end":27179,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27184,"byte_end":27225,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27230,"byte_end":27265,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27270,"byte_end":27273,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27278,"byte_end":27307,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27312,"byte_end":27390,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27395,"byte_end":27431,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27436,"byte_end":27445,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27450,"byte_end":27457,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":29010,"byte_end":29022,"line_start":431,"line_end":431,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::future::FutureExt::catch_unwind","value":"fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\n::std::panic::UnwindSafe","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27654,"byte_end":27708,"line_start":399,"line_end":399,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27713,"byte_end":27716,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27721,"byte_end":27796,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27801,"byte_end":27875,"line_start":402,"line_end":402,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27880,"byte_end":27954,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27959,"byte_end":28010,"line_start":404,"line_end":404,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":28015,"byte_end":28018,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":28023,"byte_end":28098,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":28103,"byte_end":28173,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":28178,"byte_end":28245,"line_start":408,"line_end":408,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":28250,"byte_end":28325,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":28330,"byte_end":28402,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":28407,"byte_end":28410,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":28415,"byte_end":28479,"line_start":412,"line_end":412,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":28484,"byte_end":28541,"line_start":413,"line_end":413,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":28546,"byte_end":28549,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":28554,"byte_end":28568,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":28573,"byte_end":28576,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":28581,"byte_end":28588,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":28593,"byte_end":28634,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{self, FutureExt, Ready};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":28639,"byte_end":28689,"line_start":419,"line_end":419,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":28694,"byte_end":28697,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":28702,"byte_end":28736,"line_start":421,"line_end":421,"column_start":5,"column_end":39}},{"value":"/ assert!(future.catch_unwind().await.is_ok());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":28741,"byte_end":28790,"line_start":422,"line_end":422,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":28795,"byte_end":28798,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let future = future::lazy(|_| -> Ready<i32> {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":28803,"byte_end":28852,"line_start":424,"line_end":424,"column_start":5,"column_end":54}},{"value":"/     unimplemented!()","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":28857,"byte_end":28881,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":28886,"byte_end":28893,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().await.is_err());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":28898,"byte_end":28948,"line_start":427,"line_end":427,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":28953,"byte_end":28962,"line_start":428,"line_end":428,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":28967,"byte_end":28974,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":28979,"byte_end":29002,"line_start":430,"line_end":430,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":30774,"byte_end":30780,"line_start":486,"line_end":486,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::future::FutureExt::shared","value":"fn shared(Self) -> Shared<Self> where Self: Sized, Self::Output: Clone","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":29252,"byte_end":29327,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":29332,"byte_end":29355,"line_start":441,"line_end":441,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":29360,"byte_end":29363,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The `shared` combinator method provides a method to convert any future","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":29368,"byte_end":29442,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ into a cloneable future. It enables a future to be polled by multiple","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":29447,"byte_end":29520,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ threads.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":29525,"byte_end":29537,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":29542,"byte_end":29545,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":29550,"byte_end":29614,"line_start":447,"line_end":447,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":29619,"byte_end":29676,"line_start":448,"line_end":448,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":29681,"byte_end":29684,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":29689,"byte_end":29703,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":29708,"byte_end":29711,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":29716,"byte_end":29723,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":29728,"byte_end":29769,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":29774,"byte_end":29809,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":29814,"byte_end":29817,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":29822,"byte_end":29851,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":29856,"byte_end":29890,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":29895,"byte_end":29929,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":29934,"byte_end":29937,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":29942,"byte_end":29975,"line_start":460,"line_end":460,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(6, shared2.await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":29980,"byte_end":30013,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":30018,"byte_end":30027,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":30032,"byte_end":30039,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":30044,"byte_end":30047,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":30052,"byte_end":30059,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ // Note, unlike most examples this is written in the context of a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":30064,"byte_end":30133,"line_start":466,"line_end":466,"column_start":5,"column_end":74}},{"value":"/ // synchronous function to better illustrate the cross-thread aspect of","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":30138,"byte_end":30213,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ // the `shared` combinator.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":30218,"byte_end":30249,"line_start":468,"line_end":468,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":30254,"byte_end":30257,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":30262,"byte_end":30303,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":30308,"byte_end":30343,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ use futures::executor::block_on;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":30348,"byte_end":30384,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":30389,"byte_end":30409,"line_start":473,"line_end":473,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":30414,"byte_end":30417,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":30422,"byte_end":30451,"line_start":475,"line_end":475,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":30456,"byte_end":30490,"line_start":476,"line_end":476,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":30495,"byte_end":30529,"line_start":477,"line_end":477,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":30534,"byte_end":30579,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, block_on(shared2));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":30584,"byte_end":30625,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":30630,"byte_end":30637,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":30642,"byte_end":30675,"line_start":481,"line_end":481,"column_start":5,"column_end":38}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":30680,"byte_end":30712,"line_start":482,"line_end":482,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":30717,"byte_end":30726,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":30731,"byte_end":30738,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":30743,"byte_end":30766,"line_start":485,"line_end":485,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":31942,"byte_end":31947,"line_start":518,"line_end":518,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"fn boxed<'a>(Self) -> BoxFuture where Self: Sized + Send + 'a","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":31713,"byte_end":31754,"line_start":513,"line_end":513,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":31759,"byte_end":31762,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":31767,"byte_end":31842,"line_start":515,"line_end":515,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":31847,"byte_end":31904,"line_start":516,"line_end":516,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":31909,"byte_end":31934,"line_start":517,"line_end":517,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32407,"byte_end":32418,"line_start":532,"line_end":532,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"fn boxed_local<'a>(Self) -> LocalBoxFuture where Self: Sized + 'a","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32106,"byte_end":32147,"line_start":525,"line_end":525,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32152,"byte_end":32155,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32160,"byte_end":32219,"line_start":527,"line_end":527,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32224,"byte_end":32227,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32232,"byte_end":32307,"line_start":529,"line_end":529,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32312,"byte_end":32369,"line_start":530,"line_end":530,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32374,"byte_end":32399,"line_start":531,"line_end":531,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32708,"byte_end":32718,"line_start":541,"line_end":541,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32575,"byte_end":32624,"line_start":539,"line_end":539,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32629,"byte_end":32700,"line_start":540,"line_end":540,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33003,"byte_end":33014,"line_start":550,"line_end":550,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32867,"byte_end":32916,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32921,"byte_end":32995,"line_start":549,"line_end":549,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33245,"byte_end":33255,"line_start":558,"line_end":558,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"fn poll_unpin<'_, '_, '_>(&'_ mut Self, &'_ mut Context) -> Poll<Self::Output>\nwhere Self: Unpin","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33168,"byte_end":33237,"line_start":557,"line_end":557,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34651,"byte_end":34663,"line_start":596,"line_end":596,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33391,"byte_end":33463,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33468,"byte_end":33531,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33536,"byte_end":33539,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33544,"byte_end":33610,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33615,"byte_end":33618,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33623,"byte_end":33696,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33701,"byte_end":33770,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33775,"byte_end":33845,"line_start":572,"line_end":572,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33850,"byte_end":33853,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33858,"byte_end":33872,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33877,"byte_end":33880,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33885,"byte_end":33892,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33897,"byte_end":33927,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33932,"byte_end":33982,"line_start":578,"line_end":578,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33987,"byte_end":34026,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34031,"byte_end":34082,"line_start":580,"line_end":580,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34087,"byte_end":34090,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34095,"byte_end":34155,"line_start":582,"line_end":582,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34160,"byte_end":34212,"line_start":583,"line_end":583,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34217,"byte_end":34224,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34229,"byte_end":34232,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34237,"byte_end":34306,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34311,"byte_end":34384,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34389,"byte_end":34421,"line_start":588,"line_end":588,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34426,"byte_end":34429,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34434,"byte_end":34441,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34446,"byte_end":34493,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34498,"byte_end":34537,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34542,"byte_end":34545,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34550,"byte_end":34631,"line_start":594,"line_end":594,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34636,"byte_end":34643,"line_start":595,"line_end":595,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9576},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":78438,"byte_end":78448,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":9578}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":78697,"byte_end":78710,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<IntoFuture<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":78892,"byte_end":78896,"line_start":33,"line_end":33,"column_start":8,"column_end":12},"name":"poll","qualname":"<IntoFuture<Fut> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":78875,"byte_end":78884,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"StructVariant","id":{"krate":0,"index":9615},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":79422,"byte_end":79427,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First { f }","parent":{"krate":0,"index":9612},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9616},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":79437,"byte_end":79438,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"name":"f","qualname":"::future::try_future::try_flatten::TryFlatten::First::f","value":"Fut1","parent":{"krate":0,"index":9615},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9617},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":79456,"byte_end":79462,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second { f }","parent":{"krate":0,"index":9612},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9618},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":79472,"byte_end":79473,"line_start":15,"line_end":15,"column_start":25,"column_end":26},"name":"f","qualname":"::future::try_future::try_flatten::TryFlatten::Second::f","value":"Fut2","parent":{"krate":0,"index":9617},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9619},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":79491,"byte_end":79496,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":9612},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9612},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":79389,"byte_end":79399,"line_start":13,"line_end":13,"column_start":14,"column_end":24},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"enum TryFlatten<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":9615},{"krate":0,"index":9617},{"krate":0,"index":9619}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":79768,"byte_end":79781,"line_start":31,"line_end":31,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":80088,"byte_end":80092,"line_start":46,"line_end":46,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":80984,"byte_end":80997,"line_start":72,"line_end":72,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":81302,"byte_end":81311,"line_start":87,"line_end":87,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9662},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":84365,"byte_end":84370,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First { f }","parent":{"krate":0,"index":9659},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9663},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":84380,"byte_end":84381,"line_start":11,"line_end":11,"column_start":24,"column_end":25},"name":"f","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First::f","value":"Fut1","parent":{"krate":0,"index":9662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9664},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":84399,"byte_end":84405,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second { f }","parent":{"krate":0,"index":9659},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9665},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":84415,"byte_end":84416,"line_start":12,"line_end":12,"column_start":25,"column_end":26},"name":"f","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second::f","value":"Fut2","parent":{"krate":0,"index":9664},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9666},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":84434,"byte_end":84439,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":9659},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9659},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":84329,"byte_end":84342,"line_start":10,"line_end":10,"column_start":14,"column_end":27},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"enum TryFlattenErr<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":9662},{"krate":0,"index":9664},{"krate":0,"index":9666}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":84717,"byte_end":84730,"line_start":28,"line_end":28,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFlattenErr<Fut, Fut::Error> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":85043,"byte_end":85047,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryFlattenErr<Fut, Fut::Error> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9709},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57125,"byte_end":57135,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":9712}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9770},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57383,"byte_end":57396,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":9773}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9830},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57664,"byte_end":57680,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":9832}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9881},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58268,"byte_end":58275,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":9885}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9955},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58515,"byte_end":58521,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":9959}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10028},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58771,"byte_end":58778,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":10031}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10089},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58986,"byte_end":58992,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":10092}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10150},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59211,"byte_end":59220,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":10153}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10211},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59492,"byte_end":59502,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":10214}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10272},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59875,"byte_end":59880,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":10275}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10333},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60121,"byte_end":60127,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":10336}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10395},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60384,"byte_end":60395,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":10399}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10468},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60679,"byte_end":60691,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":10471}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":712},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60981,"byte_end":60993,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":716},{"krate":0,"index":720},{"krate":0,"index":723},{"krate":0,"index":725},{"krate":0,"index":727},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":741},{"krate":0,"index":742}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60917,"byte_end":60970,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63753,"byte_end":63759,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62381,"byte_end":62439,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62444,"byte_end":62447,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62452,"byte_end":62527,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62532,"byte_end":62602,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62607,"byte_end":62680,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62685,"byte_end":62714,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62719,"byte_end":62722,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62727,"byte_end":62802,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62807,"byte_end":62882,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62887,"byte_end":62934,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62939,"byte_end":62942,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62947,"byte_end":63022,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63027,"byte_end":63053,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63058,"byte_end":63061,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63066,"byte_end":63080,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63085,"byte_end":63088,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63093,"byte_end":63100,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63105,"byte_end":63143,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63148,"byte_end":63151,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63156,"byte_end":63197,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63202,"byte_end":63247,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63252,"byte_end":63294,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63299,"byte_end":63335,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63340,"byte_end":63349,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63354,"byte_end":63361,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63366,"byte_end":63369,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63374,"byte_end":63446,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63451,"byte_end":63462,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63467,"byte_end":63470,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63475,"byte_end":63482,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63487,"byte_end":63525,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63530,"byte_end":63533,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63538,"byte_end":63579,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63584,"byte_end":63630,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63635,"byte_end":63677,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63682,"byte_end":63719,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63724,"byte_end":63733,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63738,"byte_end":63745,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65318,"byte_end":65332,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63950,"byte_end":64067,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64072,"byte_end":64075,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64080,"byte_end":64202,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64207,"byte_end":64257,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64262,"byte_end":64265,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64270,"byte_end":64345,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64350,"byte_end":64425,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64430,"byte_end":64477,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64482,"byte_end":64485,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64490,"byte_end":64565,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64570,"byte_end":64645,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64650,"byte_end":64697,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64702,"byte_end":64705,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64710,"byte_end":64785,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64790,"byte_end":64816,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64821,"byte_end":64824,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64829,"byte_end":64843,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64848,"byte_end":64851,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64856,"byte_end":64863,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64868,"byte_end":64906,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64911,"byte_end":64914,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64919,"byte_end":64960,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64965,"byte_end":65010,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65015,"byte_end":65076,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65081,"byte_end":65113,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65118,"byte_end":65121,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65126,"byte_end":65172,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65177,"byte_end":65238,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65243,"byte_end":65276,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65281,"byte_end":65290,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65295,"byte_end":65302,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65307,"byte_end":65310,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":67089,"byte_end":67096,"line_start":308,"line_end":308,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error) ->\nE, Self: Sized","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65566,"byte_end":65622,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65627,"byte_end":65630,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65635,"byte_end":65709,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65714,"byte_end":65775,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65780,"byte_end":65850,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65855,"byte_end":65930,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65935,"byte_end":65970,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65975,"byte_end":65978,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65983,"byte_end":66058,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66063,"byte_end":66138,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66143,"byte_end":66190,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66195,"byte_end":66198,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66203,"byte_end":66278,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66283,"byte_end":66309,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66314,"byte_end":66317,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66322,"byte_end":66336,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66341,"byte_end":66344,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66349,"byte_end":66356,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66361,"byte_end":66399,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66404,"byte_end":66407,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66412,"byte_end":66453,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66458,"byte_end":66504,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66509,"byte_end":66552,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66557,"byte_end":66594,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66599,"byte_end":66608,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66613,"byte_end":66620,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66625,"byte_end":66628,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66633,"byte_end":66706,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66711,"byte_end":66725,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66730,"byte_end":66733,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66738,"byte_end":66745,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66750,"byte_end":66788,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66793,"byte_end":66796,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66801,"byte_end":66842,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66847,"byte_end":66892,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66897,"byte_end":66940,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66945,"byte_end":66981,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":66986,"byte_end":66995,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":67000,"byte_end":67007,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":67012,"byte_end":67015,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ [`join!`]: crate::join","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":67020,"byte_end":67046,"line_start":306,"line_end":306,"column_start":5,"column_end":31}},{"value":"/ [`select!`]: crate::select","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":67051,"byte_end":67081,"line_start":307,"line_end":307,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":68260,"byte_end":68268,"line_start":341,"line_end":341,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":67289,"byte_end":67359,"line_start":316,"line_end":316,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":67364,"byte_end":67413,"line_start":317,"line_end":317,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":67418,"byte_end":67421,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":67426,"byte_end":67489,"line_start":319,"line_end":319,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":67494,"byte_end":67562,"line_start":320,"line_end":320,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":67567,"byte_end":67640,"line_start":321,"line_end":321,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":67645,"byte_end":67721,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":67726,"byte_end":67771,"line_start":323,"line_end":323,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":67776,"byte_end":67779,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":67784,"byte_end":67859,"line_start":325,"line_end":325,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":67864,"byte_end":67890,"line_start":326,"line_end":326,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":67895,"byte_end":67898,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":67903,"byte_end":67917,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":67922,"byte_end":67925,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":67930,"byte_end":67937,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":67942,"byte_end":67980,"line_start":331,"line_end":331,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":67985,"byte_end":67988,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":67993,"byte_end":68034,"line_start":333,"line_end":333,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":68039,"byte_end":68090,"line_start":334,"line_end":334,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":68095,"byte_end":68152,"line_start":335,"line_end":335,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":68157,"byte_end":68166,"line_start":336,"line_end":336,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":68171,"byte_end":68178,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":68183,"byte_end":68186,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ [`join!`]: crate::join","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":68191,"byte_end":68217,"line_start":339,"line_end":339,"column_start":5,"column_end":31}},{"value":"/ [`select!`]: crate::select","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":68222,"byte_end":68252,"line_start":340,"line_end":340,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":68564,"byte_end":68571,"line_start":351,"line_end":351,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized, Self::Ok: Into<U>","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":68444,"byte_end":68502,"line_start":349,"line_end":349,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":68507,"byte_end":68556,"line_start":350,"line_end":350,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":70126,"byte_end":70134,"line_start":395,"line_end":395,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":68745,"byte_end":68814,"line_start":359,"line_end":359,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":68819,"byte_end":68893,"line_start":360,"line_end":360,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":68898,"byte_end":68901,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":68906,"byte_end":68981,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":68986,"byte_end":69056,"line_start":363,"line_end":363,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69061,"byte_end":69126,"line_start":364,"line_end":364,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69131,"byte_end":69197,"line_start":365,"line_end":365,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69202,"byte_end":69236,"line_start":366,"line_end":366,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69241,"byte_end":69244,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69249,"byte_end":69324,"line_start":368,"line_end":368,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69329,"byte_end":69355,"line_start":369,"line_end":369,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69360,"byte_end":69363,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69368,"byte_end":69382,"line_start":371,"line_end":371,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69387,"byte_end":69390,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69395,"byte_end":69402,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69407,"byte_end":69445,"line_start":374,"line_end":374,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69450,"byte_end":69453,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69458,"byte_end":69499,"line_start":376,"line_end":376,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69504,"byte_end":69549,"line_start":377,"line_end":377,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69554,"byte_end":69629,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69634,"byte_end":69670,"line_start":379,"line_end":379,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69675,"byte_end":69684,"line_start":380,"line_end":380,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69689,"byte_end":69696,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69701,"byte_end":69704,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69709,"byte_end":69785,"line_start":383,"line_end":383,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69790,"byte_end":69801,"line_start":384,"line_end":384,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69806,"byte_end":69809,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69814,"byte_end":69821,"line_start":386,"line_end":386,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69826,"byte_end":69864,"line_start":387,"line_end":387,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69869,"byte_end":69872,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69877,"byte_end":69918,"line_start":389,"line_end":389,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69923,"byte_end":69969,"line_start":390,"line_end":390,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":69974,"byte_end":70050,"line_start":391,"line_end":391,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":70055,"byte_end":70092,"line_start":392,"line_end":392,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":70097,"byte_end":70106,"line_start":393,"line_end":393,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":70111,"byte_end":70118,"line_start":394,"line_end":394,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":71755,"byte_end":71762,"line_start":440,"line_end":440,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":70388,"byte_end":70453,"line_start":404,"line_end":404,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":70458,"byte_end":70530,"line_start":405,"line_end":405,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":70535,"byte_end":70538,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":70543,"byte_end":70618,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":70623,"byte_end":70693,"line_start":408,"line_end":408,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":70698,"byte_end":70763,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":70768,"byte_end":70844,"line_start":410,"line_end":410,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":70849,"byte_end":70867,"line_start":411,"line_end":411,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":70872,"byte_end":70875,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":70880,"byte_end":70955,"line_start":413,"line_end":413,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":70960,"byte_end":70986,"line_start":414,"line_end":414,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":70991,"byte_end":70994,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":70999,"byte_end":71013,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":71018,"byte_end":71021,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":71026,"byte_end":71033,"line_start":418,"line_end":418,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":71038,"byte_end":71076,"line_start":419,"line_end":419,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":71081,"byte_end":71084,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":71089,"byte_end":71130,"line_start":421,"line_end":421,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":71135,"byte_end":71181,"line_start":422,"line_end":422,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":71186,"byte_end":71261,"line_start":423,"line_end":423,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":71266,"byte_end":71303,"line_start":424,"line_end":424,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":71308,"byte_end":71317,"line_start":425,"line_end":425,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":71322,"byte_end":71329,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":71334,"byte_end":71337,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":71342,"byte_end":71415,"line_start":428,"line_end":428,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":71420,"byte_end":71434,"line_start":429,"line_end":429,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":71439,"byte_end":71442,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":71447,"byte_end":71454,"line_start":431,"line_end":431,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":71459,"byte_end":71497,"line_start":432,"line_end":432,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":71502,"byte_end":71505,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":71510,"byte_end":71551,"line_start":434,"line_end":434,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":71556,"byte_end":71601,"line_start":435,"line_end":435,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":71606,"byte_end":71680,"line_start":436,"line_end":436,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":71685,"byte_end":71721,"line_start":437,"line_end":437,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":71726,"byte_end":71735,"line_start":438,"line_end":438,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":71740,"byte_end":71747,"line_start":439,"line_end":439,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":72738,"byte_end":72748,"line_start":467,"line_end":467,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where\nF: for<'_> FnOnce(&'_ Self::Ok) -> (), Self: Sized","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":72011,"byte_end":72084,"line_start":449,"line_end":449,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":72089,"byte_end":72092,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":72097,"byte_end":72172,"line_start":451,"line_end":451,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":72177,"byte_end":72250,"line_start":452,"line_end":452,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":72255,"byte_end":72324,"line_start":453,"line_end":453,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":72329,"byte_end":72382,"line_start":454,"line_end":454,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":72387,"byte_end":72390,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":72395,"byte_end":72409,"line_start":456,"line_end":456,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":72414,"byte_end":72417,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":72422,"byte_end":72429,"line_start":458,"line_end":458,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":72434,"byte_end":72475,"line_start":459,"line_end":459,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":72480,"byte_end":72518,"line_start":460,"line_end":460,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":72523,"byte_end":72526,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":72531,"byte_end":72573,"line_start":462,"line_end":462,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":72578,"byte_end":72659,"line_start":463,"line_end":463,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":72664,"byte_end":72704,"line_start":464,"line_end":464,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":72709,"byte_end":72718,"line_start":465,"line_end":465,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":72723,"byte_end":72730,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":73674,"byte_end":73685,"line_start":493,"line_end":493,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: for<'_> FnOnce(&'_ Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":72947,"byte_end":73018,"line_start":475,"line_end":475,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":73023,"byte_end":73026,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":73031,"byte_end":73106,"line_start":477,"line_end":477,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":73111,"byte_end":73184,"line_start":478,"line_end":478,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":73189,"byte_end":73258,"line_start":479,"line_end":479,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":73263,"byte_end":73317,"line_start":480,"line_end":480,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":73322,"byte_end":73325,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":73330,"byte_end":73344,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":73349,"byte_end":73352,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":73357,"byte_end":73364,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":73369,"byte_end":73410,"line_start":485,"line_end":485,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":73415,"byte_end":73453,"line_start":486,"line_end":486,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":73458,"byte_end":73461,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":73466,"byte_end":73509,"line_start":488,"line_end":488,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":73514,"byte_end":73594,"line_start":489,"line_end":489,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":73599,"byte_end":73640,"line_start":490,"line_end":490,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":73645,"byte_end":73654,"line_start":491,"line_end":491,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":73659,"byte_end":73666,"line_start":492,"line_end":492,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":74070,"byte_end":74081,"line_start":505,"line_end":505,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":73889,"byte_end":73964,"line_start":501,"line_end":501,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":73969,"byte_end":73998,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":74003,"byte_end":74006,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":74011,"byte_end":74062,"line_start":504,"line_end":504,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":75260,"byte_end":75278,"line_start":538,"line_end":538,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":74316,"byte_end":74391,"line_start":513,"line_end":513,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":74396,"byte_end":74419,"line_start":514,"line_end":514,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":74424,"byte_end":74427,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":74432,"byte_end":74504,"line_start":516,"line_end":516,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":74509,"byte_end":74582,"line_start":517,"line_end":517,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":74587,"byte_end":74601,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":74606,"byte_end":74609,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":74614,"byte_end":74684,"line_start":520,"line_end":520,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":74689,"byte_end":74707,"line_start":521,"line_end":521,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":74712,"byte_end":74715,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":74720,"byte_end":74734,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":74739,"byte_end":74742,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":74747,"byte_end":74754,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":74759,"byte_end":74800,"line_start":526,"line_end":526,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":74805,"byte_end":74843,"line_start":527,"line_end":527,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":74848,"byte_end":74894,"line_start":528,"line_end":528,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":74899,"byte_end":74902,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":74907,"byte_end":74967,"line_start":530,"line_end":530,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":74972,"byte_end":75051,"line_start":531,"line_end":531,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":75056,"byte_end":75059,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":75064,"byte_end":75121,"line_start":533,"line_end":533,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":75126,"byte_end":75178,"line_start":534,"line_end":534,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":75183,"byte_end":75226,"line_start":535,"line_end":535,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":75231,"byte_end":75240,"line_start":536,"line_end":536,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":75245,"byte_end":75252,"line_start":537,"line_end":537,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":76369,"byte_end":76383,"line_start":570,"line_end":570,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":" Unwraps this future's output, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's output, producing a future with this future's","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":75538,"byte_end":75609,"line_start":548,"line_end":548,"column_start":5,"column_end":76}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":75614,"byte_end":75651,"line_start":549,"line_end":549,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":75656,"byte_end":75705,"line_start":550,"line_end":550,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":75710,"byte_end":75713,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":75718,"byte_end":75787,"line_start":552,"line_end":552,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":75792,"byte_end":75865,"line_start":553,"line_end":553,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":75870,"byte_end":75940,"line_start":554,"line_end":554,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":75945,"byte_end":75963,"line_start":555,"line_end":555,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":75968,"byte_end":75971,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":75976,"byte_end":76044,"line_start":557,"line_end":557,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":76049,"byte_end":76052,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":76057,"byte_end":76071,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":76076,"byte_end":76079,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":76084,"byte_end":76091,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":76096,"byte_end":76134,"line_start":562,"line_end":562,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":76139,"byte_end":76142,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":76147,"byte_end":76188,"line_start":564,"line_end":564,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":76193,"byte_end":76245,"line_start":565,"line_end":565,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":76250,"byte_end":76297,"line_start":566,"line_end":566,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":76302,"byte_end":76335,"line_start":567,"line_end":567,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":76340,"byte_end":76349,"line_start":568,"line_end":568,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":76354,"byte_end":76361,"line_start":569,"line_end":569,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":77638,"byte_end":77649,"line_start":610,"line_end":610,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":76937,"byte_end":76990,"line_start":589,"line_end":589,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":76995,"byte_end":77031,"line_start":590,"line_end":590,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":77036,"byte_end":77039,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":77044,"byte_end":77093,"line_start":592,"line_end":592,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":77098,"byte_end":77165,"line_start":593,"line_end":593,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":77170,"byte_end":77183,"line_start":594,"line_end":594,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":77188,"byte_end":77191,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":77196,"byte_end":77210,"line_start":596,"line_end":596,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":77215,"byte_end":77218,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":77223,"byte_end":77230,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":77235,"byte_end":77294,"line_start":599,"line_end":599,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":77299,"byte_end":77302,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":77307,"byte_end":77326,"line_start":601,"line_end":601,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":77331,"byte_end":77349,"line_start":602,"line_end":602,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":77354,"byte_end":77426,"line_start":603,"line_end":603,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":77431,"byte_end":77463,"line_start":604,"line_end":604,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":77468,"byte_end":77475,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":77480,"byte_end":77556,"line_start":606,"line_end":606,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":77561,"byte_end":77564,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":77569,"byte_end":77618,"line_start":608,"line_end":608,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":77623,"byte_end":77630,"line_start":609,"line_end":609,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":77908,"byte_end":77922,"line_start":619,"line_end":619,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"fn try_poll_unpin<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":77805,"byte_end":77878,"line_start":617,"line_end":617,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":77883,"byte_end":77900,"line_start":618,"line_end":618,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":10526},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86091,"byte_end":86095,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":10528}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":85957,"byte_end":85994,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86012,"byte_end":86079,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":809},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86637,"byte_end":86641,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"fn lazy<F, R>(F) -> Lazy<F> where F: for<'_, '_> FnOnce(&'_ mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86200,"byte_end":86268,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86269,"byte_end":86272,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86273,"byte_end":86336,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86337,"byte_end":86340,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86341,"byte_end":86355,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86356,"byte_end":86359,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86360,"byte_end":86367,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86368,"byte_end":86409,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86410,"byte_end":86434,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86435,"byte_end":86438,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86439,"byte_end":86471,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86472,"byte_end":86499,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86500,"byte_end":86503,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86504,"byte_end":86541,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86542,"byte_end":86566,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86567,"byte_end":86574,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86575,"byte_end":86611,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86612,"byte_end":86621,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86622,"byte_end":86629,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86849,"byte_end":86862,"line_start":46,"line_end":46,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Lazy<F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":87019,"byte_end":87023,"line_start":57,"line_end":57,"column_start":8,"column_end":12},"name":"poll","qualname":"<Lazy<F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<R>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10532},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":87468,"byte_end":87475,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":10534}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":87329,"byte_end":87371,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":87389,"byte_end":87456,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":87563,"byte_end":87576,"line_start":15,"line_end":15,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Pending<T> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":855},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":88036,"byte_end":88043,"line_start":37,"line_end":37,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":87616,"byte_end":87696,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":87697,"byte_end":87710,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":87711,"byte_end":87714,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":87715,"byte_end":87777,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":87778,"byte_end":87781,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":87782,"byte_end":87796,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":87797,"byte_end":87800,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":87801,"byte_end":87814,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":87815,"byte_end":87856,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":87857,"byte_end":87881,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":87882,"byte_end":87885,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":87886,"byte_end":87921,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":87922,"byte_end":87948,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":87949,"byte_end":87968,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":87969,"byte_end":87978,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":87979,"byte_end":87986,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":88195,"byte_end":88199,"line_start":44,"line_end":44,"column_start":8,"column_end":12},"name":"poll","qualname":"<Pending<T> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<T>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":88358,"byte_end":88363,"line_start":52,"line_end":52,"column_start":8,"column_end":13},"name":"clone","qualname":"<Pending<T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10540},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":88815,"byte_end":88821,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":10538},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":88780,"byte_end":88810,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":10542},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":88835,"byte_end":88838,"line_start":16,"line_end":16,"column_start":25,"column_end":28},"name":"0","qualname":"::future::maybe_done::MaybeDone::Future::0","value":"Fut","parent":{"krate":0,"index":10540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10543},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":88888,"byte_end":88892,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":10538},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":88845,"byte_end":88883,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":10545},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":88893,"byte_end":88904,"line_start":18,"line_end":18,"column_start":10,"column_end":21},"name":"0","qualname":"::future::maybe_done::MaybeDone::Done::0","value":"<Fut as futures_core::Future>::Output","parent":{"krate":0,"index":10543},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10546},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89054,"byte_end":89058,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":10538},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":88911,"byte_end":88977,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":88982,"byte_end":89049,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":10538},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":88751,"byte_end":88760,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"enum MaybeDone<Fut> where Fut: Future {\n    Future(Fut),\n    Done(Fut::Output),\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":10540},{"krate":0,"index":10543},{"krate":0,"index":10546}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":88629,"byte_end":88666,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":88667,"byte_end":88670,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":88671,"byte_end":88724,"line_start":12,"line_end":12,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":902},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89579,"byte_end":89589,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"fn maybe_done<Fut>(Fut) -> MaybeDone<Fut> where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89118,"byte_end":89155,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89156,"byte_end":89159,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89160,"byte_end":89174,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89175,"byte_end":89178,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89179,"byte_end":89186,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89187,"byte_end":89228,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89229,"byte_end":89253,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89254,"byte_end":89279,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89280,"byte_end":89283,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89284,"byte_end":89333,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89334,"byte_end":89355,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89356,"byte_end":89408,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89409,"byte_end":89444,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89445,"byte_end":89500,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89501,"byte_end":89553,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89554,"byte_end":89563,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89564,"byte_end":89571,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":90030,"byte_end":90040,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"fn output_mut<'_>(Pin<&'_ mut Self>) -> Option<&'_ mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89732,"byte_end":89817,"line_start":48,"line_end":48,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89822,"byte_end":89893,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89898,"byte_end":89971,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89976,"byte_end":90004,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":90009,"byte_end":90018,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":90388,"byte_end":90399,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"fn take_output<'_>(Pin<&'_ mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":90268,"byte_end":90334,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":90339,"byte_end":90362,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":90367,"byte_end":90376,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":90842,"byte_end":90855,"line_start":80,"line_end":80,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<MaybeDone<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":91075,"byte_end":91079,"line_start":91,"line_end":91,"column_start":8,"column_end":12},"name":"poll","qualname":"<MaybeDone<Fut> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10553},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":92024,"byte_end":92030,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":10551},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":91989,"byte_end":92019,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":10555},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":92044,"byte_end":92047,"line_start":16,"line_end":16,"column_start":25,"column_end":28},"name":"0","qualname":"::future::try_maybe_done::TryMaybeDone::Future::0","value":"Fut","parent":{"krate":0,"index":10553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10556},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":92097,"byte_end":92101,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":10551},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":92054,"byte_end":92092,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":10558},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":92102,"byte_end":92109,"line_start":18,"line_end":18,"column_start":10,"column_end":17},"name":"0","qualname":"::future::try_maybe_done::TryMaybeDone::Done::0","value":"<Fut as futures_core::TryFuture>::Ok","parent":{"krate":0,"index":10556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10559},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":92309,"byte_end":92313,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":10551},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":92116,"byte_end":92185,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":92190,"byte_end":92260,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":92265,"byte_end":92304,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":10551},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":91954,"byte_end":91966,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"enum TryMaybeDone<Fut> where Fut: TryFuture {\n    Future(Fut),\n    Done(Fut::Ok),\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":10553},{"krate":0,"index":10556},{"krate":0,"index":10559}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"/ A future that may have completed with an error.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":91814,"byte_end":91865,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":91866,"byte_end":91869,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`try_maybe_done()`] function.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":91870,"byte_end":91927,"line_start":12,"line_end":12,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":954},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":92427,"byte_end":92441,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"fn try_maybe_done<Fut>(Fut) -> TryMaybeDone<Fut> where Fut: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":92379,"byte_end":92419,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":92928,"byte_end":92938,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"fn output_mut<'_>(Pin<&'_ mut Self>) -> Option<&'_ mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":92619,"byte_end":92704,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":92709,"byte_end":92780,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":92785,"byte_end":92869,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":92874,"byte_end":92902,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":92907,"byte_end":92916,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":93288,"byte_end":93299,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"fn take_output<'_>(Pin<&'_ mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":93165,"byte_end":93234,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":93239,"byte_end":93262,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":93267,"byte_end":93276,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":93747,"byte_end":93760,"line_start":65,"line_end":65,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryMaybeDone<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":94006,"byte_end":94010,"line_start":76,"line_end":76,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryMaybeDone<Fut> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10564},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":95510,"byte_end":95522,"line_start":28,"line_end":28,"column_start":16,"column_end":28},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":10566}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":95623,"byte_end":95630,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"default","qualname":"<OptionFuture<F> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":95771,"byte_end":95775,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"poll","qualname":"<OptionFuture<F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":96059,"byte_end":96072,"line_start":52,"line_end":52,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<OptionFuture<F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":96258,"byte_end":96262,"line_start":61,"line_end":61,"column_start":8,"column_end":12},"name":"from","qualname":"<OptionFuture<T> as std::convert::From>::from","value":"fn from(Option<T>) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1031},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":96640,"byte_end":96646,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":1033}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":96520,"byte_end":96560,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":96561,"byte_end":96628,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1036},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":97233,"byte_end":97240,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"fn poll_fn<T, F>(F) -> PollFn<F> where F: for<'_, '_> FnMut(&'_ mut Context)\n-> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":96697,"byte_end":96768,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":96769,"byte_end":96772,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":96773,"byte_end":96839,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":96840,"byte_end":96843,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":96844,"byte_end":96858,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":96859,"byte_end":96862,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":96863,"byte_end":96870,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":96871,"byte_end":96912,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":96913,"byte_end":96946,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":96947,"byte_end":96986,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":96987,"byte_end":96990,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":96991,"byte_end":97048,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":97049,"byte_end":97092,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":97093,"byte_end":97098,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":97099,"byte_end":97102,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":97103,"byte_end":97144,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":97145,"byte_end":97207,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":97208,"byte_end":97217,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":97218,"byte_end":97225,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":97402,"byte_end":97405,"line_start":44,"line_end":44,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PollFn<F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":97621,"byte_end":97625,"line_start":55,"line_end":55,"column_start":8,"column_end":12},"name":"poll","qualname":"<PollFn<F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<T>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10603},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":98174,"byte_end":98187,"line_start":13,"line_end":13,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::future::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":10605}],"decl_id":null,"docs":" Future for the [`poll_immediate`](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":98368,"byte_end":98372,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"poll","qualname":"<PollImmediate<F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Option<T>>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":98351,"byte_end":98360,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":98870,"byte_end":98883,"line_start":41,"line_end":41,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<PollImmediate<T> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":99962,"byte_end":99971,"line_start":76,"line_end":76,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<PollImmediate<F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1095},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":101595,"byte_end":101609,"line_start":124,"line_end":124,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::future::poll_immediate::poll_immediate","value":"fn poll_immediate<F>(F) -> PollImmediate<F> where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with an Option of a value.\n Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with an Option of a value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":100407,"byte_end":100480,"line_start":89,"line_end":89,"column_start":1,"column_end":74}},{"value":"/ Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":100481,"byte_end":100605,"line_start":90,"line_end":90,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":100606,"byte_end":100609,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # Caution","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":100610,"byte_end":100623,"line_start":92,"line_end":92,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":100624,"byte_end":100627,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ When consuming the future by this function, note the following:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":100628,"byte_end":100695,"line_start":94,"line_end":94,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":100696,"byte_end":100699,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ - This function does not guarantee that the future will run to completion, so it is generally incompatible with passing the non-cancellation-safe future by value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":100700,"byte_end":100866,"line_start":96,"line_end":96,"column_start":1,"column_end":167}},{"value":"/ - Even if the future is cancellation-safe, creating and dropping new futures frequently may lead to performance problems.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":100867,"byte_end":100992,"line_start":97,"line_end":97,"column_start":1,"column_end":126}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":100993,"byte_end":100996,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":100997,"byte_end":101011,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":101012,"byte_end":101015,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":101016,"byte_end":101023,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":101024,"byte_end":101065,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":101066,"byte_end":101090,"line_start":103,"line_end":103,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":101091,"byte_end":101094,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ let r = future::poll_immediate(async { 1_u32 });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":101095,"byte_end":101147,"line_start":105,"line_end":105,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(r.await, Some(1));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":101148,"byte_end":101181,"line_start":106,"line_end":106,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":101182,"byte_end":101185,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ let p = future::poll_immediate(future::pending::<i32>());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":101186,"byte_end":101247,"line_start":108,"line_end":108,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(p.await, None);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":101248,"byte_end":101278,"line_start":109,"line_end":109,"column_start":1,"column_end":31}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":101279,"byte_end":101288,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":101289,"byte_end":101296,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":101297,"byte_end":101300,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ### Reusing a future","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":101301,"byte_end":101325,"line_start":113,"line_end":113,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":101326,"byte_end":101329,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":101330,"byte_end":101337,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":101338,"byte_end":101379,"line_start":116,"line_end":116,"column_start":1,"column_end":42}},{"value":"/ use futures::{future, pin_mut};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":101380,"byte_end":101415,"line_start":117,"line_end":117,"column_start":1,"column_end":36}},{"value":"/ let f = async {futures::pending!(); 42_u8};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":101416,"byte_end":101463,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ pin_mut!(f);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":101464,"byte_end":101480,"line_start":119,"line_end":119,"column_start":1,"column_end":17}},{"value":"/ assert_eq!(None, future::poll_immediate(&mut f).await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":101481,"byte_end":101540,"line_start":120,"line_end":120,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(42, f.await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":101541,"byte_end":101569,"line_start":121,"line_end":121,"column_start":1,"column_end":29}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":101570,"byte_end":101579,"line_start":122,"line_end":122,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":101580,"byte_end":101587,"line_start":123,"line_end":123,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10642},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102032,"byte_end":102037,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":101881,"byte_end":101928,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":101953,"byte_end":102020,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102160,"byte_end":102170,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102077,"byte_end":102134,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102139,"byte_end":102148,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102301,"byte_end":102314,"line_start":22,"line_end":22,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Ready<T> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102439,"byte_end":102443,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"poll","qualname":"<Ready<T> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<T>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102422,"byte_end":102431,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1137},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102836,"byte_end":102841,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102590,"byte_end":102650,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102651,"byte_end":102654,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102655,"byte_end":102669,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102670,"byte_end":102673,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102674,"byte_end":102681,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102682,"byte_end":102723,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102724,"byte_end":102748,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102749,"byte_end":102752,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102753,"byte_end":102782,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102783,"byte_end":102810,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102811,"byte_end":102820,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102821,"byte_end":102828,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1139},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":103176,"byte_end":103178,"line_start":64,"line_end":64,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102910,"byte_end":102977,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102978,"byte_end":102981,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102982,"byte_end":102996,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102997,"byte_end":103000,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":103001,"byte_end":103008,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":103009,"byte_end":103050,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":103051,"byte_end":103075,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":103076,"byte_end":103079,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":103080,"byte_end":103118,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":103119,"byte_end":103150,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":103151,"byte_end":103160,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":103161,"byte_end":103168,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1142},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":103509,"byte_end":103512,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":103242,"byte_end":103308,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":103309,"byte_end":103312,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":103313,"byte_end":103327,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":103328,"byte_end":103331,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":103332,"byte_end":103339,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":103340,"byte_end":103381,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":103382,"byte_end":103406,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":103407,"byte_end":103410,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":103411,"byte_end":103450,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":103451,"byte_end":103483,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":103484,"byte_end":103493,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":103494,"byte_end":103501,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10744},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":105798,"byte_end":105802,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":10747},{"krate":0,"index":10748}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10789},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":105868,"byte_end":105873,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":10793},{"krate":0,"index":10794},{"krate":0,"index":10795}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10846},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":105945,"byte_end":105950,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":10851},{"krate":0,"index":10852},{"krate":0,"index":10853},{"krate":0,"index":10854}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10915},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106028,"byte_end":106033,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":10921},{"krate":0,"index":10922},{"krate":0,"index":10923},{"krate":0,"index":10924},{"krate":0,"index":10925}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1193},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106648,"byte_end":106652,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106071,"byte_end":106142,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106143,"byte_end":106146,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106147,"byte_end":106218,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106219,"byte_end":106294,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106295,"byte_end":106298,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106299,"byte_end":106368,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106369,"byte_end":106395,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106396,"byte_end":106399,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106400,"byte_end":106414,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106415,"byte_end":106418,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106419,"byte_end":106426,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106427,"byte_end":106468,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106469,"byte_end":106493,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106494,"byte_end":106497,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106498,"byte_end":106522,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106523,"byte_end":106547,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106548,"byte_end":106582,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106583,"byte_end":106586,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106587,"byte_end":106622,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106623,"byte_end":106632,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106633,"byte_end":106640,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1196},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107198,"byte_end":107203,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3> where\nFut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106859,"byte_end":106911,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106912,"byte_end":106915,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106916,"byte_end":106930,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106931,"byte_end":106934,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106935,"byte_end":106942,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106943,"byte_end":106984,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":106985,"byte_end":107009,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107010,"byte_end":107013,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107014,"byte_end":107038,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107039,"byte_end":107063,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107064,"byte_end":107088,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107089,"byte_end":107128,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107129,"byte_end":107132,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107133,"byte_end":107172,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107173,"byte_end":107182,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107183,"byte_end":107190,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1200},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107865,"byte_end":107870,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107495,"byte_end":107547,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107548,"byte_end":107551,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107552,"byte_end":107566,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107567,"byte_end":107570,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107571,"byte_end":107578,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107579,"byte_end":107620,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107621,"byte_end":107645,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107646,"byte_end":107649,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107650,"byte_end":107674,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107675,"byte_end":107699,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107700,"byte_end":107724,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107725,"byte_end":107749,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107750,"byte_end":107792,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107793,"byte_end":107796,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107797,"byte_end":107839,"line_start":164,"line_end":164,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107840,"byte_end":107849,"line_start":165,"line_end":165,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":107850,"byte_end":107857,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1205},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":108635,"byte_end":108640,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":108234,"byte_end":108286,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":108287,"byte_end":108290,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":108291,"byte_end":108305,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":108306,"byte_end":108309,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":108310,"byte_end":108317,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":108318,"byte_end":108359,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":108360,"byte_end":108384,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":108385,"byte_end":108388,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":108389,"byte_end":108413,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":108414,"byte_end":108438,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":108439,"byte_end":108463,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":108464,"byte_end":108488,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":108489,"byte_end":108513,"line_start":195,"line_end":195,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":108514,"byte_end":108559,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":108560,"byte_end":108563,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":108564,"byte_end":108609,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":108610,"byte_end":108619,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":108620,"byte_end":108627,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1286},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":110011,"byte_end":110018,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":1288}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":109890,"byte_end":109957,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":109958,"byte_end":109999,"line_start":26,"line_end":26,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1298},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":110469,"byte_end":110472,"line_start":55,"line_end":55,"column_start":8,"column_end":11},"name":"fmt","qualname":"<JoinAll<F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1299},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":112113,"byte_end":112121,"line_start":102,"line_end":102,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"fn join_all<I>(I) -> JoinAll<I::Item> where I: IntoIterator, I::Item: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":110827,"byte_end":110907,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":110908,"byte_end":110918,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":110919,"byte_end":110922,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":110923,"byte_end":111002,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111003,"byte_end":111083,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111084,"byte_end":111102,"line_start":71,"line_end":71,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111103,"byte_end":111106,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111107,"byte_end":111184,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111185,"byte_end":111242,"line_start":74,"line_end":74,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111243,"byte_end":111246,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111247,"byte_end":111261,"line_start":76,"line_end":76,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111262,"byte_end":111265,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ `join_all` will switch to the more powerful [`FuturesOrdered`] for performance","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111266,"byte_end":111348,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/ reasons if the number of futures is large. You may want to look into using it or","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111349,"byte_end":111433,"line_start":79,"line_end":79,"column_start":1,"column_end":85}},{"value":"/ it's counterpart [`FuturesUnordered`][crate::stream::FuturesUnordered] directly.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111434,"byte_end":111518,"line_start":80,"line_end":80,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111519,"byte_end":111522,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Some examples for additional functionality provided by these are:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111523,"byte_end":111592,"line_start":82,"line_end":82,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111593,"byte_end":111596,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111597,"byte_end":111665,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111666,"byte_end":111669,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111670,"byte_end":111747,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111748,"byte_end":111829,"line_start":87,"line_end":87,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111830,"byte_end":111833,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111834,"byte_end":111848,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111849,"byte_end":111852,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111853,"byte_end":111860,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111861,"byte_end":111902,"line_start":92,"line_end":92,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111903,"byte_end":111937,"line_start":93,"line_end":93,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111938,"byte_end":111941,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111942,"byte_end":111979,"line_start":95,"line_end":95,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111980,"byte_end":111983,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":111984,"byte_end":112031,"line_start":97,"line_end":97,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":112032,"byte_end":112035,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":112036,"byte_end":112087,"line_start":99,"line_end":99,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":112088,"byte_end":112097,"line_start":100,"line_end":100,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":112098,"byte_end":112105,"line_start":101,"line_end":101,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":113018,"byte_end":113022,"line_start":136,"line_end":136,"column_start":8,"column_end":12},"name":"poll","qualname":"<JoinAll<F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":113957,"byte_end":113966,"line_start":163,"line_end":163,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<JoinAll<F> as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = F>","parent":{"krate":2,"index":8401},"children":[],"decl_id":{"krate":2,"index":8403},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10996},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":114360,"byte_end":114366,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":10999}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":114222,"byte_end":114263,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":114264,"byte_end":114331,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1348},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":116630,"byte_end":116636,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":114457,"byte_end":114527,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":114528,"byte_end":114531,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":114532,"byte_end":114610,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":114611,"byte_end":114687,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":114688,"byte_end":114760,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":114761,"byte_end":114764,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":114765,"byte_end":114837,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":114838,"byte_end":114866,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":114867,"byte_end":114870,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":114871,"byte_end":114938,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":114939,"byte_end":115003,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115004,"byte_end":115054,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115055,"byte_end":115058,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115059,"byte_end":115073,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115074,"byte_end":115077,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115078,"byte_end":115098,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115099,"byte_end":115102,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115103,"byte_end":115110,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115111,"byte_end":115152,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ use futures::{","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115153,"byte_end":115171,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/     pin_mut,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115172,"byte_end":115188,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     future::Either,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115189,"byte_end":115212,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     future::self,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115213,"byte_end":115234,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115235,"byte_end":115241,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115242,"byte_end":115245,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115246,"byte_end":115337,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ let future1 = async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115338,"byte_end":115363,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/     future::pending::<()>().await; // will never finish","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115364,"byte_end":115423,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/     1","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115424,"byte_end":115433,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115434,"byte_end":115440,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/ let future2 = async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115441,"byte_end":115466,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/     future::ready(2).await","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115467,"byte_end":115497,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115498,"byte_end":115504,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115505,"byte_end":115508,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115509,"byte_end":115555,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115556,"byte_end":115578,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115579,"byte_end":115601,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115602,"byte_end":115605,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115606,"byte_end":115668,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1,  // `value1` is resolved from `future1`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115669,"byte_end":115753,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future2`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115754,"byte_end":115827,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115828,"byte_end":115912,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115913,"byte_end":115986,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115987,"byte_end":115993,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115994,"byte_end":115997,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":115998,"byte_end":116022,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":116023,"byte_end":116032,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":116033,"byte_end":116040,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":116041,"byte_end":116044,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":116045,"byte_end":116071,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":116072,"byte_end":116075,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":116076,"byte_end":116083,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":116084,"byte_end":116143,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":116144,"byte_end":116147,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":116148,"byte_end":116201,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":116202,"byte_end":116205,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":116206,"byte_end":116281,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":116282,"byte_end":116314,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":116315,"byte_end":116347,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":116348,"byte_end":116353,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":116354,"byte_end":116398,"line_start":76,"line_end":76,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":116399,"byte_end":116425,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":116426,"byte_end":116503,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":116504,"byte_end":116583,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":116584,"byte_end":116597,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":116598,"byte_end":116608,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":116609,"byte_end":116614,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":116615,"byte_end":116622,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":117015,"byte_end":117019,"line_start":101,"line_end":101,"column_start":8,"column_end":12},"name":"poll","qualname":"<Select<A, B> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1359},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":117584,"byte_end":117597,"line_start":122,"line_end":122,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Select<A, B> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11004},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":118011,"byte_end":118020,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":11006}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":117871,"byte_end":117914,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":117932,"byte_end":117999,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1398},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":118800,"byte_end":118810,"line_start":34,"line_end":34,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":118098,"byte_end":118164,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":118165,"byte_end":118168,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":118169,"byte_end":118249,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":118250,"byte_end":118328,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":118329,"byte_end":118397,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":118398,"byte_end":118401,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":118402,"byte_end":118482,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":118483,"byte_end":118557,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":118558,"byte_end":118561,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":118562,"byte_end":118639,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":118640,"byte_end":118697,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":118698,"byte_end":118701,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":118702,"byte_end":118714,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":118715,"byte_end":118718,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":118719,"byte_end":118792,"line_start":33,"line_end":33,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":119191,"byte_end":119201,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectAll<Fut>>::into_inner","value":"fn into_inner(Self) -> Vec<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying futures.\n","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":119116,"byte_end":119179,"line_start":45,"line_end":45,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1406},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":119362,"byte_end":119366,"line_start":54,"line_end":54,"column_start":8,"column_end":12},"name":"poll","qualname":"<SelectAll<Fut> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":119975,"byte_end":119984,"line_start":71,"line_end":71,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<SelectAll<Fut> as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = Fut>","parent":{"krate":2,"index":8401},"children":[],"decl_id":{"krate":2,"index":8403},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11080},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":122947,"byte_end":122954,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":11083},{"krate":0,"index":11084}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11125},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":123024,"byte_end":123032,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":11129},{"krate":0,"index":11130},{"krate":0,"index":11131}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11182},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":123108,"byte_end":123116,"line_start":100,"line_end":100,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":11187},{"krate":0,"index":11188},{"krate":0,"index":11189},{"krate":0,"index":11190}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11251},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":123198,"byte_end":123206,"line_start":103,"line_end":103,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":11257},{"krate":0,"index":11258},{"krate":0,"index":11259},{"krate":0,"index":11260},{"krate":0,"index":11261}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1454},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124479,"byte_end":124487,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":123244,"byte_end":123317,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":123318,"byte_end":123350,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":123351,"byte_end":123354,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":123355,"byte_end":123426,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":123427,"byte_end":123503,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccessful, it will complete with the first error","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":123504,"byte_end":123576,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ encountered.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":123577,"byte_end":123593,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":123594,"byte_end":123597,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":123598,"byte_end":123667,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":123668,"byte_end":123694,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":123695,"byte_end":123698,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":123699,"byte_end":123713,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":123714,"byte_end":123717,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":123718,"byte_end":123794,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":123795,"byte_end":123831,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":123832,"byte_end":123835,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":123836,"byte_end":123843,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":123844,"byte_end":123885,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":123886,"byte_end":123910,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":123911,"byte_end":123914,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":123915,"byte_end":123960,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":123961,"byte_end":124006,"line_start":127,"line_end":127,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124007,"byte_end":124045,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124046,"byte_end":124049,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124050,"byte_end":124089,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124090,"byte_end":124099,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124100,"byte_end":124107,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124108,"byte_end":124111,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124112,"byte_end":124182,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124183,"byte_end":124198,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124199,"byte_end":124202,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124203,"byte_end":124210,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124211,"byte_end":124252,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124253,"byte_end":124277,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124278,"byte_end":124281,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124282,"byte_end":124327,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124328,"byte_end":124374,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124375,"byte_end":124413,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124414,"byte_end":124417,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124418,"byte_end":124453,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124454,"byte_end":124463,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124464,"byte_end":124471,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1457},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":125143,"byte_end":125152,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> TryJoin3<Fut1, Fut2, Fut3>\nwhere Fut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>,\nFut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124725,"byte_end":124785,"line_start":156,"line_end":156,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124786,"byte_end":124789,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124790,"byte_end":124804,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124805,"byte_end":124808,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124809,"byte_end":124816,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124817,"byte_end":124858,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124859,"byte_end":124883,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124884,"byte_end":124887,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124888,"byte_end":124933,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124934,"byte_end":124979,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":124980,"byte_end":125025,"line_start":166,"line_end":166,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":125026,"byte_end":125069,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":125070,"byte_end":125073,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":125074,"byte_end":125117,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":125118,"byte_end":125127,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":125128,"byte_end":125135,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1461},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":125980,"byte_end":125989,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":125510,"byte_end":125570,"line_start":187,"line_end":187,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":125571,"byte_end":125574,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":125575,"byte_end":125589,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":125590,"byte_end":125593,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":125594,"byte_end":125601,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":125602,"byte_end":125643,"line_start":192,"line_end":192,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":125644,"byte_end":125668,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":125669,"byte_end":125672,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":125673,"byte_end":125718,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":125719,"byte_end":125764,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":125765,"byte_end":125810,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":125811,"byte_end":125856,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":125857,"byte_end":125903,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":125904,"byte_end":125907,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":125908,"byte_end":125954,"line_start":201,"line_end":201,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":125955,"byte_end":125964,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":125965,"byte_end":125972,"line_start":203,"line_end":203,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1466},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":126961,"byte_end":126970,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":126439,"byte_end":126499,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":126500,"byte_end":126503,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":126504,"byte_end":126518,"line_start":223,"line_end":223,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":126519,"byte_end":126522,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":126523,"byte_end":126530,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":126531,"byte_end":126572,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":126573,"byte_end":126597,"line_start":227,"line_end":227,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":126598,"byte_end":126601,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":126602,"byte_end":126647,"line_start":229,"line_end":229,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":126648,"byte_end":126693,"line_start":230,"line_end":230,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":126694,"byte_end":126739,"line_start":231,"line_end":231,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":126740,"byte_end":126785,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":126786,"byte_end":126831,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":126832,"byte_end":126881,"line_start":234,"line_end":234,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":126882,"byte_end":126885,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":126886,"byte_end":126935,"line_start":236,"line_end":236,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":126936,"byte_end":126945,"line_start":237,"line_end":237,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":126946,"byte_end":126953,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1564},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":128219,"byte_end":128229,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":1566}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":128094,"byte_end":128139,"line_start":25,"line_end":25,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":128140,"byte_end":128207,"line_start":26,"line_end":26,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":128701,"byte_end":128704,"line_start":54,"line_end":54,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryJoinAll<F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1576},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":130317,"byte_end":130329,"line_start":103,"line_end":103,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"fn try_join_all<I>(I) -> TryJoinAll<I::Item> where I: IntoIterator,\nI::Item: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":129068,"byte_end":129147,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":129148,"byte_end":129178,"line_start":66,"line_end":66,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":129179,"byte_end":129182,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":129183,"byte_end":129262,"line_start":68,"line_end":68,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":129263,"byte_end":129343,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":129344,"byte_end":129362,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":129363,"byte_end":129366,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":129367,"byte_end":129445,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":129446,"byte_end":129526,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":129527,"byte_end":129601,"line_start":74,"line_end":74,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":129602,"byte_end":129625,"line_start":75,"line_end":75,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":129626,"byte_end":129629,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":129630,"byte_end":129707,"line_start":77,"line_end":77,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":129708,"byte_end":129765,"line_start":78,"line_end":78,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":129766,"byte_end":129769,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":129770,"byte_end":129784,"line_start":80,"line_end":80,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":129785,"byte_end":129788,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":129789,"byte_end":129796,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":129797,"byte_end":129838,"line_start":83,"line_end":83,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":129839,"byte_end":129885,"line_start":84,"line_end":84,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":129886,"byte_end":129889,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":129890,"byte_end":129913,"line_start":86,"line_end":86,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":129914,"byte_end":129948,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":129949,"byte_end":129983,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":129984,"byte_end":130018,"line_start":89,"line_end":89,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":130019,"byte_end":130025,"line_start":90,"line_end":90,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":130026,"byte_end":130029,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":130030,"byte_end":130093,"line_start":92,"line_end":92,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":130094,"byte_end":130097,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":130098,"byte_end":130121,"line_start":94,"line_end":94,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":130122,"byte_end":130156,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":130157,"byte_end":130192,"line_start":96,"line_end":96,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":130193,"byte_end":130227,"line_start":97,"line_end":97,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":130228,"byte_end":130234,"line_start":98,"line_end":98,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":130235,"byte_end":130238,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":130239,"byte_end":130291,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":130292,"byte_end":130301,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":130302,"byte_end":130309,"line_start":102,"line_end":102,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1581},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":131449,"byte_end":131453,"line_start":142,"line_end":142,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryJoinAll<F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1585},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":132982,"byte_end":132991,"line_start":183,"line_end":183,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<TryJoinAll<F> as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = F>","parent":{"krate":2,"index":8401},"children":[],"decl_id":{"krate":2,"index":8403},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11332},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":133368,"byte_end":133377,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":11335}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":133226,"byte_end":133271,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":133272,"byte_end":133339,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1622},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":134962,"byte_end":134972,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":133471,"byte_end":133541,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":133542,"byte_end":133545,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":133546,"byte_end":133624,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":133625,"byte_end":133701,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":133702,"byte_end":133774,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":133775,"byte_end":133778,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":133779,"byte_end":133851,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":133852,"byte_end":133880,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":133881,"byte_end":133884,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":133885,"byte_end":133952,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":133953,"byte_end":134024,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":134025,"byte_end":134075,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":134076,"byte_end":134079,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":134080,"byte_end":134094,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":134095,"byte_end":134098,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":134099,"byte_end":134106,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":134107,"byte_end":134191,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":134192,"byte_end":134195,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":134196,"byte_end":134253,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":134254,"byte_end":134257,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":134258,"byte_end":134340,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":134341,"byte_end":134398,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":134399,"byte_end":134456,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":134457,"byte_end":134483,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":134484,"byte_end":134489,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":134490,"byte_end":134585,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":134586,"byte_end":134609,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":134610,"byte_end":134690,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":134691,"byte_end":134772,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":134773,"byte_end":134843,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":134844,"byte_end":134915,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":134916,"byte_end":134929,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":134930,"byte_end":134940,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":134941,"byte_end":134946,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":134947,"byte_end":134954,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1629},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":135501,"byte_end":135505,"line_start":69,"line_end":69,"column_start":8,"column_end":12},"name":"poll","qualname":"<TrySelect<A, B> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11340},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":136603,"byte_end":136611,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":11342}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":136464,"byte_end":136506,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":136524,"byte_end":136591,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1672},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":137333,"byte_end":137342,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"fn select_ok<I>(I) -> SelectOk<I::Item> where I: IntoIterator,\nI::Item: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":136688,"byte_end":136782,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":136783,"byte_end":136786,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":136787,"byte_end":136876,"line_start":21,"line_end":21,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":136877,"byte_end":136961,"line_start":22,"line_end":22,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":136962,"byte_end":137043,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":137044,"byte_end":137089,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":137090,"byte_end":137093,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":137094,"byte_end":137172,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":137173,"byte_end":137230,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":137231,"byte_end":137234,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":137235,"byte_end":137247,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":137248,"byte_end":137251,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":137252,"byte_end":137325,"line_start":31,"line_end":31,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1677},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":137839,"byte_end":137843,"line_start":48,"line_end":48,"column_start":8,"column_end":12},"name":"poll","qualname":"<SelectOk<Fut> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1681},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":139203,"byte_end":139212,"line_start":82,"line_end":82,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<SelectOk<Fut> as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = Fut>","parent":{"krate":2,"index":8401},"children":[],"decl_id":{"krate":2,"index":8403},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11349},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":140070,"byte_end":140074,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":11346},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":140037,"byte_end":140065,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":11351},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":140088,"byte_end":140089,"line_start":30,"line_end":30,"column_start":23,"column_end":24},"name":"0","qualname":"::future::either::Either::Left::0","value":"A","parent":{"krate":0,"index":11349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11352},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":140130,"byte_end":140135,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":11346},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":140096,"byte_end":140125,"line_start":31,"line_end":31,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":11354},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":140149,"byte_end":140150,"line_start":32,"line_end":32,"column_start":24,"column_end":25},"name":"0","qualname":"::future::either::Either::Right::0","value":"B","parent":{"krate":0,"index":11352},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11346},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":140018,"byte_end":140024,"line_start":28,"line_end":28,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"enum Either<A, B> { Left(A), Right(B), }","parent":null,"children":[{"krate":0,"index":11349},{"krate":0,"index":11352}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":139495,"byte_end":139601,"line_start":8,"line_end":8,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":139602,"byte_end":139605,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is useful when conditionally choosing between two distinct future types:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":139606,"byte_end":139687,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":139688,"byte_end":139691,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":139692,"byte_end":139703,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ use futures::future::Either;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":139704,"byte_end":139736,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":139737,"byte_end":139740,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":139741,"byte_end":139782,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ let cond = true;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":139783,"byte_end":139803,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":139804,"byte_end":139807,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let fut = if cond {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":139808,"byte_end":139831,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/     Either::Left(async move { 12 })","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":139832,"byte_end":139871,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/ } else {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":139872,"byte_end":139884,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/     Either::Right(async move { 44 })","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":139885,"byte_end":139925,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/ };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":139926,"byte_end":139932,"line_start":22,"line_end":22,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":139933,"byte_end":139936,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fut.await, 12);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":139937,"byte_end":139967,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ # })","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":139968,"byte_end":139976,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":139977,"byte_end":139984,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1723},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":140689,"byte_end":140701,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":140541,"byte_end":140599,"line_start":47,"line_end":47,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":140604,"byte_end":140607,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":140612,"byte_end":140677,"line_start":49,"line_end":49,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1728},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":141081,"byte_end":141094,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":140932,"byte_end":140990,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":140995,"byte_end":140998,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":141003,"byte_end":141069,"line_start":61,"line_end":61,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":141382,"byte_end":141392,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":141309,"byte_end":141370,"line_start":71,"line_end":71,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":141645,"byte_end":141649,"line_start":87,"line_end":87,"column_start":8,"column_end":12},"name":"poll","qualname":"<Either<A, B> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1740},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":141970,"byte_end":141983,"line_start":100,"line_end":100,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Either<A, B> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1745},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":142264,"byte_end":142273,"line_start":115,"line_end":115,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Either<A, B> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":142500,"byte_end":142509,"line_start":122,"line_end":122,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Either<A, B> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":142789,"byte_end":142802,"line_start":135,"line_end":135,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Either<A, B> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1791},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":144467,"byte_end":144476,"line_start":196,"line_end":196,"column_start":12,"column_end":21},"name":"poll_read","qualname":"<Either<A, B> as futures_io::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<Result<usize>>","parent":{"krate":25,"index":39},"children":[],"decl_id":{"krate":25,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1792},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":144795,"byte_end":144813,"line_start":207,"line_end":207,"column_start":12,"column_end":30},"name":"poll_read_vectored","qualname":"<Either<A, B> as futures_io::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [IoSliceMut])\n-> Poll<Result<usize>>","parent":{"krate":25,"index":39},"children":[],"decl_id":{"krate":25,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":145276,"byte_end":145286,"line_start":224,"line_end":224,"column_start":12,"column_end":22},"name":"poll_write","qualname":"<Either<A, B> as futures_io::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<Result<usize>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":145603,"byte_end":145622,"line_start":235,"line_end":235,"column_start":12,"column_end":31},"name":"poll_write_vectored","qualname":"<Either<A, B> as futures_io::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [IoSlice]) -> Poll<Result<usize>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1798},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":145969,"byte_end":145979,"line_start":246,"line_end":246,"column_start":12,"column_end":22},"name":"poll_flush","qualname":"<Either<A, B> as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<()>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1799},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":146224,"byte_end":146234,"line_start":253,"line_end":253,"column_start":12,"column_end":22},"name":"poll_close","qualname":"<Either<A, B> as futures_io::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<()>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1803},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":146587,"byte_end":146596,"line_start":266,"line_end":266,"column_start":12,"column_end":21},"name":"poll_seek","qualname":"<Either<A, B> as futures_io::AsyncSeek>::poll_seek","value":"fn poll_seek<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, SeekFrom)\n-> Poll<Result<u64>>","parent":{"krate":25,"index":47},"children":[],"decl_id":{"krate":25,"index":48},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1807},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":147029,"byte_end":147042,"line_start":283,"line_end":283,"column_start":12,"column_end":25},"name":"poll_fill_buf","qualname":"<Either<A, B> as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<&'_ [u8]>>","parent":{"krate":25,"index":49},"children":[],"decl_id":{"krate":25,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1808},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":147296,"byte_end":147303,"line_start":290,"line_end":290,"column_start":12,"column_end":19},"name":"consume","qualname":"<Either<A, B> as futures_io::AsyncBufRead>::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":25,"index":49},"children":[],"decl_id":{"krate":25,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1829},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/abortable.rs","byte_start":147996,"byte_end":148005,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"fn abortable<Fut>(Fut) -> (Abortable<Fut>, AbortHandle) where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/abortable.rs","byte_start":147626,"byte_end":147713,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/abortable.rs","byte_start":147714,"byte_end":147717,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/abortable.rs","byte_start":147718,"byte_end":147794,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/abortable.rs","byte_start":147795,"byte_end":147848,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/abortable.rs","byte_start":147849,"byte_end":147852,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/abortable.rs","byte_start":147853,"byte_end":147930,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/abortable.rs","byte_start":147931,"byte_end":147988,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1863},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1868},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1875},{"krate":0,"index":1878},{"krate":0,"index":1881},{"krate":0,"index":3973},{"krate":0,"index":3974},{"krate":0,"index":3977},{"krate":0,"index":3980},{"krate":0,"index":3983},{"krate":0,"index":3986},{"krate":0,"index":3989},{"krate":0,"index":3992},{"krate":0,"index":3995},{"krate":0,"index":3998},{"krate":0,"index":4001},{"krate":0,"index":4004},{"krate":0,"index":4007},{"krate":0,"index":4010},{"krate":0,"index":4013},{"krate":0,"index":4016},{"krate":0,"index":4019},{"krate":0,"index":4022},{"krate":0,"index":4025},{"krate":0,"index":4028},{"krate":0,"index":4031},{"krate":0,"index":4034},{"krate":0,"index":4037},{"krate":0,"index":4040},{"krate":0,"index":4043},{"krate":0,"index":4046},{"krate":0,"index":4049},{"krate":0,"index":4052},{"krate":0,"index":4055},{"krate":0,"index":4058},{"krate":0,"index":4061},{"krate":0,"index":4064},{"krate":0,"index":4067},{"krate":0,"index":4070},{"krate":0,"index":4073},{"krate":0,"index":4076},{"krate":0,"index":4079},{"krate":0,"index":4080},{"krate":0,"index":4083},{"krate":0,"index":4086},{"krate":0,"index":4089},{"krate":0,"index":5240},{"krate":0,"index":5241},{"krate":0,"index":5244},{"krate":0,"index":5247},{"krate":0,"index":5250},{"krate":0,"index":5253},{"krate":0,"index":5256},{"krate":0,"index":5259},{"krate":0,"index":5262},{"krate":0,"index":5265},{"krate":0,"index":5268},{"krate":0,"index":5271},{"krate":0,"index":5274},{"krate":0,"index":5277},{"krate":0,"index":5280},{"krate":0,"index":5283},{"krate":0,"index":5286},{"krate":0,"index":5289},{"krate":0,"index":5292},{"krate":0,"index":5295},{"krate":0,"index":5298},{"krate":0,"index":5301},{"krate":0,"index":5304},{"krate":0,"index":5307},{"krate":0,"index":5308},{"krate":0,"index":5311},{"krate":0,"index":5314},{"krate":0,"index":5317},{"krate":0,"index":5318},{"krate":0,"index":5321},{"krate":0,"index":5322},{"krate":0,"index":5324},{"krate":0,"index":5350},{"krate":0,"index":5351},{"krate":0,"index":5354},{"krate":0,"index":5357},{"krate":0,"index":5390},{"krate":0,"index":5391},{"krate":0,"index":5394},{"krate":0,"index":5397},{"krate":0,"index":5434},{"krate":0,"index":5435},{"krate":0,"index":5438},{"krate":0,"index":5441},{"krate":0,"index":5480},{"krate":0,"index":5481},{"krate":0,"index":5484},{"krate":0,"index":5487},{"krate":0,"index":5530},{"krate":0,"index":5531},{"krate":0,"index":5534},{"krate":0,"index":5537},{"krate":0,"index":5576},{"krate":0,"index":5577},{"krate":0,"index":5580},{"krate":0,"index":5583},{"krate":0,"index":5619},{"krate":0,"index":5620},{"krate":0,"index":5623},{"krate":0,"index":5626},{"krate":0,"index":5654},{"krate":0,"index":5655},{"krate":0,"index":5658},{"krate":0,"index":5661},{"krate":0,"index":5715},{"krate":0,"index":5716},{"krate":0,"index":5719},{"krate":0,"index":5722},{"krate":0,"index":5809},{"krate":0,"index":5810},{"krate":0,"index":5813},{"krate":0,"index":5816},{"krate":0,"index":5819},{"krate":0,"index":5878},{"krate":0,"index":5879},{"krate":0,"index":5882},{"krate":0,"index":5885},{"krate":0,"index":5994},{"krate":0,"index":5997},{"krate":0,"index":6403},{"krate":0,"index":6406},{"krate":0,"index":6528},{"krate":0,"index":6529},{"krate":0,"index":6532},{"krate":0,"index":6535},{"krate":0,"index":6551},{"krate":0,"index":6552},{"krate":0,"index":6555},{"krate":0,"index":6558},{"krate":0,"index":6561},{"krate":0,"index":6562},{"krate":0,"index":6564},{"krate":0,"index":6567}],"decl_id":null,"docs":" Asynchronous streams.","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":148257,"byte_end":148282,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":148283,"byte_end":148286,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":148287,"byte_end":148312,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":148313,"byte_end":148316,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Stream`] trait, for objects that can asynchronously produce a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":148317,"byte_end":148390,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   sequence of values.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":148391,"byte_end":148416,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/ - The [`StreamExt`] and [`TryStreamExt`] trait, which provides adapters for","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":148417,"byte_end":148496,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/   chaining and composing streams.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":148497,"byte_end":148534,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/ - Top-level stream constructors like [`iter`](iter()) which creates a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":148535,"byte_end":148608,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/   stream from an iterator.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":148609,"byte_end":148639,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":11363},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":210326,"byte_end":210331,"line_start":11,"line_end":11,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":11366},{"krate":0,"index":11367}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1964},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":210842,"byte_end":210855,"line_start":35,"line_end":35,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Chain<St1, St2> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1969},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":211079,"byte_end":211088,"line_start":47,"line_end":47,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Chain<St1, St2> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1970},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":211478,"byte_end":211487,"line_start":58,"line_end":58,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Chain<St1, St2> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11412},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":212456,"byte_end":212463,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":11415},{"krate":0,"index":11416}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2016},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":212904,"byte_end":212917,"line_start":35,"line_end":35,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Collect<St, C> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2021},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":213106,"byte_end":213110,"line_start":47,"line_end":47,"column_start":8,"column_end":12},"name":"poll","qualname":"<Collect<St, C> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<C>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11461},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":213874,"byte_end":213879,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Unzip","qualname":"::stream::stream::unzip::Unzip","value":"Unzip {  }","parent":null,"children":[{"krate":0,"index":11465},{"krate":0,"index":11466},{"krate":0,"index":11467}],"decl_id":null,"docs":" Future for the [`unzip`](super::StreamExt::unzip) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":214528,"byte_end":214541,"line_start":38,"line_end":38,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Unzip<St, FromA, FromB> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2079},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":214813,"byte_end":214817,"line_start":51,"line_end":51,"column_start":8,"column_end":12},"name":"poll","qualname":"<Unzip<St, FromA, FromB> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<(FromA, FromB)>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11523},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":215667,"byte_end":215673,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":11525},{"krate":0,"index":11526}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":216152,"byte_end":216156,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"poll","qualname":"<Concat<St> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":216842,"byte_end":216855,"line_start":59,"line_end":59,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Concat<St> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11563},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":217345,"byte_end":217350,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Count","qualname":"::stream::stream::count::Count","value":"Count {  }","parent":null,"children":[{"krate":0,"index":11565},{"krate":0,"index":11566}],"decl_id":null,"docs":" Future for the [`count`](super::StreamExt::count) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2163},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":217491,"byte_end":217494,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Count<St> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2169},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":217828,"byte_end":217841,"line_start":35,"line_end":35,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Count<St> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2173},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":217977,"byte_end":217981,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"poll","qualname":"<Count<St> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11600},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":218660,"byte_end":218665,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":11602},{"krate":0,"index":11603}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2210},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":218980,"byte_end":218989,"line_start":34,"line_end":34,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Cycle<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2211},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":219356,"byte_end":219365,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Cycle<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2214},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":219707,"byte_end":219720,"line_start":60,"line_end":60,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Cycle<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11640},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":220312,"byte_end":220321,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":11642},{"krate":0,"index":11643}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2247},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":220629,"byte_end":220642,"line_start":29,"line_end":29,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Enumerate<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2251},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":220792,"byte_end":220801,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Enumerate<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2252},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":221201,"byte_end":221210,"line_start":50,"line_end":50,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Enumerate<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11684},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":221953,"byte_end":221959,"line_start":15,"line_end":15,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":11688},{"krate":0,"index":11689},{"krate":0,"index":11690},{"krate":0,"index":11691}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2293},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":222293,"byte_end":222296,"line_start":33,"line_end":33,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Filter<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2304},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":223119,"byte_end":223132,"line_start":62,"line_end":62,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Filter<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2311},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":223494,"byte_end":223503,"line_start":76,"line_end":76,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Filter<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<St::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2312},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":224233,"byte_end":224242,"line_start":95,"line_end":95,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Filter<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11749},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":225346,"byte_end":225355,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":11753},{"krate":0,"index":11754},{"krate":0,"index":11755}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2353},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":225583,"byte_end":225586,"line_start":29,"line_end":29,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FilterMap<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2364},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":226230,"byte_end":226243,"line_start":56,"line_end":56,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<FilterMap<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2371},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":226512,"byte_end":226521,"line_start":69,"line_end":69,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FilterMap<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<T>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2372},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":227309,"byte_end":227318,"line_start":89,"line_end":89,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<FilterMap<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11810},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":228354,"byte_end":228361,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":11813},{"krate":0,"index":11814}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2406},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":228723,"byte_end":228736,"line_start":34,"line_end":34,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Flatten<St, St::Item> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2410},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":228962,"byte_end":228971,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Flatten<St, St::Item> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11865},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154163,"byte_end":154170,"line_start":67,"line_end":67,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":11867}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11918},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":230178,"byte_end":230182,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":11923},{"krate":0,"index":11924},{"krate":0,"index":11925},{"krate":0,"index":11926}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2446},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":230458,"byte_end":230461,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Fold<St, Fut, T, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2458},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":231102,"byte_end":231115,"line_start":54,"line_end":54,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Fold<St, Fut, T, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2465},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":231363,"byte_end":231367,"line_start":67,"line_end":67,"column_start":8,"column_end":12},"name":"poll","qualname":"<Fold<St, Fut, T, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<T>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11987},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":232639,"byte_end":232642,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Any","qualname":"::stream::stream::any::Any","value":"Any {  }","parent":null,"children":[{"krate":0,"index":11991},{"krate":0,"index":11992},{"krate":0,"index":11993},{"krate":0,"index":11994}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2503},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":232892,"byte_end":232895,"line_start":27,"line_end":27,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Any<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2513},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":233519,"byte_end":233532,"line_start":53,"line_end":53,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Any<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2519},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":233776,"byte_end":233780,"line_start":66,"line_end":66,"column_start":8,"column_end":12},"name":"poll","qualname":"<Any<St, Fut, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<bool>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12048},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":235215,"byte_end":235218,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"All","qualname":"::stream::stream::all::All","value":"All {  }","parent":null,"children":[{"krate":0,"index":12052},{"krate":0,"index":12053},{"krate":0,"index":12054},{"krate":0,"index":12055}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2557},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":235468,"byte_end":235471,"line_start":27,"line_end":27,"column_start":8,"column_end":11},"name":"fmt","qualname":"<All<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2567},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":236094,"byte_end":236107,"line_start":53,"line_end":53,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<All<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2573},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":236351,"byte_end":236355,"line_start":66,"line_end":66,"column_start":8,"column_end":12},"name":"poll","qualname":"<All<St, Fut, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<bool>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12109},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":237817,"byte_end":237824,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":12113},{"krate":0,"index":12114},{"krate":0,"index":12115}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2615},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":238049,"byte_end":238052,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ForEach<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2625},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":238628,"byte_end":238641,"line_start":51,"line_end":51,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<ForEach<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2631},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":238892,"byte_end":238896,"line_start":64,"line_end":64,"column_start":8,"column_end":12},"name":"poll","qualname":"<ForEach<St, Fut, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<()>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12166},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":239781,"byte_end":239785,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":12168},{"krate":0,"index":12169}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2662},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":240237,"byte_end":240244,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"fn is_done<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":239968,"byte_end":240030,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":240035,"byte_end":240038,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":240043,"byte_end":240111,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":240116,"byte_end":240182,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":240187,"byte_end":240225,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2665},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":240383,"byte_end":240396,"line_start":38,"line_end":38,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Fuse<S> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2669},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":240511,"byte_end":240520,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Fuse<S> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<S::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2670},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":240864,"byte_end":240873,"line_start":60,"line_end":60,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Fuse<S> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12210},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":241603,"byte_end":241615,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":12212}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":241433,"byte_end":241506,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":241524,"byte_end":241591,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2704},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":242178,"byte_end":242185,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> Option<&'_ St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":241786,"byte_end":241859,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":241864,"byte_end":241881,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":241886,"byte_end":241889,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":241894,"byte_end":241975,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":241980,"byte_end":242062,"line_start":24,"line_end":24,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":242067,"byte_end":242146,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":242151,"byte_end":242166,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2705},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":242796,"byte_end":242803,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> Option<&'_ mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":242250,"byte_end":242317,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":242322,"byte_end":242353,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":242358,"byte_end":242361,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":242366,"byte_end":242439,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":242444,"byte_end":242499,"line_start":35,"line_end":35,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":242504,"byte_end":242507,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":242512,"byte_end":242593,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":242598,"byte_end":242680,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":242685,"byte_end":242764,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":242769,"byte_end":242784,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":243429,"byte_end":243440,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"fn get_pin_mut<'_>(Pin<&'_ mut Self>) -> Option<Pin<&'_ mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":242876,"byte_end":242950,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":242955,"byte_end":242986,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":242991,"byte_end":242994,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":242999,"byte_end":243072,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":243077,"byte_end":243132,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":243137,"byte_end":243140,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":243145,"byte_end":243226,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":243231,"byte_end":243313,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":243318,"byte_end":243397,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":243402,"byte_end":243417,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2707},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":244073,"byte_end":244083,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":243553,"byte_end":243615,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":243620,"byte_end":243623,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":243628,"byte_end":243700,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":243705,"byte_end":243776,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":243781,"byte_end":243784,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":243789,"byte_end":243870,"line_start":64,"line_end":64,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":243875,"byte_end":243957,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":243962,"byte_end":244041,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":244046,"byte_end":244061,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2710},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":244202,"byte_end":244215,"line_start":74,"line_end":74,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<StreamFuture<St> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2714},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":244377,"byte_end":244381,"line_start":82,"line_end":82,"column_start":8,"column_end":12},"name":"poll","qualname":"<StreamFuture<St> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12219},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155510,"byte_end":155517,"line_start":112,"line_end":112,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":12222}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12285},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":245107,"byte_end":245110,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":12288},{"krate":0,"index":12289}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2751},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":245251,"byte_end":245254,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Map<St, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2759},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":245641,"byte_end":245654,"line_start":44,"line_end":44,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Map<St, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2764},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":245835,"byte_end":245844,"line_start":56,"line_end":56,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Map<St, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2766},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":246087,"byte_end":246096,"line_start":62,"line_end":62,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Map<St, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12338},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155878,"byte_end":155885,"line_start":123,"line_end":123,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":12342}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12417},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":246770,"byte_end":246774,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":12420}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":246614,"byte_end":246673,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":246691,"byte_end":246758,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2806},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":247087,"byte_end":247100,"line_start":23,"line_end":23,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Next as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2810},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":247267,"byte_end":247271,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"poll","qualname":"<Next as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12425},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":247782,"byte_end":247796,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":12428}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":247598,"byte_end":247673,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":247674,"byte_end":247685,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":247703,"byte_end":247770,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2847},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":248060,"byte_end":248073,"line_start":23,"line_end":23,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<SelectNextSome as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2851},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":248247,"byte_end":248251,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"poll","qualname":"<SelectNextSome as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12433},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":249387,"byte_end":249395,"line_start":22,"line_end":22,"column_start":16,"column_end":24},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":12435},{"krate":0,"index":12436}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2905},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":249828,"byte_end":249832,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"fn peek<'_>(Pin<&'_ mut Self>) -> Peek","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a reference to the next item","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":249680,"byte_end":249746,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":249751,"byte_end":249816,"line_start":37,"line_end":37,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2906},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":250157,"byte_end":250166,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"fn poll_peek<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<&'_ St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":249919,"byte_end":249981,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":249986,"byte_end":249989,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":249994,"byte_end":250067,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":250072,"byte_end":250145,"line_start":45,"line_end":45,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2907},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":251481,"byte_end":251489,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<Peekable<St>>::peek_mut","value":"fn peek_mut<'_>(Pin<&'_ mut Self>) -> PeekMut","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a mutable reference to the next item\n in the stream, or `None` if the underlying stream terminates.","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a mutable reference to the next item","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":250602,"byte_end":250676,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":250681,"byte_end":250746,"line_start":61,"line_end":61,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":250751,"byte_end":250754,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":250759,"byte_end":250773,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":250778,"byte_end":250781,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":250786,"byte_end":250793,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":250798,"byte_end":250839,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":250844,"byte_end":250887,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":250892,"byte_end":250917,"line_start":68,"line_end":68,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":250922,"byte_end":250925,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![1, 2, 3]).peekable();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":250930,"byte_end":250986,"line_start":70,"line_end":70,"column_start":5,"column_end":61}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":250991,"byte_end":251012,"line_start":71,"line_end":71,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":251017,"byte_end":251020,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.as_mut().peek_mut().await, Some(&mut 1));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":251025,"byte_end":251088,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(stream.as_mut().next().await, Some(1));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":251093,"byte_end":251147,"line_start":74,"line_end":74,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":251152,"byte_end":251155,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ // Peek into the stream and modify the value which will be returned next","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":251160,"byte_end":251236,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ if let Some(p) = stream.as_mut().peek_mut().await {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":251241,"byte_end":251296,"line_start":77,"line_end":77,"column_start":5,"column_end":60}},{"value":"/     if *p == 2 {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":251301,"byte_end":251321,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/         *p = 5;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":251326,"byte_end":251345,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":251350,"byte_end":251359,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":251364,"byte_end":251369,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":251374,"byte_end":251377,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.collect::<Vec<_>>().await, vec![5, 3]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":251382,"byte_end":251443,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":251448,"byte_end":251457,"line_start":84,"line_end":84,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":251462,"byte_end":251469,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2908},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":251664,"byte_end":251677,"line_start":91,"line_end":91,"column_start":12,"column_end":25},"name":"poll_peek_mut","qualname":"<Peekable<St>>::poll_peek_mut","value":"fn poll_peek_mut<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<&'_ mut St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a mutable reference to the next item in the stream.\n","sig":null,"attributes":[{"value":"/ Peek retrieves a mutable reference to the next item in the stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":251582,"byte_end":251652,"line_start":90,"line_end":90,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2909},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":253668,"byte_end":253675,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"next_if","qualname":"<Peekable<St>>::next_if","value":"fn next_if<F, '_>(Pin<&'_ mut Self>, F) -> NextIf where\nF: for<'_> FnOnce(&'_ St::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next value of this\n stream if a condition is true.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next value of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":252140,"byte_end":252213,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ stream if a condition is true.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":252218,"byte_end":252252,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":252257,"byte_end":252260,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If `func` returns `true` for the next value of this stream, consume and","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":252265,"byte_end":252340,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/ return it. Otherwise, return `None`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":252345,"byte_end":252385,"line_start":112,"line_end":112,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":252390,"byte_end":252393,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":252398,"byte_end":252412,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":252417,"byte_end":252420,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":252425,"byte_end":252465,"line_start":116,"line_end":116,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":252470,"byte_end":252473,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":252478,"byte_end":252485,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":252490,"byte_end":252531,"line_start":119,"line_end":119,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":252536,"byte_end":252579,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":252584,"byte_end":252609,"line_start":121,"line_end":121,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":252614,"byte_end":252617,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":252622,"byte_end":252669,"line_start":123,"line_end":123,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":252674,"byte_end":252695,"line_start":124,"line_end":124,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":252700,"byte_end":252753,"line_start":125,"line_end":125,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, Some(0));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":252758,"byte_end":252826,"line_start":126,"line_end":126,"column_start":5,"column_end":73}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":252831,"byte_end":252904,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, None);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":252909,"byte_end":252974,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/ // `next_if` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":252979,"byte_end":253063,"line_start":129,"line_end":129,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":253068,"byte_end":253113,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":253118,"byte_end":253127,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":253132,"byte_end":253139,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":253144,"byte_end":253147,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Consume any number less than 10.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":253152,"byte_end":253188,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":253193,"byte_end":253196,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":253201,"byte_end":253208,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":253213,"byte_end":253254,"line_start":137,"line_end":137,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":253259,"byte_end":253302,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":253307,"byte_end":253332,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":253337,"byte_end":253340,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..20).peekable();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":253345,"byte_end":253393,"line_start":141,"line_end":141,"column_start":5,"column_end":53}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":253398,"byte_end":253419,"line_start":142,"line_end":142,"column_start":5,"column_end":26}},{"value":"/ // Consume all numbers less than 10","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":253424,"byte_end":253463,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ while stream.as_mut().next_if(|&x| x < 10).await.is_some() {}","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":253468,"byte_end":253533,"line_start":144,"line_end":144,"column_start":5,"column_end":70}},{"value":"/ // The next value returned will be 10","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":253538,"byte_end":253579,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stream.next().await, Some(10));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":253584,"byte_end":253630,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":253635,"byte_end":253644,"line_start":147,"line_end":147,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":253649,"byte_end":253656,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2911},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":254699,"byte_end":254709,"line_start":178,"line_end":178,"column_start":12,"column_end":22},"name":"next_if_eq","qualname":"<Peekable<St>>::next_if_eq","value":"fn next_if_eq<'a, T>(Pin<&'a mut Self>, &'a T) -> NextIfEq where T: ?Sized,\nSt::Item: PartialEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next item if it is\n equal to `expected`.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next item if it is","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":253841,"byte_end":253914,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ equal to `expected`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":253919,"byte_end":253943,"line_start":157,"line_end":157,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":253948,"byte_end":253951,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":253956,"byte_end":253969,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":253974,"byte_end":253977,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":253982,"byte_end":254022,"line_start":161,"line_end":161,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":254027,"byte_end":254030,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":254035,"byte_end":254042,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":254047,"byte_end":254088,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":254093,"byte_end":254136,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":254141,"byte_end":254166,"line_start":166,"line_end":166,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":254171,"byte_end":254174,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":254179,"byte_end":254226,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":254231,"byte_end":254252,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":254257,"byte_end":254310,"line_start":170,"line_end":170,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, Some(0));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":254315,"byte_end":254377,"line_start":171,"line_end":171,"column_start":5,"column_end":67}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":254382,"byte_end":254455,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, None);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":254460,"byte_end":254519,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/ // `next_if_eq` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":254524,"byte_end":254611,"line_start":174,"line_end":174,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":254616,"byte_end":254661,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":254666,"byte_end":254675,"line_start":176,"line_end":176,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":254680,"byte_end":254687,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2916},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":255038,"byte_end":255051,"line_start":190,"line_end":190,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Peekable<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2920},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":255213,"byte_end":255222,"line_start":198,"line_end":198,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Peekable<S> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2921},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":255483,"byte_end":255492,"line_start":206,"line_end":206,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Peekable<S> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12477},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":256220,"byte_end":256224,"line_start":232,"line_end":232,"column_start":16,"column_end":20},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":12480}],"decl_id":null,"docs":" Future for the [`Peekable::peek`](self::Peekable::peek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2924},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":256409,"byte_end":256412,"line_start":242,"line_end":242,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Peek as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2927},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":256597,"byte_end":256610,"line_start":248,"line_end":248,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Peek as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2932},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":256775,"byte_end":256779,"line_start":259,"line_end":259,"column_start":8,"column_end":12},"name":"poll","qualname":"<Peek as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12518},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":257282,"byte_end":257289,"line_start":274,"line_end":274,"column_start":16,"column_end":23},"name":"PeekMut","qualname":"::stream::stream::peek::PeekMut","value":"PeekMut {  }","parent":null,"children":[{"krate":0,"index":12521}],"decl_id":null,"docs":" Future for the [`Peekable::peek_mut`](self::Peekable::peek_mut) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2935},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":257477,"byte_end":257480,"line_start":284,"line_end":284,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PeekMut as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2938},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":257671,"byte_end":257684,"line_start":290,"line_end":290,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<PeekMut as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2943},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":257856,"byte_end":257860,"line_start":301,"line_end":301,"column_start":8,"column_end":12},"name":"poll","qualname":"<PeekMut as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12559},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":258372,"byte_end":258378,"line_start":316,"line_end":316,"column_start":16,"column_end":22},"name":"NextIf","qualname":"::stream::stream::peek::NextIf","value":"NextIf {  }","parent":null,"children":[{"krate":0,"index":12563}],"decl_id":null,"docs":" Future for the [`Peekable::next_if`](self::Peekable::next_if) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2947},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":258579,"byte_end":258582,"line_start":326,"line_end":326,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NextIf as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2953},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":258951,"byte_end":258964,"line_start":337,"line_end":337,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<NextIf as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2959},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":259263,"byte_end":259267,"line_start":350,"line_end":350,"column_start":8,"column_end":12},"name":"poll","qualname":"<NextIf as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12608},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":260242,"byte_end":260250,"line_start":375,"line_end":375,"column_start":16,"column_end":24},"name":"NextIfEq","qualname":"::stream::stream::peek::NextIfEq","value":"NextIfEq {  }","parent":null,"children":[{"krate":0,"index":12612}],"decl_id":null,"docs":" Future for the [`Peekable::next_if_eq`](self::Peekable::next_if_eq) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2963},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":260496,"byte_end":260499,"line_start":387,"line_end":387,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NextIfEq as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2968},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":260813,"byte_end":260826,"line_start":400,"line_end":400,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<NextIfEq as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2973},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":261042,"byte_end":261046,"line_start":413,"line_end":413,"column_start":8,"column_end":12},"name":"poll","qualname":"<NextIfEq as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12657},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":261867,"byte_end":261871,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":12659},{"krate":0,"index":12660}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3030},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":262178,"byte_end":262191,"line_start":29,"line_end":29,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Skip<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3034},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":262327,"byte_end":262336,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Skip<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<St::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3035},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":262729,"byte_end":262738,"line_start":51,"line_end":51,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Skip<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12701},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":263634,"byte_end":263643,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":12705},{"krate":0,"index":12706},{"krate":0,"index":12707},{"krate":0,"index":12708},{"krate":0,"index":12709}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3074},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":263996,"byte_end":263999,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SkipWhile<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3084},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":264801,"byte_end":264814,"line_start":60,"line_end":60,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<SkipWhile<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3090},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":265080,"byte_end":265089,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<SkipWhile<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<St::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3091},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":265950,"byte_end":265959,"line_start":98,"line_end":98,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<SkipWhile<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12770},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":267140,"byte_end":267144,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":12772},{"krate":0,"index":12773}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3128},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":267482,"byte_end":267491,"line_start":35,"line_end":35,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Take<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<St::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3129},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":267937,"byte_end":267946,"line_start":50,"line_end":50,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Take<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3132},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":268409,"byte_end":268422,"line_start":72,"line_end":72,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Take<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12814},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":269153,"byte_end":269162,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":12818},{"krate":0,"index":12819},{"krate":0,"index":12820},{"krate":0,"index":12821},{"krate":0,"index":12822}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3170},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":269504,"byte_end":269507,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TakeWhile<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3181},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":270320,"byte_end":270329,"line_start":62,"line_end":62,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TakeWhile<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<St::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3182},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":271227,"byte_end":271236,"line_start":89,"line_end":89,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TakeWhile<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3187},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":271819,"byte_end":271832,"line_start":110,"line_end":110,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TakeWhile<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12883},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":272635,"byte_end":272644,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":12886},{"krate":0,"index":12887},{"krate":0,"index":12888},{"krate":0,"index":12889}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3224},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":273209,"byte_end":273212,"line_start":36,"line_end":36,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TakeUntil<St, Fut> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3229},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":273928,"byte_end":273939,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"fn take_future<'_>(&'_ mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":273628,"byte_end":273682,"line_start":52,"line_end":52,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":273687,"byte_end":273781,"line_start":53,"line_end":53,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":273786,"byte_end":273849,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":273854,"byte_end":273916,"line_start":55,"line_end":55,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3230},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":275223,"byte_end":275234,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"fn take_result<'_>(&'_ mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274076,"byte_end":274141,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274146,"byte_end":274203,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274208,"byte_end":274211,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274216,"byte_end":274281,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274286,"byte_end":274346,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274351,"byte_end":274354,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resolved yet,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274359,"byte_end":274427,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274432,"byte_end":274475,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274480,"byte_end":274483,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274488,"byte_end":274502,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274507,"byte_end":274510,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274515,"byte_end":274522,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274527,"byte_end":274568,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274573,"byte_end":274597,"line_start":77,"line_end":77,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274602,"byte_end":274645,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274650,"byte_end":274678,"line_start":79,"line_end":79,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274683,"byte_end":274686,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274691,"byte_end":274729,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274734,"byte_end":274737,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274742,"byte_end":274760,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274765,"byte_end":274807,"line_start":84,"line_end":84,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274812,"byte_end":274827,"line_start":85,"line_end":85,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274832,"byte_end":274851,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274856,"byte_end":274881,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274886,"byte_end":274902,"line_start":88,"line_end":88,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274907,"byte_end":274940,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274945,"byte_end":274954,"line_start":90,"line_end":90,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274959,"byte_end":274966,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274971,"byte_end":274974,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":274979,"byte_end":275028,"line_start":93,"line_end":93,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":275033,"byte_end":275087,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":275092,"byte_end":275095,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":275100,"byte_end":275147,"line_start":96,"line_end":96,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":275152,"byte_end":275185,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":275190,"byte_end":275199,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":275204,"byte_end":275211,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3231},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":275410,"byte_end":275420,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"fn is_stopped<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":275313,"byte_end":275374,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":275379,"byte_end":275398,"line_start":105,"line_end":105,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":3236},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":275607,"byte_end":275616,"line_start":118,"line_end":118,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TakeUntil<St, Fut> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<St::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3237},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":276363,"byte_end":276372,"line_start":141,"line_end":141,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TakeUntil<St, Fut> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3241},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":276621,"byte_end":276634,"line_start":155,"line_end":155,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TakeUntil<St, Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12940},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":277352,"byte_end":277356,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":12944},{"krate":0,"index":12945},{"krate":0,"index":12946}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3279},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":277578,"byte_end":277581,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Then<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3289},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":278111,"byte_end":278124,"line_start":51,"line_end":51,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Then<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3295},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":278366,"byte_end":278375,"line_start":64,"line_end":64,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Then<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3296},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":278933,"byte_end":278942,"line_start":80,"line_end":80,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Then<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13001},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":279889,"byte_end":279892,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":13004},{"krate":0,"index":13005},{"krate":0,"index":13006},{"krate":0,"index":13007}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3335},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":280410,"byte_end":280417,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> (&'_ St1, &'_ St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":280302,"byte_end":280376,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":280381,"byte_end":280398,"line_start":28,"line_end":28,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3336},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":280773,"byte_end":280780,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> (&'_ mut St1, &'_ mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":280511,"byte_end":280579,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":280584,"byte_end":280615,"line_start":34,"line_end":34,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":280620,"byte_end":280623,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":280628,"byte_end":280701,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":280706,"byte_end":280761,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3337},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":281155,"byte_end":281166,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"fn get_pin_mut<'_>(Pin<&'_ mut Self>) -> (Pin<&'_ mut St1>, Pin<&'_ mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":280886,"byte_end":280961,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":280966,"byte_end":280997,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":281002,"byte_end":281005,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":281010,"byte_end":281083,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":281088,"byte_end":281143,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3338},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":281572,"byte_end":281582,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":281336,"byte_end":281399,"line_start":52,"line_end":52,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":281404,"byte_end":281407,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":281412,"byte_end":281484,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":281489,"byte_end":281560,"line_start":55,"line_end":55,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3342},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":281771,"byte_end":281784,"line_start":66,"line_end":66,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Zip<St1, St2> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3347},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":282010,"byte_end":282019,"line_start":78,"line_end":78,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Zip<St1, St2> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":282974,"byte_end":282983,"line_start":104,"line_end":104,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Zip<St1, St2> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13058},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":284397,"byte_end":284403,"line_start":16,"line_end":16,"column_start":16,"column_end":22},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":13060},{"krate":0,"index":13061},{"krate":0,"index":13062}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3392},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":285134,"byte_end":285143,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Chunks<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3393},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":286280,"byte_end":286289,"line_start":76,"line_end":76,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Chunks<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3396},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":286716,"byte_end":286729,"line_start":89,"line_end":89,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Chunks<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13106},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":287476,"byte_end":287487,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"ReadyChunks","qualname":"::stream::stream::ready_chunks::ReadyChunks","value":"ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":13108},{"krate":0,"index":13109},{"krate":0,"index":13110}],"decl_id":null,"docs":" Stream for the [`ready_chunks`](super::StreamExt::ready_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3436},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":288072,"byte_end":288081,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<ReadyChunks<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3437},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":289771,"byte_end":289780,"line_start":84,"line_end":84,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<ReadyChunks<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3440},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":290212,"byte_end":290225,"line_start":97,"line_end":97,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<ReadyChunks<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13154},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":291003,"byte_end":291007,"line_start":19,"line_end":19,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":13159},{"krate":0,"index":13160},{"krate":0,"index":13161}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3484},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":291326,"byte_end":291329,"line_start":35,"line_end":35,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Scan<St, S, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3506},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":292367,"byte_end":292376,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Scan<St, S, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<B>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3507},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":293185,"byte_end":293194,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Scan<St, S, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3514},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":293583,"byte_end":293596,"line_start":114,"line_end":114,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Scan<St, S, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13223},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":294431,"byte_end":294446,"line_start":15,"line_end":15,"column_start":16,"column_end":31},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":13225},{"krate":0,"index":13226},{"krate":0,"index":13227}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3557},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":294700,"byte_end":294703,"line_start":30,"line_end":30,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BufferUnordered<St> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3564},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":295445,"byte_end":295454,"line_start":62,"line_end":62,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<BufferUnordered<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3565},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":296411,"byte_end":296420,"line_start":88,"line_end":88,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<BufferUnordered<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3568},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":296867,"byte_end":296880,"line_start":105,"line_end":105,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<BufferUnordered<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13268},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":297697,"byte_end":297705,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":13270},{"krate":0,"index":13271},{"krate":0,"index":13272}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3610},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":297998,"byte_end":298001,"line_start":32,"line_end":32,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Buffered<St> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3617},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":298675,"byte_end":298684,"line_start":60,"line_end":60,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Buffered<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3618},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":299627,"byte_end":299636,"line_start":86,"line_end":86,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Buffered<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13352},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":310491,"byte_end":310507,"line_start":309,"line_end":309,"column_start":16,"column_end":32},"name":"FlattenUnordered","qualname":"::stream::stream::flatten_unordered::FlattenUnordered","value":"FlattenUnordered {  }","parent":null,"children":[{"krate":0,"index":13354},{"krate":0,"index":13355},{"krate":0,"index":13356},{"krate":0,"index":13357},{"krate":0,"index":13358},{"krate":0,"index":13359},{"krate":0,"index":13360}],"decl_id":null,"docs":" Stream for the [`flatten_unordered`](super::StreamExt::flatten_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3748},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":310969,"byte_end":310972,"line_start":327,"line_end":327,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FlattenUnordered<St> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3758},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":312693,"byte_end":312706,"line_start":383,"line_end":383,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<FlattenUnordered<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3762},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":312949,"byte_end":312958,"line_start":395,"line_end":395,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FlattenUnordered<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13417},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158697,"byte_end":158713,"line_start":213,"line_end":213,"column_start":5,"column_end":21},"name":"FlatMapUnordered","qualname":"::stream::stream::FlatMapUnordered","value":"FlatMapUnordered {  }","parent":null,"children":[{"krate":0,"index":13421}],"decl_id":null,"docs":" Stream for the [`flat_map_unordered`](StreamExt::flat_map_unordered) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13496},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":318060,"byte_end":318077,"line_start":14,"line_end":14,"column_start":16,"column_end":33},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":13500},{"krate":0,"index":13501},{"krate":0,"index":13502},{"krate":0,"index":13503}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3807},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":318353,"byte_end":318356,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ForEachConcurrent<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3817},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":319202,"byte_end":319215,"line_start":60,"line_end":60,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<ForEachConcurrent<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3823},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":319472,"byte_end":319476,"line_start":73,"line_end":73,"column_start":8,"column_end":12},"name":"poll","qualname":"<ForEachConcurrent<St, Fut, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<()>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13557},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/catch_unwind.rs","byte_start":321583,"byte_end":321594,"line_start":12,"line_end":12,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::stream::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":13559},{"krate":0,"index":13560}],"decl_id":null,"docs":" Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3868},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/catch_unwind.rs","byte_start":321988,"byte_end":321997,"line_start":30,"line_end":30,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<CatchUnwind<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3871},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/catch_unwind.rs","byte_start":322545,"byte_end":322554,"line_start":48,"line_end":48,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<CatchUnwind<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3874},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/catch_unwind.rs","byte_start":322795,"byte_end":322808,"line_start":58,"line_end":58,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<CatchUnwind<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3880},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160031,"byte_end":160040,"line_start":249,"line_end":249,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":3881},{"krate":0,"index":3882},{"krate":0,"index":3883},{"krate":0,"index":3886},{"krate":0,"index":3887},{"krate":0,"index":3890},{"krate":0,"index":3894},{"krate":0,"index":3897},{"krate":0,"index":3899},{"krate":0,"index":3904},{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907},{"krate":0,"index":3911},{"krate":0,"index":3914},{"krate":0,"index":3917},{"krate":0,"index":3918},{"krate":0,"index":3920},{"krate":0,"index":3923},{"krate":0,"index":3927},{"krate":0,"index":3932},{"krate":0,"index":3935},{"krate":0,"index":3938},{"krate":0,"index":3940},{"krate":0,"index":3943},{"krate":0,"index":3947},{"krate":0,"index":3948},{"krate":0,"index":3949},{"krate":0,"index":3950},{"krate":0,"index":3951},{"krate":0,"index":3952},{"krate":0,"index":3954},{"krate":0,"index":3956},{"krate":0,"index":3957},{"krate":0,"index":3958},{"krate":0,"index":3960},{"krate":0,"index":3962},{"krate":0,"index":3963},{"krate":0,"index":3964},{"krate":0,"index":3965},{"krate":0,"index":3967},{"krate":0,"index":3969},{"krate":0,"index":3971},{"krate":0,"index":3972}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159920,"byte_end":159994,"line_start":247,"line_end":247,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159995,"byte_end":160020,"line_start":248,"line_end":248,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3881},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160950,"byte_end":160954,"line_start":273,"line_end":273,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"fn next<'_>(&'_ mut Self) -> Next where Self: Unpin","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160055,"byte_end":160121,"line_start":250,"line_end":250,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160126,"byte_end":160129,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160134,"byte_end":160202,"line_start":252,"line_end":252,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160207,"byte_end":160282,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160287,"byte_end":160362,"line_start":254,"line_end":254,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160367,"byte_end":160421,"line_start":255,"line_end":255,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160426,"byte_end":160501,"line_start":256,"line_end":256,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160506,"byte_end":160516,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160521,"byte_end":160524,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160529,"byte_end":160543,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160548,"byte_end":160551,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160556,"byte_end":160563,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160568,"byte_end":160609,"line_start":262,"line_end":262,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160614,"byte_end":160657,"line_start":263,"line_end":263,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160662,"byte_end":160665,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160670,"byte_end":160711,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160716,"byte_end":160719,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160724,"byte_end":160769,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160774,"byte_end":160819,"line_start":268,"line_end":268,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160824,"byte_end":160869,"line_start":269,"line_end":269,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160874,"byte_end":160916,"line_start":270,"line_end":270,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160921,"byte_end":160930,"line_start":271,"line_end":271,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160935,"byte_end":160942,"line_start":272,"line_end":272,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3882},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162193,"byte_end":162204,"line_start":308,"line_end":308,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161096,"byte_end":161168,"line_start":280,"line_end":280,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161173,"byte_end":161234,"line_start":281,"line_end":281,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161239,"byte_end":161242,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161247,"byte_end":161322,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161327,"byte_end":161381,"line_start":284,"line_end":284,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161386,"byte_end":161389,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161394,"byte_end":161467,"line_start":286,"line_end":286,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161472,"byte_end":161534,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161539,"byte_end":161614,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161619,"byte_end":161673,"line_start":289,"line_end":289,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161678,"byte_end":161753,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161758,"byte_end":161768,"line_start":291,"line_end":291,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161773,"byte_end":161776,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161781,"byte_end":161795,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161800,"byte_end":161803,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161808,"byte_end":161815,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161820,"byte_end":161861,"line_start":296,"line_end":296,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161866,"byte_end":161909,"line_start":297,"line_end":297,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161914,"byte_end":161917,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161922,"byte_end":161959,"line_start":299,"line_end":299,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161964,"byte_end":161967,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161972,"byte_end":162024,"line_start":301,"line_end":301,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162029,"byte_end":162059,"line_start":302,"line_end":302,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162064,"byte_end":162067,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162072,"byte_end":162124,"line_start":304,"line_end":304,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162129,"byte_end":162159,"line_start":305,"line_end":305,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162164,"byte_end":162173,"line_start":306,"line_end":306,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162178,"byte_end":162185,"line_start":307,"line_end":307,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3883},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163205,"byte_end":163208,"line_start":338,"line_end":338,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162369,"byte_end":162444,"line_start":315,"line_end":315,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162449,"byte_end":162472,"line_start":316,"line_end":316,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162477,"byte_end":162480,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162485,"byte_end":162557,"line_start":318,"line_end":318,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162562,"byte_end":162626,"line_start":319,"line_end":319,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162631,"byte_end":162668,"line_start":320,"line_end":320,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162673,"byte_end":162676,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162681,"byte_end":162757,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162762,"byte_end":162833,"line_start":323,"line_end":323,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162838,"byte_end":162859,"line_start":324,"line_end":324,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162864,"byte_end":162867,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162872,"byte_end":162886,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162891,"byte_end":162894,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162899,"byte_end":162906,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162911,"byte_end":162952,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162957,"byte_end":163000,"line_start":330,"line_end":330,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163005,"byte_end":163008,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163013,"byte_end":163050,"line_start":332,"line_end":332,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163055,"byte_end":163094,"line_start":333,"line_end":333,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163099,"byte_end":163102,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163107,"byte_end":163171,"line_start":335,"line_end":335,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163176,"byte_end":163185,"line_start":336,"line_end":336,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163190,"byte_end":163197,"line_start":337,"line_end":337,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3886},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164768,"byte_end":164777,"line_start":384,"line_end":384,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163375,"byte_end":163446,"line_start":346,"line_end":346,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163451,"byte_end":163470,"line_start":347,"line_end":347,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163475,"byte_end":163478,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163483,"byte_end":163548,"line_start":349,"line_end":349,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163553,"byte_end":163622,"line_start":350,"line_end":350,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163627,"byte_end":163638,"line_start":351,"line_end":351,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163643,"byte_end":163646,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163651,"byte_end":163726,"line_start":353,"line_end":353,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163731,"byte_end":163813,"line_start":354,"line_end":354,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163818,"byte_end":163836,"line_start":355,"line_end":355,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163841,"byte_end":163844,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163849,"byte_end":163872,"line_start":357,"line_end":357,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163877,"byte_end":163880,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163885,"byte_end":163960,"line_start":359,"line_end":359,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163965,"byte_end":164052,"line_start":360,"line_end":360,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164057,"byte_end":164113,"line_start":361,"line_end":361,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164118,"byte_end":164121,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164126,"byte_end":164138,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164143,"byte_end":164146,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164151,"byte_end":164220,"line_start":365,"line_end":365,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164225,"byte_end":164250,"line_start":366,"line_end":366,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164255,"byte_end":164258,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164263,"byte_end":164277,"line_start":368,"line_end":368,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164282,"byte_end":164285,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164290,"byte_end":164297,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164302,"byte_end":164343,"line_start":371,"line_end":371,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164348,"byte_end":164391,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164396,"byte_end":164399,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164404,"byte_end":164455,"line_start":374,"line_end":374,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164460,"byte_end":164463,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164468,"byte_end":164508,"line_start":376,"line_end":376,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164513,"byte_end":164516,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164521,"byte_end":164573,"line_start":378,"line_end":378,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164578,"byte_end":164630,"line_start":379,"line_end":379,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164635,"byte_end":164687,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164692,"byte_end":164734,"line_start":381,"line_end":381,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164739,"byte_end":164748,"line_start":382,"line_end":382,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164753,"byte_end":164760,"line_start":383,"line_end":383,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3887},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166008,"byte_end":166014,"line_start":417,"line_end":417,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: for<'_> FnMut(&'_ Self::Item) -> Fut, Fut: Future<Output = bool>,\nSelf: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164921,"byte_end":164993,"line_start":391,"line_end":391,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164998,"byte_end":165025,"line_start":392,"line_end":392,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165030,"byte_end":165033,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165038,"byte_end":165113,"line_start":394,"line_end":394,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165118,"byte_end":165189,"line_start":395,"line_end":395,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165194,"byte_end":165266,"line_start":396,"line_end":396,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165271,"byte_end":165345,"line_start":397,"line_end":397,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165350,"byte_end":165408,"line_start":398,"line_end":398,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165413,"byte_end":165416,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165421,"byte_end":165497,"line_start":400,"line_end":400,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165502,"byte_end":165576,"line_start":401,"line_end":401,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165581,"byte_end":165602,"line_start":402,"line_end":402,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165607,"byte_end":165610,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165615,"byte_end":165629,"line_start":404,"line_end":404,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165634,"byte_end":165637,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165642,"byte_end":165649,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165654,"byte_end":165695,"line_start":407,"line_end":407,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165700,"byte_end":165724,"line_start":408,"line_end":408,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165729,"byte_end":165772,"line_start":409,"line_end":409,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165777,"byte_end":165780,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165785,"byte_end":165823,"line_start":411,"line_end":411,"column_start":5,"column_end":43}},{"value":"/ let events = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165828,"byte_end":165890,"line_start":412,"line_end":412,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165895,"byte_end":165898,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], events.collect::<Vec<_>>().await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165903,"byte_end":165974,"line_start":414,"line_end":414,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165979,"byte_end":165988,"line_start":415,"line_end":415,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165993,"byte_end":166000,"line_start":416,"line_end":416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3890},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167341,"byte_end":167351,"line_start":451,"line_end":451,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166242,"byte_end":166317,"line_start":426,"line_end":426,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166322,"byte_end":166398,"line_start":427,"line_end":427,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166403,"byte_end":166406,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166411,"byte_end":166486,"line_start":429,"line_end":429,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166491,"byte_end":166566,"line_start":430,"line_end":430,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166571,"byte_end":166647,"line_start":431,"line_end":431,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166652,"byte_end":166717,"line_start":432,"line_end":432,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166722,"byte_end":166725,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166730,"byte_end":166806,"line_start":434,"line_end":434,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166811,"byte_end":166885,"line_start":435,"line_end":435,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166890,"byte_end":166915,"line_start":436,"line_end":436,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166920,"byte_end":166923,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166928,"byte_end":166942,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166947,"byte_end":166954,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166959,"byte_end":167000,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167005,"byte_end":167048,"line_start":441,"line_end":441,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167053,"byte_end":167056,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167061,"byte_end":167099,"line_start":443,"line_end":443,"column_start":5,"column_end":43}},{"value":"/ let events = stream.filter_map(|x| async move {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167104,"byte_end":167155,"line_start":444,"line_end":444,"column_start":5,"column_end":56}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167160,"byte_end":167211,"line_start":445,"line_end":445,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167216,"byte_end":167223,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167228,"byte_end":167231,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], events.collect::<Vec<_>>().await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167236,"byte_end":167307,"line_start":448,"line_end":448,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167312,"byte_end":167321,"line_start":449,"line_end":449,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167326,"byte_end":167333,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3894},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168380,"byte_end":168384,"line_start":482,"line_end":482,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future, Self: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167583,"byte_end":167656,"line_start":460,"line_end":460,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167661,"byte_end":167689,"line_start":461,"line_end":461,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167694,"byte_end":167697,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167702,"byte_end":167776,"line_start":463,"line_end":463,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167781,"byte_end":167848,"line_start":464,"line_end":464,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167853,"byte_end":167898,"line_start":465,"line_end":465,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167903,"byte_end":167906,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167911,"byte_end":167987,"line_start":467,"line_end":467,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167992,"byte_end":168018,"line_start":468,"line_end":468,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168023,"byte_end":168026,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168031,"byte_end":168045,"line_start":470,"line_end":470,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168050,"byte_end":168053,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168058,"byte_end":168065,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168070,"byte_end":168111,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168116,"byte_end":168159,"line_start":474,"line_end":474,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168164,"byte_end":168167,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168172,"byte_end":168209,"line_start":476,"line_end":476,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168214,"byte_end":168269,"line_start":477,"line_end":477,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168274,"byte_end":168277,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168282,"byte_end":168346,"line_start":479,"line_end":479,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168351,"byte_end":168360,"line_start":480,"line_end":480,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168365,"byte_end":168372,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3897},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169318,"byte_end":169325,"line_start":516,"line_end":516,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"fn collect<C>(Self) -> Collect<Self, C> where C: Default + Extend<Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168593,"byte_end":168647,"line_start":491,"line_end":491,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168652,"byte_end":168707,"line_start":492,"line_end":492,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168712,"byte_end":168715,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168720,"byte_end":168788,"line_start":494,"line_end":494,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168793,"byte_end":168796,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168801,"byte_end":168815,"line_start":496,"line_end":496,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168820,"byte_end":168823,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168828,"byte_end":168835,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168840,"byte_end":168881,"line_start":499,"line_end":499,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168886,"byte_end":168917,"line_start":500,"line_end":500,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168922,"byte_end":168957,"line_start":501,"line_end":501,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168962,"byte_end":168982,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168987,"byte_end":168990,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168995,"byte_end":169032,"line_start":504,"line_end":504,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169037,"byte_end":169040,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169045,"byte_end":169072,"line_start":506,"line_end":506,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169077,"byte_end":169101,"line_start":507,"line_end":507,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169106,"byte_end":169148,"line_start":508,"line_end":508,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169153,"byte_end":169162,"line_start":509,"line_end":509,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169167,"byte_end":169174,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169179,"byte_end":169182,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169187,"byte_end":169235,"line_start":512,"line_end":512,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169240,"byte_end":169284,"line_start":513,"line_end":513,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169289,"byte_end":169298,"line_start":514,"line_end":514,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169303,"byte_end":169310,"line_start":515,"line_end":515,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3899},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170444,"byte_end":170449,"line_start":553,"line_end":553,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"fn unzip<A, B, FromA, FromB>(Self) -> Unzip<Self, FromA, FromB> where\nFromA: Default + Extend<A>, FromB: Default + Extend<B>, Self: Sized +\nStream<Item = (A, B)>","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Converts a stream of pairs into a future, which\n resolves to pair of containers.","sig":null,"attributes":[{"value":"/ Converts a stream of pairs into a future, which","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169483,"byte_end":169534,"line_start":523,"line_end":523,"column_start":5,"column_end":56}},{"value":"/ resolves to pair of containers.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169539,"byte_end":169574,"line_start":524,"line_end":524,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169579,"byte_end":169582,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ `unzip()` produces a future, which resolves to two","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169587,"byte_end":169641,"line_start":526,"line_end":526,"column_start":5,"column_end":59}},{"value":"/ collections: one from the left elements of the pairs,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169646,"byte_end":169703,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ and one from the right elements.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169708,"byte_end":169744,"line_start":528,"line_end":528,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169749,"byte_end":169752,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169757,"byte_end":169825,"line_start":530,"line_end":530,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169830,"byte_end":169833,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169838,"byte_end":169852,"line_start":532,"line_end":532,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169857,"byte_end":169860,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169865,"byte_end":169872,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169877,"byte_end":169918,"line_start":535,"line_end":535,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169923,"byte_end":169954,"line_start":536,"line_end":536,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169959,"byte_end":169994,"line_start":537,"line_end":537,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169999,"byte_end":170019,"line_start":538,"line_end":538,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170024,"byte_end":170027,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170032,"byte_end":170069,"line_start":540,"line_end":540,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170074,"byte_end":170077,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170082,"byte_end":170109,"line_start":542,"line_end":542,"column_start":5,"column_end":32}},{"value":"/     tx.unbounded_send((1, 2)).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170114,"byte_end":170157,"line_start":543,"line_end":543,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((3, 4)).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170162,"byte_end":170205,"line_start":544,"line_end":544,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((5, 6)).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170210,"byte_end":170253,"line_start":545,"line_end":545,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170258,"byte_end":170265,"line_start":546,"line_end":546,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170270,"byte_end":170273,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ let (o1, o2): (Vec<_>, Vec<_>) = rx.unzip().await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170278,"byte_end":170332,"line_start":548,"line_end":548,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(o1, vec![1, 3, 5]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170337,"byte_end":170371,"line_start":549,"line_end":549,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(o2, vec![2, 4, 6]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170376,"byte_end":170410,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170415,"byte_end":170424,"line_start":551,"line_end":551,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170429,"byte_end":170436,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3904},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171745,"byte_end":171751,"line_start":594,"line_end":594,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170710,"byte_end":170772,"line_start":562,"line_end":562,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170777,"byte_end":170841,"line_start":563,"line_end":563,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170846,"byte_end":170849,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170854,"byte_end":170918,"line_start":565,"line_end":565,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170923,"byte_end":170988,"line_start":566,"line_end":566,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170993,"byte_end":171039,"line_start":567,"line_end":567,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171044,"byte_end":171047,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171052,"byte_end":171101,"line_start":569,"line_end":569,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171106,"byte_end":171146,"line_start":570,"line_end":570,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171151,"byte_end":171154,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171159,"byte_end":171173,"line_start":572,"line_end":572,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171178,"byte_end":171181,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171186,"byte_end":171193,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171198,"byte_end":171239,"line_start":575,"line_end":575,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171244,"byte_end":171275,"line_start":576,"line_end":576,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171280,"byte_end":171315,"line_start":577,"line_end":577,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171320,"byte_end":171340,"line_start":578,"line_end":578,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171345,"byte_end":171348,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171353,"byte_end":171390,"line_start":580,"line_end":580,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171395,"byte_end":171398,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171403,"byte_end":171430,"line_start":582,"line_end":582,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171435,"byte_end":171466,"line_start":583,"line_end":583,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171471,"byte_end":171497,"line_start":584,"line_end":584,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171502,"byte_end":171568,"line_start":585,"line_end":585,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171573,"byte_end":171582,"line_start":586,"line_end":586,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171587,"byte_end":171594,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171599,"byte_end":171602,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171607,"byte_end":171642,"line_start":589,"line_end":589,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171647,"byte_end":171650,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171655,"byte_end":171711,"line_start":591,"line_end":591,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171716,"byte_end":171725,"line_start":592,"line_end":592,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171730,"byte_end":171737,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3905},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172771,"byte_end":172776,"line_start":627,"line_end":627,"column_start":8,"column_end":13},"name":"count","qualname":"::stream::stream::StreamExt::count","value":"fn count(Self) -> Count<Self> where Self: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Drives the stream to completion, counting the number of items.","sig":null,"attributes":[{"value":"/ Drives the stream to completion, counting the number of items.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171981,"byte_end":172047,"line_start":602,"line_end":602,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172052,"byte_end":172055,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172060,"byte_end":172083,"line_start":604,"line_end":604,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172088,"byte_end":172091,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so counting elements of a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172096,"byte_end":172172,"line_start":606,"line_end":606,"column_start":5,"column_end":81}},{"value":"/ stream with more than [`usize::MAX`] elements either produces the wrong","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172177,"byte_end":172252,"line_start":607,"line_end":607,"column_start":5,"column_end":80}},{"value":"/ result or panics. If debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172257,"byte_end":172334,"line_start":608,"line_end":608,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172339,"byte_end":172342,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172347,"byte_end":172359,"line_start":610,"line_end":610,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172364,"byte_end":172367,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ This function might panic if the iterator has more than [`usize::MAX`]","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172372,"byte_end":172446,"line_start":612,"line_end":612,"column_start":5,"column_end":79}},{"value":"/ elements.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172451,"byte_end":172464,"line_start":613,"line_end":613,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172469,"byte_end":172472,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172477,"byte_end":172491,"line_start":615,"line_end":615,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172496,"byte_end":172499,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172504,"byte_end":172511,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172516,"byte_end":172557,"line_start":618,"line_end":618,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172562,"byte_end":172605,"line_start":619,"line_end":619,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172610,"byte_end":172613,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172618,"byte_end":172656,"line_start":621,"line_end":621,"column_start":5,"column_end":43}},{"value":"/ let count = stream.count().await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172661,"byte_end":172698,"line_start":622,"line_end":622,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172703,"byte_end":172706,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(count, 10);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172711,"byte_end":172737,"line_start":624,"line_end":624,"column_start":5,"column_end":31}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172742,"byte_end":172751,"line_start":625,"line_end":625,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172756,"byte_end":172763,"line_start":626,"line_end":626,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3906},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173732,"byte_end":173737,"line_start":657,"line_end":657,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172898,"byte_end":172929,"line_start":634,"line_end":634,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172934,"byte_end":172937,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172942,"byte_end":173009,"line_start":636,"line_end":636,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173014,"byte_end":173086,"line_start":637,"line_end":637,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173091,"byte_end":173148,"line_start":638,"line_end":638,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173153,"byte_end":173156,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173161,"byte_end":173175,"line_start":640,"line_end":640,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173180,"byte_end":173183,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173188,"byte_end":173195,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173200,"byte_end":173241,"line_start":643,"line_end":643,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173246,"byte_end":173289,"line_start":644,"line_end":644,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173294,"byte_end":173316,"line_start":645,"line_end":645,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173321,"byte_end":173368,"line_start":646,"line_end":646,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173373,"byte_end":173376,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173381,"byte_end":173422,"line_start":648,"line_end":648,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173427,"byte_end":173468,"line_start":649,"line_end":649,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173473,"byte_end":173514,"line_start":650,"line_end":650,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173519,"byte_end":173560,"line_start":651,"line_end":651,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173565,"byte_end":173606,"line_start":652,"line_end":652,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173611,"byte_end":173652,"line_start":653,"line_end":653,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173657,"byte_end":173698,"line_start":654,"line_end":654,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173703,"byte_end":173712,"line_start":655,"line_end":655,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173717,"byte_end":173724,"line_start":656,"line_end":656,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3907},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174687,"byte_end":174691,"line_start":684,"line_end":684,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173872,"byte_end":173939,"line_start":664,"line_end":664,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173944,"byte_end":173996,"line_start":665,"line_end":665,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174001,"byte_end":174004,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174009,"byte_end":174079,"line_start":667,"line_end":667,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174084,"byte_end":174160,"line_start":668,"line_end":668,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174165,"byte_end":174241,"line_start":669,"line_end":669,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174246,"byte_end":174316,"line_start":670,"line_end":670,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174321,"byte_end":174347,"line_start":671,"line_end":671,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174352,"byte_end":174355,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174360,"byte_end":174374,"line_start":673,"line_end":673,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174379,"byte_end":174382,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174387,"byte_end":174394,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174399,"byte_end":174440,"line_start":676,"line_end":676,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174445,"byte_end":174488,"line_start":677,"line_end":677,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174493,"byte_end":174496,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174501,"byte_end":174544,"line_start":679,"line_end":679,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174549,"byte_end":174618,"line_start":680,"line_end":680,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174623,"byte_end":174653,"line_start":681,"line_end":681,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174658,"byte_end":174667,"line_start":682,"line_end":682,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174672,"byte_end":174679,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3911},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175392,"byte_end":175395,"line_start":706,"line_end":706,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"fn any<Fut, F>(Self, F) -> Any<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174926,"byte_end":175039,"line_start":693,"line_end":693,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175044,"byte_end":175047,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175052,"byte_end":175066,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175071,"byte_end":175074,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175079,"byte_end":175086,"line_start":697,"line_end":697,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175091,"byte_end":175132,"line_start":698,"line_end":698,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175137,"byte_end":175180,"line_start":699,"line_end":699,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175185,"byte_end":175188,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175193,"byte_end":175237,"line_start":701,"line_end":701,"column_start":5,"column_end":49}},{"value":"/ let contain_three = number_stream.any(|i| async move { i == 3 });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175242,"byte_end":175311,"line_start":702,"line_end":702,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(contain_three.await, true);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175316,"byte_end":175358,"line_start":703,"line_end":703,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175363,"byte_end":175372,"line_start":704,"line_end":704,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175377,"byte_end":175384,"line_start":705,"line_end":705,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3914},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176082,"byte_end":176085,"line_start":728,"line_end":728,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"fn all<Fut, F>(Self, F) -> All<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175610,"byte_end":175723,"line_start":715,"line_end":715,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175728,"byte_end":175731,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175736,"byte_end":175750,"line_start":717,"line_end":717,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175755,"byte_end":175758,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175763,"byte_end":175770,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175775,"byte_end":175816,"line_start":720,"line_end":720,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175821,"byte_end":175864,"line_start":721,"line_end":721,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175869,"byte_end":175872,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175877,"byte_end":175921,"line_start":723,"line_end":723,"column_start":5,"column_end":49}},{"value":"/ let less_then_twenty = number_stream.all(|i| async move { i < 20 });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175926,"byte_end":175998,"line_start":724,"line_end":724,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(less_then_twenty.await, true);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176003,"byte_end":176048,"line_start":725,"line_end":725,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176053,"byte_end":176062,"line_start":726,"line_end":726,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176067,"byte_end":176074,"line_start":727,"line_end":727,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3917},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177259,"byte_end":177266,"line_start":768,"line_end":768,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176300,"byte_end":176365,"line_start":737,"line_end":737,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176370,"byte_end":176373,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176378,"byte_end":176392,"line_start":739,"line_end":739,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176397,"byte_end":176400,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176405,"byte_end":176412,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176417,"byte_end":176458,"line_start":742,"line_end":742,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176463,"byte_end":176494,"line_start":743,"line_end":743,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176499,"byte_end":176534,"line_start":744,"line_end":744,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176539,"byte_end":176559,"line_start":745,"line_end":745,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176564,"byte_end":176567,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176572,"byte_end":176611,"line_start":747,"line_end":747,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176616,"byte_end":176655,"line_start":748,"line_end":748,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176660,"byte_end":176699,"line_start":749,"line_end":749,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176704,"byte_end":176707,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176712,"byte_end":176739,"line_start":751,"line_end":751,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176744,"byte_end":176783,"line_start":752,"line_end":752,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176788,"byte_end":176827,"line_start":753,"line_end":753,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176832,"byte_end":176839,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176844,"byte_end":176871,"line_start":755,"line_end":755,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176876,"byte_end":176915,"line_start":756,"line_end":756,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176920,"byte_end":176959,"line_start":757,"line_end":757,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176964,"byte_end":176971,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176976,"byte_end":177003,"line_start":759,"line_end":759,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177008,"byte_end":177049,"line_start":760,"line_end":760,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177054,"byte_end":177095,"line_start":761,"line_end":761,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177100,"byte_end":177107,"line_start":762,"line_end":762,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177112,"byte_end":177115,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177120,"byte_end":177179,"line_start":764,"line_end":764,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177184,"byte_end":177225,"line_start":765,"line_end":765,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177230,"byte_end":177239,"line_start":766,"line_end":766,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177244,"byte_end":177251,"line_start":767,"line_end":767,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3918},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178562,"byte_end":178579,"line_start":812,"line_end":812,"column_start":8,"column_end":25},"name":"flatten_unordered","qualname":"::stream::stream::StreamExt::flatten_unordered","value":"fn flatten_unordered<impl Into<Option<usize>>>(Self, impl Into<Option<usize>>)\n-> FlattenUnordered<Self> where Self::Item: Stream + Unpin, Self: Sized,\nimpl Into<Option<usize>>: Into<Option<usize>>","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream. Polls\n inner streams concurrently.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream. Polls","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177443,"byte_end":177514,"line_start":776,"line_end":776,"column_start":5,"column_end":76}},{"value":"/ inner streams concurrently.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177519,"byte_end":177550,"line_start":777,"line_end":777,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177555,"byte_end":177558,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177563,"byte_end":177577,"line_start":779,"line_end":779,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177582,"byte_end":177585,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177590,"byte_end":177597,"line_start":781,"line_end":781,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177602,"byte_end":177643,"line_start":782,"line_end":782,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177648,"byte_end":177679,"line_start":783,"line_end":783,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177684,"byte_end":177719,"line_start":784,"line_end":784,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177724,"byte_end":177744,"line_start":785,"line_end":785,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177749,"byte_end":177752,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177757,"byte_end":177796,"line_start":787,"line_end":787,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177801,"byte_end":177840,"line_start":788,"line_end":788,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177845,"byte_end":177884,"line_start":789,"line_end":789,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177889,"byte_end":177892,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177897,"byte_end":177924,"line_start":791,"line_end":791,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177929,"byte_end":177968,"line_start":792,"line_end":792,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177973,"byte_end":178012,"line_start":793,"line_end":793,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178017,"byte_end":178024,"line_start":794,"line_end":794,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178029,"byte_end":178056,"line_start":795,"line_end":795,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178061,"byte_end":178100,"line_start":796,"line_end":796,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178105,"byte_end":178144,"line_start":797,"line_end":797,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178149,"byte_end":178156,"line_start":798,"line_end":798,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178161,"byte_end":178188,"line_start":799,"line_end":799,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178193,"byte_end":178234,"line_start":800,"line_end":800,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178239,"byte_end":178280,"line_start":801,"line_end":801,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178285,"byte_end":178292,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178297,"byte_end":178300,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ let mut output = rx3.flatten_unordered(None).collect::<Vec<i32>>().await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178305,"byte_end":178382,"line_start":804,"line_end":804,"column_start":5,"column_end":82}},{"value":"/ output.sort();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178387,"byte_end":178405,"line_start":805,"line_end":805,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178410,"byte_end":178413,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178418,"byte_end":178459,"line_start":807,"line_end":807,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178464,"byte_end":178473,"line_start":808,"line_end":808,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178478,"byte_end":178485,"line_start":809,"line_end":809,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178490,"byte_end":178524,"line_start":810,"line_end":810,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178529,"byte_end":178554,"line_start":811,"line_end":811,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3920},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179865,"byte_end":179873,"line_start":845,"line_end":845,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where F: FnMut(Self::Item)\n-> U, U: Stream, Self: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178779,"byte_end":178851,"line_start":820,"line_end":820,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178856,"byte_end":178859,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178864,"byte_end":178941,"line_start":822,"line_end":822,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178946,"byte_end":179021,"line_start":823,"line_end":823,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179026,"byte_end":179102,"line_start":824,"line_end":824,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179107,"byte_end":179110,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produces inner streams is executed over all elements","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179115,"byte_end":179198,"line_start":826,"line_end":826,"column_start":5,"column_end":88}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179203,"byte_end":179286,"line_start":827,"line_end":827,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179291,"byte_end":179294,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179299,"byte_end":179375,"line_start":829,"line_end":829,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179380,"byte_end":179456,"line_start":830,"line_end":830,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179461,"byte_end":179482,"line_start":831,"line_end":831,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179487,"byte_end":179490,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179495,"byte_end":179509,"line_start":833,"line_end":833,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179514,"byte_end":179517,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179522,"byte_end":179529,"line_start":835,"line_end":835,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179534,"byte_end":179575,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179580,"byte_end":179623,"line_start":837,"line_end":837,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179628,"byte_end":179631,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179636,"byte_end":179673,"line_start":839,"line_end":839,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179678,"byte_end":179745,"line_start":840,"line_end":840,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179750,"byte_end":179753,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179758,"byte_end":179831,"line_start":842,"line_end":842,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179836,"byte_end":179845,"line_start":843,"line_end":843,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179850,"byte_end":179857,"line_start":844,"line_end":844,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3923},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181931,"byte_end":181949,"line_start":894,"line_end":894,"column_start":8,"column_end":26},"name":"flat_map_unordered","qualname":"::stream::stream::StreamExt::flat_map_unordered","value":"fn flat_map_unordered<U, F,\nimpl Into<Option<usize>>>(Self, impl Into<Option<usize>>, F)\n-> FlatMapUnordered<Self, U, F> where U: Stream + Unpin, F: FnMut(Self::Item)\n-> U, Self: Sized, impl Into<Option<usize>>: Into<Option<usize>>","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s\n and polls them concurrently, yielding items in any order, as they made\n available.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180076,"byte_end":180147,"line_start":854,"line_end":854,"column_start":5,"column_end":76}},{"value":"/ and polls them concurrently, yielding items in any order, as they made","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180152,"byte_end":180226,"line_start":855,"line_end":855,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180231,"byte_end":180245,"line_start":856,"line_end":856,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180250,"byte_end":180253,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces `Stream`s","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180258,"byte_end":180325,"line_start":858,"line_end":858,"column_start":5,"column_end":72}},{"value":"/ instead, and you need to poll all of them concurrently, you would","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180330,"byte_end":180399,"line_start":859,"line_end":859,"column_start":5,"column_end":74}},{"value":"/ have to use something like `for_each_concurrent` and merge values","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180404,"byte_end":180473,"line_start":860,"line_end":860,"column_start":5,"column_end":74}},{"value":"/ by hand. This combinator provides ability to collect all values","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180478,"byte_end":180545,"line_start":861,"line_end":861,"column_start":5,"column_end":72}},{"value":"/ from concurrently polled streams into one stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180550,"byte_end":180603,"line_start":862,"line_end":862,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180608,"byte_end":180611,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrently","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180616,"byte_end":180689,"line_start":864,"line_end":864,"column_start":5,"column_end":78}},{"value":"/ polled streams. If this limit is not `None`, no more than `limit` streams","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180694,"byte_end":180771,"line_start":865,"line_end":865,"column_start":5,"column_end":82}},{"value":"/ will be polled concurrently. The `limit` argument is of type","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180776,"byte_end":180840,"line_start":866,"line_end":866,"column_start":5,"column_end":69}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180845,"byte_end":180912,"line_start":867,"line_end":867,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180917,"byte_end":180986,"line_start":868,"line_end":868,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180991,"byte_end":181063,"line_start":869,"line_end":869,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181068,"byte_end":181071,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produces inner streams is executed over","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181076,"byte_end":181146,"line_start":871,"line_end":871,"column_start":5,"column_end":75}},{"value":"/ all elements of stream as next stream item is available and limit","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181151,"byte_end":181220,"line_start":872,"line_end":872,"column_start":5,"column_end":74}},{"value":"/ of concurrently processed streams isn't exceeded.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181225,"byte_end":181278,"line_start":873,"line_end":873,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181283,"byte_end":181286,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181291,"byte_end":181357,"line_start":875,"line_end":875,"column_start":5,"column_end":71}},{"value":"/ returns a wrapped version of it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181362,"byte_end":181398,"line_start":876,"line_end":876,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181403,"byte_end":181406,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181411,"byte_end":181425,"line_start":878,"line_end":878,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181430,"byte_end":181433,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181438,"byte_end":181445,"line_start":880,"line_end":880,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181450,"byte_end":181491,"line_start":881,"line_end":881,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181496,"byte_end":181539,"line_start":882,"line_end":882,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181544,"byte_end":181547,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..5);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181552,"byte_end":181588,"line_start":884,"line_end":884,"column_start":5,"column_end":41}},{"value":"/ let stream = stream.flat_map_unordered(1, |x| stream::iter(vec![x; x]));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181593,"byte_end":181669,"line_start":885,"line_end":885,"column_start":5,"column_end":81}},{"value":"/ let mut values = stream.collect::<Vec<_>>().await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181674,"byte_end":181728,"line_start":886,"line_end":886,"column_start":5,"column_end":59}},{"value":"/ values.sort();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181733,"byte_end":181751,"line_start":887,"line_end":887,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181756,"byte_end":181759,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1usize, 2, 2, 3, 3, 3, 4, 4, 4, 4], values);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181764,"byte_end":181828,"line_start":889,"line_end":889,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181833,"byte_end":181842,"line_start":890,"line_end":890,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181847,"byte_end":181854,"line_start":891,"line_end":891,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181859,"byte_end":181893,"line_start":892,"line_end":892,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181898,"byte_end":181923,"line_start":893,"line_end":893,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3927},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183036,"byte_end":183040,"line_start":931,"line_end":931,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: for<'_> FnMut(&'_ mut S, Self::Item) -> Fut, Fut: Future<Output =\nOption<B>>, Self: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":182227,"byte_end":182298,"line_start":907,"line_end":907,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":182303,"byte_end":182333,"line_start":908,"line_end":908,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":182338,"byte_end":182341,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":182346,"byte_end":182421,"line_start":910,"line_end":910,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":182426,"byte_end":182497,"line_start":911,"line_end":911,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":182502,"byte_end":182542,"line_start":912,"line_end":912,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":182547,"byte_end":182550,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":182555,"byte_end":182569,"line_start":914,"line_end":914,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":182574,"byte_end":182577,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":182582,"byte_end":182589,"line_start":916,"line_end":916,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":182594,"byte_end":182635,"line_start":917,"line_end":917,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":182640,"byte_end":182664,"line_start":918,"line_end":918,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":182669,"byte_end":182712,"line_start":919,"line_end":919,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":182717,"byte_end":182720,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":182725,"byte_end":182763,"line_start":921,"line_end":921,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":182768,"byte_end":182771,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":182776,"byte_end":182820,"line_start":923,"line_end":923,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":182825,"byte_end":182845,"line_start":924,"line_end":924,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":182850,"byte_end":182913,"line_start":925,"line_end":925,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":182918,"byte_end":182925,"line_start":926,"line_end":926,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":182930,"byte_end":182933,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":182938,"byte_end":183002,"line_start":928,"line_end":928,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183007,"byte_end":183016,"line_start":929,"line_end":929,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183021,"byte_end":183028,"line_start":930,"line_end":930,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3932},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184087,"byte_end":184097,"line_start":962,"line_end":962,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: for<'_> FnMut(&'_ Self::Item) -> Fut, Fut: Future<Output = bool>,\nSelf: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183309,"byte_end":183383,"line_start":940,"line_end":940,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183388,"byte_end":183411,"line_start":941,"line_end":941,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183416,"byte_end":183419,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183424,"byte_end":183497,"line_start":943,"line_end":943,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183502,"byte_end":183574,"line_start":944,"line_end":944,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183579,"byte_end":183656,"line_start":945,"line_end":945,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183661,"byte_end":183672,"line_start":946,"line_end":946,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183677,"byte_end":183680,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183685,"byte_end":183699,"line_start":948,"line_end":948,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183704,"byte_end":183707,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183712,"byte_end":183719,"line_start":950,"line_end":950,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183724,"byte_end":183765,"line_start":951,"line_end":951,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183770,"byte_end":183794,"line_start":952,"line_end":952,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183799,"byte_end":183842,"line_start":953,"line_end":953,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183847,"byte_end":183850,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183855,"byte_end":183893,"line_start":955,"line_end":955,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183898,"byte_end":183901,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183906,"byte_end":183969,"line_start":957,"line_end":957,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183974,"byte_end":183977,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183982,"byte_end":184053,"line_start":959,"line_end":959,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184058,"byte_end":184067,"line_start":960,"line_end":960,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184072,"byte_end":184079,"line_start":961,"line_end":961,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3935},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185086,"byte_end":185096,"line_start":992,"line_end":992,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: for<'_> FnMut(&'_ Self::Item) -> Fut, Fut: Future<Output = bool>,\nSelf: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184331,"byte_end":184407,"line_start":971,"line_end":971,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184412,"byte_end":184435,"line_start":972,"line_end":972,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184440,"byte_end":184443,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184448,"byte_end":184523,"line_start":974,"line_end":974,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184528,"byte_end":184600,"line_start":975,"line_end":975,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184605,"byte_end":184672,"line_start":976,"line_end":976,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184677,"byte_end":184680,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184685,"byte_end":184699,"line_start":978,"line_end":978,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184704,"byte_end":184707,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184712,"byte_end":184719,"line_start":980,"line_end":980,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184724,"byte_end":184765,"line_start":981,"line_end":981,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184770,"byte_end":184794,"line_start":982,"line_end":982,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184799,"byte_end":184842,"line_start":983,"line_end":983,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184847,"byte_end":184850,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184855,"byte_end":184893,"line_start":985,"line_end":985,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184898,"byte_end":184901,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184906,"byte_end":184969,"line_start":987,"line_end":987,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184974,"byte_end":184977,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184982,"byte_end":185052,"line_start":989,"line_end":989,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185057,"byte_end":185066,"line_start":990,"line_end":990,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185071,"byte_end":185078,"line_start":991,"line_end":991,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3938},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186612,"byte_end":186622,"line_start":1037,"line_end":1037,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185330,"byte_end":185400,"line_start":1001,"line_end":1001,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185405,"byte_end":185408,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185413,"byte_end":185484,"line_start":1003,"line_end":1003,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185489,"byte_end":185561,"line_start":1004,"line_end":1004,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185566,"byte_end":185636,"line_start":1005,"line_end":1005,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185641,"byte_end":185644,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185649,"byte_end":185720,"line_start":1007,"line_end":1007,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be accessed with `TakeUntil::take_result()`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185725,"byte_end":185811,"line_start":1008,"line_end":1008,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185816,"byte_end":185883,"line_start":1009,"line_end":1009,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185888,"byte_end":185952,"line_start":1010,"line_end":1010,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185957,"byte_end":185960,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185965,"byte_end":185979,"line_start":1012,"line_end":1012,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185984,"byte_end":185987,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185992,"byte_end":185999,"line_start":1014,"line_end":1014,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186004,"byte_end":186045,"line_start":1015,"line_end":1015,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186050,"byte_end":186074,"line_start":1016,"line_end":1016,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186079,"byte_end":186122,"line_start":1017,"line_end":1017,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186127,"byte_end":186155,"line_start":1018,"line_end":1018,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186160,"byte_end":186163,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186168,"byte_end":186206,"line_start":1020,"line_end":1020,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186211,"byte_end":186214,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186219,"byte_end":186237,"line_start":1022,"line_end":1022,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186242,"byte_end":186284,"line_start":1023,"line_end":1023,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186289,"byte_end":186304,"line_start":1024,"line_end":1024,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186309,"byte_end":186328,"line_start":1025,"line_end":1025,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186333,"byte_end":186358,"line_start":1026,"line_end":1026,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186363,"byte_end":186379,"line_start":1027,"line_end":1027,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186384,"byte_end":186411,"line_start":1028,"line_end":1028,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186416,"byte_end":186425,"line_start":1029,"line_end":1029,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186430,"byte_end":186437,"line_start":1030,"line_end":1030,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186442,"byte_end":186445,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186450,"byte_end":186495,"line_start":1032,"line_end":1032,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186500,"byte_end":186503,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186508,"byte_end":186578,"line_start":1034,"line_end":1034,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186583,"byte_end":186592,"line_start":1035,"line_end":1035,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186597,"byte_end":186604,"line_start":1036,"line_end":1036,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3940},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187861,"byte_end":187869,"line_start":1078,"line_end":1078,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186803,"byte_end":186874,"line_start":1045,"line_end":1045,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186879,"byte_end":186922,"line_start":1046,"line_end":1046,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186927,"byte_end":186930,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186935,"byte_end":187010,"line_start":1048,"line_end":1048,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187015,"byte_end":187085,"line_start":1049,"line_end":1049,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187090,"byte_end":187128,"line_start":1050,"line_end":1050,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187133,"byte_end":187136,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187141,"byte_end":187216,"line_start":1052,"line_end":1052,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187221,"byte_end":187264,"line_start":1053,"line_end":1053,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187269,"byte_end":187272,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187277,"byte_end":187350,"line_start":1055,"line_end":1055,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187355,"byte_end":187398,"line_start":1056,"line_end":1056,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187403,"byte_end":187406,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187411,"byte_end":187425,"line_start":1058,"line_end":1058,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187430,"byte_end":187433,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187438,"byte_end":187445,"line_start":1060,"line_end":1060,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187450,"byte_end":187491,"line_start":1061,"line_end":1061,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187496,"byte_end":187520,"line_start":1062,"line_end":1062,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187525,"byte_end":187568,"line_start":1063,"line_end":1063,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187573,"byte_end":187576,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187581,"byte_end":187599,"line_start":1065,"line_end":1065,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187604,"byte_end":187607,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187612,"byte_end":187617,"line_start":1067,"line_end":1067,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187622,"byte_end":187683,"line_start":1068,"line_end":1068,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187688,"byte_end":187710,"line_start":1069,"line_end":1069,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187715,"byte_end":187744,"line_start":1070,"line_end":1070,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187749,"byte_end":187760,"line_start":1071,"line_end":1071,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187765,"byte_end":187783,"line_start":1072,"line_end":1072,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187788,"byte_end":187793,"line_start":1073,"line_end":1073,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187798,"byte_end":187801,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187806,"byte_end":187827,"line_start":1075,"line_end":1075,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187832,"byte_end":187841,"line_start":1076,"line_end":1076,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187846,"byte_end":187853,"line_start":1077,"line_end":1077,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3943},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190031,"byte_end":190050,"line_start":1134,"line_end":1134,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"fn for_each_concurrent<Fut, F,\nimpl Into<Option<usize>>>(Self, impl Into<Option<usize>>, F)\n-> ForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Item) -> Fut,\nFut: Future<Output = ()>, Self: Sized,\nimpl Into<Option<usize>>: Into<Option<usize>>","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188088,"byte_end":188159,"line_start":1087,"line_end":1087,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188164,"byte_end":188238,"line_start":1088,"line_end":1088,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188243,"byte_end":188257,"line_start":1089,"line_end":1089,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188262,"byte_end":188265,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188270,"byte_end":188333,"line_start":1091,"line_end":1091,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188338,"byte_end":188409,"line_start":1092,"line_end":1092,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188414,"byte_end":188466,"line_start":1093,"line_end":1093,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188471,"byte_end":188474,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188479,"byte_end":188554,"line_start":1095,"line_end":1095,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188559,"byte_end":188629,"line_start":1096,"line_end":1096,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188634,"byte_end":188698,"line_start":1097,"line_end":1097,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188703,"byte_end":188706,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188711,"byte_end":188782,"line_start":1099,"line_end":1099,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188787,"byte_end":188857,"line_start":1100,"line_end":1100,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188862,"byte_end":188923,"line_start":1101,"line_end":1101,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188928,"byte_end":188995,"line_start":1102,"line_end":1102,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189000,"byte_end":189069,"line_start":1103,"line_end":1103,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189074,"byte_end":189146,"line_start":1104,"line_end":1104,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189151,"byte_end":189154,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189159,"byte_end":189234,"line_start":1106,"line_end":1106,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189239,"byte_end":189296,"line_start":1107,"line_end":1107,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189301,"byte_end":189304,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189309,"byte_end":189323,"line_start":1109,"line_end":1109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189328,"byte_end":189331,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189336,"byte_end":189343,"line_start":1111,"line_end":1111,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189348,"byte_end":189389,"line_start":1112,"line_end":1112,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189394,"byte_end":189428,"line_start":1113,"line_end":1113,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189433,"byte_end":189476,"line_start":1114,"line_end":1114,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189481,"byte_end":189484,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189489,"byte_end":189529,"line_start":1116,"line_end":1116,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189534,"byte_end":189574,"line_start":1117,"line_end":1117,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189579,"byte_end":189619,"line_start":1118,"line_end":1118,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189624,"byte_end":189627,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189632,"byte_end":189700,"line_start":1120,"line_end":1120,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189705,"byte_end":189727,"line_start":1121,"line_end":1121,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189732,"byte_end":189757,"line_start":1122,"line_end":1122,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189762,"byte_end":189792,"line_start":1123,"line_end":1123,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189797,"byte_end":189806,"line_start":1124,"line_end":1124,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189811,"byte_end":189817,"line_start":1125,"line_end":1125,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189822,"byte_end":189848,"line_start":1126,"line_end":1126,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189853,"byte_end":189879,"line_start":1127,"line_end":1127,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189884,"byte_end":189910,"line_start":1128,"line_end":1128,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189915,"byte_end":189929,"line_start":1129,"line_end":1129,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189934,"byte_end":189942,"line_start":1130,"line_end":1130,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189947,"byte_end":189954,"line_start":1131,"line_end":1131,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189959,"byte_end":189993,"line_start":1132,"line_end":1132,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189998,"byte_end":190023,"line_start":1133,"line_end":1133,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3947},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190875,"byte_end":190879,"line_start":1163,"line_end":1163,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190367,"byte_end":190438,"line_start":1147,"line_end":1147,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190443,"byte_end":190446,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190451,"byte_end":190524,"line_start":1149,"line_end":1149,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190529,"byte_end":190564,"line_start":1150,"line_end":1150,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190569,"byte_end":190572,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190577,"byte_end":190591,"line_start":1152,"line_end":1152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190596,"byte_end":190599,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190604,"byte_end":190611,"line_start":1154,"line_end":1154,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190616,"byte_end":190657,"line_start":1155,"line_end":1155,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190662,"byte_end":190705,"line_start":1156,"line_end":1156,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190710,"byte_end":190713,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190718,"byte_end":190764,"line_start":1158,"line_end":1158,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190769,"byte_end":190772,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190777,"byte_end":190841,"line_start":1160,"line_end":1160,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190846,"byte_end":190855,"line_start":1161,"line_end":1161,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190860,"byte_end":190867,"line_start":1162,"line_end":1162,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3948},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191544,"byte_end":191548,"line_start":1186,"line_end":1186,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191017,"byte_end":191089,"line_start":1170,"line_end":1170,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191094,"byte_end":191097,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191102,"byte_end":191175,"line_start":1172,"line_end":1172,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191180,"byte_end":191226,"line_start":1173,"line_end":1173,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191231,"byte_end":191234,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191239,"byte_end":191253,"line_start":1175,"line_end":1175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191258,"byte_end":191261,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191266,"byte_end":191273,"line_start":1177,"line_end":1177,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191278,"byte_end":191319,"line_start":1178,"line_end":1178,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191324,"byte_end":191367,"line_start":1179,"line_end":1179,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191372,"byte_end":191375,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191380,"byte_end":191426,"line_start":1181,"line_end":1181,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191431,"byte_end":191434,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191439,"byte_end":191510,"line_start":1183,"line_end":1183,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191515,"byte_end":191524,"line_start":1184,"line_end":1184,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191529,"byte_end":191536,"line_start":1185,"line_end":1185,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3949},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193169,"byte_end":193173,"line_start":1232,"line_end":1232,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191686,"byte_end":191757,"line_start":1193,"line_end":1193,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191762,"byte_end":191835,"line_start":1194,"line_end":1194,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191840,"byte_end":191878,"line_start":1195,"line_end":1195,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191883,"byte_end":191886,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191891,"byte_end":191945,"line_start":1197,"line_end":1197,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191950,"byte_end":192022,"line_start":1198,"line_end":1198,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192027,"byte_end":192103,"line_start":1199,"line_end":1199,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192108,"byte_end":192176,"line_start":1200,"line_end":1200,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192181,"byte_end":192257,"line_start":1201,"line_end":1201,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192262,"byte_end":192284,"line_start":1202,"line_end":1202,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192289,"byte_end":192292,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192297,"byte_end":192364,"line_start":1204,"line_end":1204,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192369,"byte_end":192437,"line_start":1205,"line_end":1205,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192442,"byte_end":192455,"line_start":1206,"line_end":1206,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192460,"byte_end":192463,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192468,"byte_end":192482,"line_start":1208,"line_end":1208,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192487,"byte_end":192490,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192495,"byte_end":192502,"line_start":1210,"line_end":1210,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192507,"byte_end":192550,"line_start":1211,"line_end":1211,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192555,"byte_end":192598,"line_start":1212,"line_end":1212,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192603,"byte_end":192631,"line_start":1213,"line_end":1213,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192636,"byte_end":192639,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192644,"byte_end":192662,"line_start":1215,"line_end":1215,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192667,"byte_end":192705,"line_start":1216,"line_end":1216,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192710,"byte_end":192725,"line_start":1217,"line_end":1217,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192730,"byte_end":192747,"line_start":1218,"line_end":1218,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192752,"byte_end":192794,"line_start":1219,"line_end":1219,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192799,"byte_end":192834,"line_start":1220,"line_end":1220,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192839,"byte_end":192883,"line_start":1221,"line_end":1221,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192888,"byte_end":192897,"line_start":1222,"line_end":1222,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192902,"byte_end":192916,"line_start":1223,"line_end":1223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192921,"byte_end":192924,"line_start":1224,"line_end":1224,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192929,"byte_end":192972,"line_start":1225,"line_end":1225,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192977,"byte_end":193014,"line_start":1226,"line_end":1226,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193019,"byte_end":193056,"line_start":1227,"line_end":1227,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193061,"byte_end":193095,"line_start":1228,"line_end":1228,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193100,"byte_end":193134,"line_start":1229,"line_end":1229,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193139,"byte_end":193149,"line_start":1230,"line_end":1230,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193154,"byte_end":193161,"line_start":1231,"line_end":1231,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3950},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194102,"byte_end":194108,"line_start":1265,"line_end":1265,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"fn by_ref<'_>(&'_ mut Self) -> &'_ mut Self","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193298,"byte_end":193345,"line_start":1239,"line_end":1239,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193350,"byte_end":193353,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193358,"byte_end":193432,"line_start":1241,"line_end":1241,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193437,"byte_end":193474,"line_start":1242,"line_end":1242,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193479,"byte_end":193482,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193487,"byte_end":193501,"line_start":1244,"line_end":1244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193506,"byte_end":193509,"line_start":1245,"line_end":1245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193514,"byte_end":193521,"line_start":1246,"line_end":1246,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193526,"byte_end":193567,"line_start":1247,"line_end":1247,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193572,"byte_end":193615,"line_start":1248,"line_end":1248,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193620,"byte_end":193623,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193628,"byte_end":193668,"line_start":1250,"line_end":1250,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193673,"byte_end":193676,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193681,"byte_end":193710,"line_start":1252,"line_end":1252,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193715,"byte_end":193743,"line_start":1253,"line_end":1253,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193748,"byte_end":193805,"line_start":1254,"line_end":1254,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193810,"byte_end":193837,"line_start":1255,"line_end":1255,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193842,"byte_end":193865,"line_start":1256,"line_end":1256,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193870,"byte_end":193873,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193878,"byte_end":193913,"line_start":1258,"line_end":1258,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193918,"byte_end":193946,"line_start":1259,"line_end":1259,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193951,"byte_end":194008,"line_start":1260,"line_end":1260,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194013,"byte_end":194040,"line_start":1261,"line_end":1261,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194045,"byte_end":194068,"line_start":1262,"line_end":1262,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194073,"byte_end":194082,"line_start":1263,"line_end":1263,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194087,"byte_end":194094,"line_start":1264,"line_end":1264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3951},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195867,"byte_end":195879,"line_start":1310,"line_end":1310,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::stream::StreamExt::catch_unwind","value":"fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\nstd::panic::UnwindSafe","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194159,"byte_end":194213,"line_start":1269,"line_end":1269,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194218,"byte_end":194221,"line_start":1270,"line_end":1270,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194226,"byte_end":194301,"line_start":1271,"line_end":1271,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194306,"byte_end":194309,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194314,"byte_end":194389,"line_start":1273,"line_end":1273,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194394,"byte_end":194468,"line_start":1274,"line_end":1274,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194473,"byte_end":194547,"line_start":1275,"line_end":1275,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194552,"byte_end":194601,"line_start":1276,"line_end":1276,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194606,"byte_end":194609,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194614,"byte_end":194689,"line_start":1278,"line_end":1278,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194694,"byte_end":194764,"line_start":1279,"line_end":1279,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194769,"byte_end":194836,"line_start":1280,"line_end":1280,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the [`Stream`] trait is","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194841,"byte_end":194913,"line_start":1281,"line_end":1281,"column_start":5,"column_end":77}},{"value":"/ also implemented for `AssertUnwindSafe<St>` where `St` implements","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194918,"byte_end":194987,"line_start":1282,"line_end":1282,"column_start":5,"column_end":74}},{"value":"/ [`Stream`].","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194992,"byte_end":195007,"line_start":1283,"line_end":1283,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195012,"byte_end":195015,"line_start":1284,"line_end":1284,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195020,"byte_end":195084,"line_start":1285,"line_end":1285,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195089,"byte_end":195146,"line_start":1286,"line_end":1286,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195151,"byte_end":195154,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195159,"byte_end":195173,"line_start":1288,"line_end":1288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195178,"byte_end":195181,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195186,"byte_end":195193,"line_start":1290,"line_end":1290,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195198,"byte_end":195239,"line_start":1291,"line_end":1291,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195244,"byte_end":195287,"line_start":1292,"line_end":1292,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195292,"byte_end":195295,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Some(10), None, Some(11)]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195300,"byte_end":195362,"line_start":1294,"line_end":1294,"column_start":5,"column_end":67}},{"value":"/ // Panic on second element","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195367,"byte_end":195397,"line_start":1295,"line_end":1295,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195402,"byte_end":195456,"line_start":1296,"line_end":1296,"column_start":5,"column_end":59}},{"value":"/ // Collect all the results","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195461,"byte_end":195491,"line_start":1297,"line_end":1297,"column_start":5,"column_end":35}},{"value":"/ let stream = stream_panicking.catch_unwind();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195496,"byte_end":195545,"line_start":1298,"line_end":1298,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195550,"byte_end":195553,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ let results: Vec<Result<i32, _>> = stream.collect().await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195558,"byte_end":195620,"line_start":1300,"line_end":1300,"column_start":5,"column_end":67}},{"value":"/ match results[0] {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195625,"byte_end":195647,"line_start":1301,"line_end":1301,"column_start":5,"column_end":27}},{"value":"/     Ok(10) => {}","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195652,"byte_end":195672,"line_start":1302,"line_end":1302,"column_start":5,"column_end":25}},{"value":"/     _ => panic!(\"unexpected result!\"),","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195677,"byte_end":195719,"line_start":1303,"line_end":1303,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195724,"byte_end":195729,"line_start":1304,"line_end":1304,"column_start":5,"column_end":10}},{"value":"/ assert!(results[1].is_err());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195734,"byte_end":195767,"line_start":1305,"line_end":1305,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(results.len(), 2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195772,"byte_end":195805,"line_start":1306,"line_end":1306,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195810,"byte_end":195819,"line_start":1307,"line_end":1307,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195824,"byte_end":195831,"line_start":1308,"line_end":1308,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195836,"byte_end":195859,"line_start":1309,"line_end":1309,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3952},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196255,"byte_end":196260,"line_start":1322,"line_end":1322,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"fn boxed<'a>(Self) -> BoxStream where Self: Sized + Send + 'a","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196026,"byte_end":196067,"line_start":1317,"line_end":1317,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196072,"byte_end":196075,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196080,"byte_end":196155,"line_start":1319,"line_end":1319,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196160,"byte_end":196217,"line_start":1320,"line_end":1320,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196222,"byte_end":196247,"line_start":1321,"line_end":1321,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3954},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196716,"byte_end":196727,"line_start":1336,"line_end":1336,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"fn boxed_local<'a>(Self) -> LocalBoxStream where Self: Sized + 'a","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196415,"byte_end":196456,"line_start":1329,"line_end":1329,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196461,"byte_end":196464,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196469,"byte_end":196528,"line_start":1331,"line_end":1331,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196533,"byte_end":196536,"line_start":1332,"line_end":1332,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196541,"byte_end":196616,"line_start":1333,"line_end":1333,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196621,"byte_end":196678,"line_start":1334,"line_end":1334,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196683,"byte_end":196708,"line_start":1335,"line_end":1335,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3956},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197620,"byte_end":197628,"line_start":1357,"line_end":1357,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"fn buffered(Self, usize) -> Buffered<Self> where Self::Item: Future,\nSelf: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196880,"byte_end":196943,"line_start":1343,"line_end":1343,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196948,"byte_end":196951,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196956,"byte_end":197031,"line_start":1345,"line_end":1345,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197036,"byte_end":197112,"line_start":1346,"line_end":1346,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197117,"byte_end":197190,"line_start":1347,"line_end":1347,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197195,"byte_end":197268,"line_start":1348,"line_end":1348,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197273,"byte_end":197315,"line_start":1349,"line_end":1349,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197320,"byte_end":197323,"line_start":1350,"line_end":1350,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197328,"byte_end":197393,"line_start":1351,"line_end":1351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197398,"byte_end":197401,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197406,"byte_end":197481,"line_start":1353,"line_end":1353,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197486,"byte_end":197543,"line_start":1354,"line_end":1354,"column_start":5,"column_end":62}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197548,"byte_end":197582,"line_start":1355,"line_end":1355,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197587,"byte_end":197612,"line_start":1356,"line_end":1356,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3957},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199308,"byte_end":199324,"line_start":1402,"line_end":1402,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"fn buffer_unordered(Self, usize) -> BufferUnordered<Self> where\nSelf::Item: Future, Self: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197822,"byte_end":197897,"line_start":1365,"line_end":1365,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197902,"byte_end":197905,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197910,"byte_end":197985,"line_start":1367,"line_end":1367,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197990,"byte_end":198064,"line_start":1368,"line_end":1368,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198069,"byte_end":198141,"line_start":1369,"line_end":1369,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198146,"byte_end":198220,"line_start":1370,"line_end":1370,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198225,"byte_end":198254,"line_start":1371,"line_end":1371,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198259,"byte_end":198262,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198267,"byte_end":198332,"line_start":1373,"line_end":1373,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198337,"byte_end":198340,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198345,"byte_end":198420,"line_start":1375,"line_end":1375,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198425,"byte_end":198482,"line_start":1376,"line_end":1376,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198487,"byte_end":198490,"line_start":1377,"line_end":1377,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198495,"byte_end":198509,"line_start":1378,"line_end":1378,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198514,"byte_end":198517,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198522,"byte_end":198529,"line_start":1380,"line_end":1380,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198534,"byte_end":198575,"line_start":1381,"line_end":1381,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198580,"byte_end":198614,"line_start":1382,"line_end":1382,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198619,"byte_end":198662,"line_start":1383,"line_end":1383,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198667,"byte_end":198670,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198675,"byte_end":198725,"line_start":1385,"line_end":1385,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198730,"byte_end":198780,"line_start":1386,"line_end":1386,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198785,"byte_end":198788,"line_start":1387,"line_end":1387,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198793,"byte_end":198860,"line_start":1388,"line_end":1388,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198865,"byte_end":198927,"line_start":1389,"line_end":1389,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198932,"byte_end":198935,"line_start":1390,"line_end":1390,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198940,"byte_end":198965,"line_start":1391,"line_end":1391,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198970,"byte_end":199024,"line_start":1392,"line_end":1392,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199029,"byte_end":199032,"line_start":1393,"line_end":1393,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199037,"byte_end":199062,"line_start":1394,"line_end":1394,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199067,"byte_end":199121,"line_start":1395,"line_end":1395,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199126,"byte_end":199129,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199134,"byte_end":199178,"line_start":1397,"line_end":1397,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199183,"byte_end":199219,"line_start":1398,"line_end":1398,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199224,"byte_end":199231,"line_start":1399,"line_end":1399,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199236,"byte_end":199270,"line_start":1400,"line_end":1400,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199275,"byte_end":199300,"line_start":1401,"line_end":1401,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3958},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200220,"byte_end":200223,"line_start":1432,"line_end":1432,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199532,"byte_end":199580,"line_start":1410,"line_end":1410,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199585,"byte_end":199588,"line_start":1411,"line_end":1411,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199593,"byte_end":199666,"line_start":1412,"line_end":1412,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199671,"byte_end":199743,"line_start":1413,"line_end":1413,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199748,"byte_end":199761,"line_start":1414,"line_end":1414,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199766,"byte_end":199769,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199774,"byte_end":199788,"line_start":1416,"line_end":1416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199793,"byte_end":199796,"line_start":1417,"line_end":1417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199801,"byte_end":199808,"line_start":1418,"line_end":1418,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199813,"byte_end":199854,"line_start":1419,"line_end":1419,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199859,"byte_end":199902,"line_start":1420,"line_end":1420,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199907,"byte_end":199910,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199915,"byte_end":199953,"line_start":1422,"line_end":1422,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199958,"byte_end":199997,"line_start":1423,"line_end":1423,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200002,"byte_end":200005,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200010,"byte_end":200044,"line_start":1425,"line_end":1425,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200049,"byte_end":200090,"line_start":1426,"line_end":1426,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200095,"byte_end":200123,"line_start":1427,"line_end":1427,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200128,"byte_end":200178,"line_start":1428,"line_end":1428,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200183,"byte_end":200192,"line_start":1429,"line_end":1429,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200197,"byte_end":200204,"line_start":1430,"line_end":1430,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200209,"byte_end":200212,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3960},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201131,"byte_end":201136,"line_start":1463,"line_end":1463,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200404,"byte_end":200441,"line_start":1440,"line_end":1440,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200446,"byte_end":200449,"line_start":1441,"line_end":1441,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200454,"byte_end":200525,"line_start":1442,"line_end":1442,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200530,"byte_end":200606,"line_start":1443,"line_end":1443,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200611,"byte_end":200614,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200619,"byte_end":200626,"line_start":1445,"line_end":1445,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200631,"byte_end":200672,"line_start":1446,"line_end":1446,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200677,"byte_end":200720,"line_start":1447,"line_end":1447,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200725,"byte_end":200728,"line_start":1448,"line_end":1448,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200733,"byte_end":200790,"line_start":1449,"line_end":1449,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200795,"byte_end":200851,"line_start":1450,"line_end":1450,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200856,"byte_end":200859,"line_start":1451,"line_end":1451,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200864,"byte_end":200904,"line_start":1452,"line_end":1452,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200909,"byte_end":200912,"line_start":1453,"line_end":1453,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200917,"byte_end":200965,"line_start":1454,"line_end":1454,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200970,"byte_end":200998,"line_start":1455,"line_end":1455,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201003,"byte_end":201018,"line_start":1456,"line_end":1456,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201023,"byte_end":201042,"line_start":1457,"line_end":1457,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201047,"byte_end":201065,"line_start":1458,"line_end":1458,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201070,"byte_end":201085,"line_start":1459,"line_end":1459,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201090,"byte_end":201097,"line_start":1460,"line_end":1460,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201102,"byte_end":201111,"line_start":1461,"line_end":1461,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201116,"byte_end":201123,"line_start":1462,"line_end":1462,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3962},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201474,"byte_end":201482,"line_start":1474,"line_end":1474,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201328,"byte_end":201383,"line_start":1471,"line_end":1471,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201388,"byte_end":201391,"line_start":1472,"line_end":1472,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201396,"byte_end":201466,"line_start":1473,"line_end":1473,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3963},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202517,"byte_end":202523,"line_start":1500,"line_end":1500,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"fn chunks(Self, usize) -> Chunks<Self> where Self: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201615,"byte_end":201682,"line_start":1481,"line_end":1481,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201687,"byte_end":201690,"line_start":1482,"line_end":1482,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201695,"byte_end":201769,"line_start":1483,"line_end":1483,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201774,"byte_end":201846,"line_start":1484,"line_end":1484,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201851,"byte_end":201903,"line_start":1485,"line_end":1485,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201908,"byte_end":201911,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201916,"byte_end":201989,"line_start":1487,"line_end":1487,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201994,"byte_end":202068,"line_start":1488,"line_end":1488,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202073,"byte_end":202148,"line_start":1489,"line_end":1489,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202153,"byte_end":202225,"line_start":1490,"line_end":1490,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202230,"byte_end":202242,"line_start":1491,"line_end":1491,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202247,"byte_end":202250,"line_start":1492,"line_end":1492,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202255,"byte_end":202330,"line_start":1493,"line_end":1493,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202335,"byte_end":202392,"line_start":1494,"line_end":1494,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202397,"byte_end":202400,"line_start":1495,"line_end":1495,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202405,"byte_end":202417,"line_start":1496,"line_end":1496,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202422,"byte_end":202425,"line_start":1497,"line_end":1497,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202430,"byte_end":202479,"line_start":1498,"line_end":1498,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202484,"byte_end":202509,"line_start":1499,"line_end":1499,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3964},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203620,"byte_end":203632,"line_start":1526,"line_end":1526,"column_start":8,"column_end":20},"name":"ready_chunks","qualname":"::stream::stream::StreamExt::ready_chunks","value":"fn ready_chunks(Self, usize) -> ReadyChunks<Self> where Self: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" An adaptor for chunking up ready items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up ready items of the stream inside a vector.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202684,"byte_end":202757,"line_start":1507,"line_end":1507,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202762,"byte_end":202765,"line_start":1508,"line_end":1508,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull ready items from this stream and","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202770,"byte_end":202843,"line_start":1509,"line_end":1509,"column_start":5,"column_end":78}},{"value":"/ buffer them into a local vector. At most `capacity` items will get","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202848,"byte_end":202918,"line_start":1510,"line_end":1510,"column_start":5,"column_end":75}},{"value":"/ buffered before they're yielded from the returned stream. If underlying","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202923,"byte_end":202998,"line_start":1511,"line_end":1511,"column_start":5,"column_end":80}},{"value":"/ stream returns `Poll::Pending`, and collected chunk is not empty, it will","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203003,"byte_end":203080,"line_start":1512,"line_end":1512,"column_start":5,"column_end":82}},{"value":"/ be immediately returned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203085,"byte_end":203113,"line_start":1513,"line_end":1513,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203118,"byte_end":203121,"line_start":1514,"line_end":1514,"column_start":5,"column_end":8}},{"value":"/ If the underlying stream ended and only a partial vector was created,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203126,"byte_end":203199,"line_start":1515,"line_end":1515,"column_start":5,"column_end":78}},{"value":"/ it'll be returned. Additionally if an error happens from the underlying","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203204,"byte_end":203279,"line_start":1516,"line_end":1516,"column_start":5,"column_end":80}},{"value":"/ stream then the currently buffered items will be yielded.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203284,"byte_end":203345,"line_start":1517,"line_end":1517,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203350,"byte_end":203353,"line_start":1518,"line_end":1518,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203358,"byte_end":203433,"line_start":1519,"line_end":1519,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203438,"byte_end":203495,"line_start":1520,"line_end":1520,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203500,"byte_end":203503,"line_start":1521,"line_end":1521,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203508,"byte_end":203520,"line_start":1522,"line_end":1522,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203525,"byte_end":203528,"line_start":1523,"line_end":1523,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203533,"byte_end":203582,"line_start":1524,"line_end":1524,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203587,"byte_end":203612,"line_start":1525,"line_end":1525,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3965},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206429,"byte_end":206436,"line_start":1586,"line_end":1586,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"fn inspect<F>(Self, F) -> Inspect<Self, F> where\nF: for<'_> FnMut(&'_ Self::Item) -> (), Self: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206126,"byte_end":206199,"line_start":1581,"line_end":1581,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206204,"byte_end":206207,"line_start":1582,"line_end":1582,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206212,"byte_end":206281,"line_start":1583,"line_end":1583,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206286,"byte_end":206355,"line_start":1584,"line_end":1584,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206360,"byte_end":206421,"line_start":1585,"line_end":1585,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3967},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206892,"byte_end":206903,"line_start":1599,"line_end":1599,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206613,"byte_end":206688,"line_start":1594,"line_end":1594,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206693,"byte_end":206714,"line_start":1595,"line_end":1595,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206719,"byte_end":206722,"line_start":1596,"line_end":1596,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206727,"byte_end":206807,"line_start":1597,"line_end":1597,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206812,"byte_end":206884,"line_start":1598,"line_end":1598,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3969},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207356,"byte_end":207368,"line_start":1612,"line_end":1612,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207077,"byte_end":207153,"line_start":1607,"line_end":1607,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207158,"byte_end":207179,"line_start":1608,"line_end":1608,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207184,"byte_end":207187,"line_start":1609,"line_end":1609,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207192,"byte_end":207271,"line_start":1610,"line_end":1610,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207276,"byte_end":207348,"line_start":1611,"line_end":1611,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3971},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207644,"byte_end":207659,"line_start":1622,"line_end":1622,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"fn poll_next_unpin<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Option<Self::Item>> where Self: Unpin","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207543,"byte_end":207614,"line_start":1620,"line_end":1620,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207619,"byte_end":207636,"line_start":1621,"line_end":1621,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3972},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209803,"byte_end":209819,"line_start":1679,"line_end":1679,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"fn select_next_some<'_>(&'_ mut Self) -> SelectNextSome where Self: Unpin +\nFusedStream","parent":{"krate":0,"index":3880},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207806,"byte_end":207881,"line_start":1629,"line_end":1629,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207886,"byte_end":207896,"line_start":1630,"line_end":1630,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207901,"byte_end":207904,"line_start":1631,"line_end":1631,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207909,"byte_end":207982,"line_start":1632,"line_end":1632,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207987,"byte_end":208055,"line_start":1633,"line_end":1633,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208060,"byte_end":208108,"line_start":1634,"line_end":1634,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208113,"byte_end":208188,"line_start":1635,"line_end":1635,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208193,"byte_end":208269,"line_start":1636,"line_end":1636,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208274,"byte_end":208300,"line_start":1637,"line_end":1637,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208305,"byte_end":208308,"line_start":1638,"line_end":1638,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208313,"byte_end":208386,"line_start":1639,"line_end":1639,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208391,"byte_end":208461,"line_start":1640,"line_end":1640,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208466,"byte_end":208506,"line_start":1641,"line_end":1641,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208511,"byte_end":208514,"line_start":1642,"line_end":1642,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208519,"byte_end":208573,"line_start":1643,"line_end":1643,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208578,"byte_end":208662,"line_start":1644,"line_end":1644,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208667,"byte_end":208670,"line_start":1645,"line_end":1645,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208675,"byte_end":208689,"line_start":1646,"line_end":1646,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208694,"byte_end":208697,"line_start":1647,"line_end":1647,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208702,"byte_end":208709,"line_start":1648,"line_end":1648,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208714,"byte_end":208755,"line_start":1649,"line_end":1649,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208760,"byte_end":208794,"line_start":1650,"line_end":1650,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208799,"byte_end":208854,"line_start":1651,"line_end":1651,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208859,"byte_end":208862,"line_start":1652,"line_end":1652,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208867,"byte_end":208902,"line_start":1653,"line_end":1653,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208907,"byte_end":208957,"line_start":1654,"line_end":1654,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208962,"byte_end":208984,"line_start":1655,"line_end":1655,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208989,"byte_end":208999,"line_start":1656,"line_end":1656,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209004,"byte_end":209021,"line_start":1657,"line_end":1657,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209026,"byte_end":209052,"line_start":1658,"line_end":1658,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209057,"byte_end":209112,"line_start":1659,"line_end":1659,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209117,"byte_end":209146,"line_start":1660,"line_end":1660,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209151,"byte_end":209214,"line_start":1661,"line_end":1661,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209219,"byte_end":209265,"line_start":1662,"line_end":1662,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209270,"byte_end":209284,"line_start":1663,"line_end":1663,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209289,"byte_end":209358,"line_start":1664,"line_end":1664,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209363,"byte_end":209388,"line_start":1665,"line_end":1665,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209393,"byte_end":209446,"line_start":1666,"line_end":1666,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209451,"byte_end":209480,"line_start":1667,"line_end":1667,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209485,"byte_end":209498,"line_start":1668,"line_end":1668,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209503,"byte_end":209573,"line_start":1669,"line_end":1669,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209578,"byte_end":209637,"line_start":1670,"line_end":1670,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209642,"byte_end":209672,"line_start":1671,"line_end":1671,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209677,"byte_end":209686,"line_start":1672,"line_end":1672,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209691,"byte_end":209696,"line_start":1673,"line_end":1673,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209701,"byte_end":209726,"line_start":1674,"line_end":1674,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209731,"byte_end":209740,"line_start":1675,"line_end":1675,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209745,"byte_end":209752,"line_start":1676,"line_end":1676,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209757,"byte_end":209760,"line_start":1677,"line_end":1677,"column_start":5,"column_end":8}},{"value":"/ [`select!`]: crate::select","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209765,"byte_end":209795,"line_start":1678,"line_end":1678,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":13601},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":361629,"byte_end":361636,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":13605},{"krate":0,"index":13606},{"krate":0,"index":13607}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4195},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":361861,"byte_end":361864,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<AndThen<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4206},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":362540,"byte_end":362549,"line_start":57,"line_end":57,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<AndThen<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4207},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":363116,"byte_end":363125,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<AndThen<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4212},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":363652,"byte_end":363665,"line_start":91,"line_end":91,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<AndThen<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13665},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323751,"byte_end":323758,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":13668}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13734},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":324006,"byte_end":324015,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":13737}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13803},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":324316,"byte_end":324326,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":13806}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13869},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":364371,"byte_end":364381,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":13871}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4245},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":364668,"byte_end":364681,"line_start":28,"line_end":28,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<IntoStream<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4249},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":364857,"byte_end":364866,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<IntoStream<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":364840,"byte_end":364849,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4250},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":365003,"byte_end":365012,"line_start":41,"line_end":41,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IntoStream<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13912},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":324752,"byte_end":324757,"line_start":55,"line_end":55,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":13915}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13981},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":325034,"byte_end":325040,"line_start":62,"line_end":62,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":13984}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14047},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":365729,"byte_end":365735,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":14051},{"krate":0,"index":14052},{"krate":0,"index":14053}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4291},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":365959,"byte_end":365962,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OrElse<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4302},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":366629,"byte_end":366638,"line_start":57,"line_end":57,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<OrElse<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4303},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":367342,"byte_end":367351,"line_start":77,"line_end":77,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<OrElse<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4308},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":367874,"byte_end":367887,"line_start":95,"line_end":95,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<OrElse<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14108},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":368564,"byte_end":368571,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":14111}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":368397,"byte_end":368467,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":368485,"byte_end":368552,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4348},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":368908,"byte_end":368921,"line_start":23,"line_end":23,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryNext as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4352},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":369111,"byte_end":369115,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryNext as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14116},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":369656,"byte_end":369666,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":14120},{"krate":0,"index":14121},{"krate":0,"index":14122}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4390},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":369894,"byte_end":369897,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryForEach<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4401},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":370552,"byte_end":370556,"line_start":53,"line_end":53,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryForEach<St, Fut, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14173},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":371552,"byte_end":371561,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":14177},{"krate":0,"index":14178},{"krate":0,"index":14179},{"krate":0,"index":14180}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4442},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":371899,"byte_end":371902,"line_start":33,"line_end":33,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryFilter<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4452},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":372574,"byte_end":372587,"line_start":59,"line_end":59,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFilter<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4458},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":372870,"byte_end":372879,"line_start":72,"line_end":72,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryFilter<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4459},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":373618,"byte_end":373627,"line_start":92,"line_end":92,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TryFilter<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14238},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":374689,"byte_end":374701,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":14242},{"krate":0,"index":14243},{"krate":0,"index":14244}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4500},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":374932,"byte_end":374935,"line_start":29,"line_end":29,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryFilterMap<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4511},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":375529,"byte_end":375542,"line_start":51,"line_end":51,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFilterMap<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4518},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":375844,"byte_end":375853,"line_start":64,"line_end":64,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryFilterMap<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4519},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":376693,"byte_end":376702,"line_start":86,"line_end":86,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TryFilterMap<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14299},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":377699,"byte_end":377709,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":14301},{"krate":0,"index":14302}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4555},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":378263,"byte_end":378276,"line_start":43,"line_end":43,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFlatten<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4559},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":378587,"byte_end":378596,"line_start":56,"line_end":56,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryFlatten<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14343},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":379887,"byte_end":379897,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":14346},{"krate":0,"index":14347}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4604},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":380250,"byte_end":380263,"line_start":31,"line_end":31,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryCollect<St, C> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4609},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":380475,"byte_end":380479,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryCollect<St, C> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14392},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_concat.rs","byte_start":381223,"byte_end":381232,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":14394},{"krate":0,"index":14395}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4642},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_concat.rs","byte_start":381733,"byte_end":381737,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryConcat<St> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14432},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":382743,"byte_end":382752,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"TryChunks","qualname":"::stream::try_stream::try_chunks::TryChunks","value":"TryChunks {  }","parent":null,"children":[{"krate":0,"index":14434},{"krate":0,"index":14435},{"krate":0,"index":14436}],"decl_id":null,"docs":" Stream for the [`try_chunks`](super::TryStreamExt::try_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4700},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":383593,"byte_end":383602,"line_start":48,"line_end":48,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryChunks<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4701},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":384980,"byte_end":384989,"line_start":83,"line_end":83,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TryChunks<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4704},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":385431,"byte_end":385444,"line_start":96,"line_end":96,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryChunks<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14480},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":385996,"byte_end":386010,"line_start":116,"line_end":116,"column_start":12,"column_end":26},"name":"TryChunksError","qualname":"::stream::try_stream::try_chunks::TryChunksError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating, that while chunk was collected inner stream produced an error.","sig":null,"attributes":[{"value":"/ Error indicating, that while chunk was collected inner stream produced an error.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":385773,"byte_end":385857,"line_start":112,"line_end":112,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":385858,"byte_end":385861,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Contains all items that were collected before an error occurred, and the stream error itself.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":385862,"byte_end":385959,"line_start":114,"line_end":114,"column_start":1,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":14484},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":386017,"byte_end":386027,"line_start":116,"line_end":116,"column_start":33,"column_end":43},"name":"0","qualname":"::stream::try_stream::try_chunks::TryChunksError::0","value":"std::vec::Vec<T>","parent":{"krate":0,"index":14480},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":14485},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":386029,"byte_end":386034,"line_start":116,"line_end":116,"column_start":45,"column_end":50},"name":"1","qualname":"::stream::try_stream::try_chunks::TryChunksError::1","value":"E","parent":{"krate":0,"index":14480},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4708},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":386106,"byte_end":386109,"line_start":119,"line_end":119,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryChunksError<T, E> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4712},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":386265,"byte_end":386268,"line_start":125,"line_end":125,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryChunksError<T, E> as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14501},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":386872,"byte_end":386879,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":14506},{"krate":0,"index":14507},{"krate":0,"index":14508},{"krate":0,"index":14509}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4761},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":387158,"byte_end":387161,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryFold<St, Fut, T, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4773},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":387849,"byte_end":387862,"line_start":54,"line_end":54,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFold<St, Fut, T, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4780},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":388151,"byte_end":388155,"line_start":67,"line_end":67,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryFold<St, Fut, T, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4813},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":391327,"byte_end":391337,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where F: FnMut(T)\n-> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":389470,"byte_end":389546,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":389547,"byte_end":389550,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":389551,"byte_end":389627,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":389628,"byte_end":389698,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":389699,"byte_end":389758,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":389759,"byte_end":389762,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":389763,"byte_end":389841,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":389842,"byte_end":389919,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":389920,"byte_end":389984,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":389985,"byte_end":389988,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":389989,"byte_end":390061,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":390062,"byte_end":390140,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":390141,"byte_end":390170,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":390171,"byte_end":390174,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":390175,"byte_end":390252,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":390253,"byte_end":390317,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":390318,"byte_end":390370,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":390371,"byte_end":390374,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":390375,"byte_end":390452,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":390453,"byte_end":390525,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":390526,"byte_end":390595,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":390596,"byte_end":390674,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":390675,"byte_end":390678,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":390679,"byte_end":390692,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":390693,"byte_end":390696,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":390697,"byte_end":390704,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":390705,"byte_end":390738,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":390739,"byte_end":390762,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":390763,"byte_end":390804,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":390805,"byte_end":390851,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":390852,"byte_end":390855,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":390856,"byte_end":390915,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":390916,"byte_end":390938,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":390939,"byte_end":390973,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":390974,"byte_end":390983,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":390984,"byte_end":390987,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":390988,"byte_end":391011,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":391012,"byte_end":391051,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":391052,"byte_end":391088,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":391089,"byte_end":391132,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":391133,"byte_end":391149,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":391150,"byte_end":391170,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":391171,"byte_end":391180,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":391181,"byte_end":391188,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":391189,"byte_end":391192,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":391193,"byte_end":391258,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":391259,"byte_end":391301,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":391302,"byte_end":391311,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":391312,"byte_end":391319,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14570},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":391700,"byte_end":391709,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":14574},{"krate":0,"index":14575},{"krate":0,"index":14576}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4822},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":391920,"byte_end":391923,"line_start":83,"line_end":83,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryUnfold<T, F, Fut> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4829},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":392262,"byte_end":392271,"line_start":95,"line_end":95,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryUnfold<T, F, Fut> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14627},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":393617,"byte_end":393629,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":14631},{"krate":0,"index":14632},{"krate":0,"index":14633},{"krate":0,"index":14634},{"krate":0,"index":14635}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4874},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":393987,"byte_end":393990,"line_start":32,"line_end":32,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TrySkipWhile<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4885},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":394873,"byte_end":394882,"line_start":63,"line_end":63,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TrySkipWhile<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4886},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":395798,"byte_end":395807,"line_start":89,"line_end":89,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TrySkipWhile<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4891},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":396347,"byte_end":396360,"line_start":106,"line_end":106,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TrySkipWhile<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14696},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":397166,"byte_end":397178,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":14700},{"krate":0,"index":14701},{"krate":0,"index":14702},{"krate":0,"index":14703},{"krate":0,"index":14704}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4932},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":397551,"byte_end":397554,"line_start":35,"line_end":35,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryTakeWhile<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4943},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":398431,"byte_end":398440,"line_start":66,"line_end":66,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryTakeWhile<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4944},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":399390,"byte_end":399399,"line_start":94,"line_end":94,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TryTakeWhile<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4949},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":400013,"byte_end":400026,"line_start":115,"line_end":115,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryTakeWhile<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14765},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffer_unordered.rs","byte_start":400947,"byte_end":400965,"line_start":16,"line_end":16,"column_start":16,"column_end":34},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":14767},{"krate":0,"index":14768},{"krate":0,"index":14769}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5003},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffer_unordered.rs","byte_start":401679,"byte_end":401688,"line_start":49,"line_end":49,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryBufferUnordered<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14813},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffered.rs","byte_start":403505,"byte_end":403516,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"TryBuffered","qualname":"::stream::try_stream::try_buffered::TryBuffered","value":"TryBuffered {  }","parent":null,"children":[{"krate":0,"index":14815},{"krate":0,"index":14816},{"krate":0,"index":14817}],"decl_id":null,"docs":" Stream for the [`try_buffered`](super::TryStreamExt::try_buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5057},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffered.rs","byte_start":404244,"byte_end":404253,"line_start":50,"line_end":50,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryBuffered<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14861},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":406053,"byte_end":406073,"line_start":16,"line_end":16,"column_start":16,"column_end":36},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":14865},{"krate":0,"index":14866},{"krate":0,"index":14867},{"krate":0,"index":14868}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5105},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":406352,"byte_end":406355,"line_start":30,"line_end":30,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryForEachConcurrent<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5110},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":406793,"byte_end":406806,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryForEachConcurrent<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5121},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":407562,"byte_end":407566,"line_start":75,"line_end":75,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryForEachConcurrent<St, Fut, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14922},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":410372,"byte_end":410385,"line_start":15,"line_end":15,"column_start":16,"column_end":29},"name":"IntoAsyncRead","qualname":"::stream::try_stream::into_async_read::IntoAsyncRead","value":"IntoAsyncRead {  }","parent":null,"children":[{"krate":0,"index":14924},{"krate":0,"index":14925}],"decl_id":null,"docs":" Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5171},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":410993,"byte_end":411002,"line_start":48,"line_end":48,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<IntoAsyncRead<St> as futures_io::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<Result<usize>>","parent":{"krate":25,"index":39},"children":[],"decl_id":{"krate":25,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5174},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":412670,"byte_end":412680,"line_start":98,"line_end":98,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<IntoAsyncRead<St> as futures_io::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<Result<usize>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5175},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":412851,"byte_end":412861,"line_start":103,"line_end":103,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<IntoAsyncRead<St> as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<()>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5176},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":413012,"byte_end":413022,"line_start":108,"line_end":108,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<IntoAsyncRead<St> as futures_io::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<()>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5179},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":413286,"byte_end":413299,"line_start":119,"line_end":119,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<IntoAsyncRead<St> as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<&'_ [u8]>>","parent":{"krate":25,"index":49},"children":[],"decl_id":{"krate":25,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5180},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":414359,"byte_end":414366,"line_start":149,"line_end":149,"column_start":8,"column_end":15},"name":"consume","qualname":"<IntoAsyncRead<St> as futures_io::AsyncBufRead>::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":25,"index":49},"children":[],"decl_id":{"krate":25,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":5186},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328249,"byte_end":328261,"line_start":157,"line_end":157,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":5187},{"krate":0,"index":5189},{"krate":0,"index":5192},{"krate":0,"index":5195},{"krate":0,"index":5198},{"krate":0,"index":5201},{"krate":0,"index":5203},{"krate":0,"index":5205},{"krate":0,"index":5206},{"krate":0,"index":5207},{"krate":0,"index":5210},{"krate":0,"index":5213},{"krate":0,"index":5216},{"krate":0,"index":5220},{"krate":0,"index":5222},{"krate":0,"index":5223},{"krate":0,"index":5226},{"krate":0,"index":5230},{"krate":0,"index":5231},{"krate":0,"index":5235},{"krate":0,"index":5236},{"krate":0,"index":5237},{"krate":0,"index":5238},{"krate":0,"index":5239}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328187,"byte_end":328238,"line_start":156,"line_end":156,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5187},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328803,"byte_end":328811,"line_start":175,"line_end":175,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328279,"byte_end":328353,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328358,"byte_end":328384,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328389,"byte_end":328392,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328397,"byte_end":328411,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328416,"byte_end":328419,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328424,"byte_end":328431,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328436,"byte_end":328477,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328482,"byte_end":328528,"line_start":165,"line_end":165,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328533,"byte_end":328536,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328541,"byte_end":328561,"line_start":167,"line_end":167,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328566,"byte_end":328611,"line_start":168,"line_end":168,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328616,"byte_end":328647,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328652,"byte_end":328655,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328660,"byte_end":328714,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328719,"byte_end":328770,"line_start":172,"line_end":172,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328775,"byte_end":328783,"line_start":173,"line_end":173,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328788,"byte_end":328795,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5189},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329507,"byte_end":329513,"line_start":200,"line_end":200,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328987,"byte_end":329060,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329065,"byte_end":329096,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329101,"byte_end":329104,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329109,"byte_end":329123,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329128,"byte_end":329131,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329136,"byte_end":329143,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329148,"byte_end":329189,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329194,"byte_end":329240,"line_start":190,"line_end":190,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329245,"byte_end":329248,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329253,"byte_end":329273,"line_start":192,"line_end":192,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329278,"byte_end":329319,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329324,"byte_end":329355,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329360,"byte_end":329363,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329368,"byte_end":329421,"line_start":196,"line_end":196,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329426,"byte_end":329474,"line_start":197,"line_end":197,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329479,"byte_end":329487,"line_start":198,"line_end":198,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329492,"byte_end":329499,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5192},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330222,"byte_end":330229,"line_start":225,"line_end":225,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329703,"byte_end":329774,"line_start":208,"line_end":208,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329779,"byte_end":329810,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329815,"byte_end":329818,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329823,"byte_end":329837,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329842,"byte_end":329845,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329850,"byte_end":329857,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329862,"byte_end":329903,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329908,"byte_end":329954,"line_start":215,"line_end":215,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329959,"byte_end":329962,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329967,"byte_end":329987,"line_start":217,"line_end":217,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329992,"byte_end":330033,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330038,"byte_end":330070,"line_start":219,"line_end":219,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330075,"byte_end":330078,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330083,"byte_end":330136,"line_start":221,"line_end":221,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330141,"byte_end":330189,"line_start":222,"line_end":222,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330194,"byte_end":330202,"line_start":223,"line_end":223,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330207,"byte_end":330214,"line_start":224,"line_end":224,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5195},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331834,"byte_end":331842,"line_start":271,"line_end":271,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where F: FnMut(Self::Ok)\n-> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330421,"byte_end":330497,"line_start":233,"line_end":233,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330502,"byte_end":330542,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330547,"byte_end":330550,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330555,"byte_end":330631,"line_start":236,"line_end":236,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330636,"byte_end":330712,"line_start":237,"line_end":237,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330717,"byte_end":330790,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330795,"byte_end":330837,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330842,"byte_end":330845,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330850,"byte_end":330923,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330928,"byte_end":330959,"line_start":242,"line_end":242,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330964,"byte_end":330967,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330972,"byte_end":331046,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331051,"byte_end":331125,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331130,"byte_end":331146,"line_start":246,"line_end":246,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331151,"byte_end":331154,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331159,"byte_end":331230,"line_start":248,"line_end":248,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331235,"byte_end":331261,"line_start":249,"line_end":249,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331266,"byte_end":331269,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331274,"byte_end":331346,"line_start":251,"line_end":251,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331351,"byte_end":331400,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331405,"byte_end":331408,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331413,"byte_end":331427,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331432,"byte_end":331435,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331440,"byte_end":331447,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331452,"byte_end":331483,"line_start":257,"line_end":257,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331488,"byte_end":331512,"line_start":258,"line_end":258,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331517,"byte_end":331555,"line_start":259,"line_end":259,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331560,"byte_end":331563,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331568,"byte_end":331624,"line_start":261,"line_end":261,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331629,"byte_end":331632,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331637,"byte_end":331672,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331677,"byte_end":331716,"line_start":264,"line_end":264,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331721,"byte_end":331745,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331750,"byte_end":331766,"line_start":266,"line_end":266,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331771,"byte_end":331787,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331792,"byte_end":331802,"line_start":268,"line_end":268,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331807,"byte_end":331814,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331819,"byte_end":331826,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5198},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332994,"byte_end":333001,"line_start":297,"line_end":297,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332095,"byte_end":332160,"line_start":280,"line_end":280,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332165,"byte_end":332214,"line_start":281,"line_end":281,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332219,"byte_end":332222,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332227,"byte_end":332306,"line_start":283,"line_end":283,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332311,"byte_end":332385,"line_start":284,"line_end":284,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332390,"byte_end":332466,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332471,"byte_end":332516,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332521,"byte_end":332524,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332529,"byte_end":332604,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332609,"byte_end":332649,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332654,"byte_end":332657,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332662,"byte_end":332771,"line_start":291,"line_end":291,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332776,"byte_end":332850,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332855,"byte_end":332871,"line_start":293,"line_end":293,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332876,"byte_end":332879,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332884,"byte_end":332955,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332960,"byte_end":332986,"line_start":296,"line_end":296,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":5201},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333553,"byte_end":333563,"line_start":312,"line_end":312,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where\nF: for<'_> FnMut(&'_ Self::Ok) -> (), Self: Sized","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333250,"byte_end":333324,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333329,"byte_end":333339,"line_start":307,"line_end":307,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333344,"byte_end":333347,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333352,"byte_end":333422,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333427,"byte_end":333503,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333508,"byte_end":333545,"line_start":311,"line_end":311,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5203},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334052,"byte_end":334063,"line_start":325,"line_end":325,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: for<'_> FnMut(&'_ Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333761,"byte_end":333840,"line_start":320,"line_end":320,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333845,"byte_end":333848,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333853,"byte_end":333923,"line_start":322,"line_end":322,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333928,"byte_end":334002,"line_start":323,"line_end":323,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334007,"byte_end":334044,"line_start":324,"line_end":324,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5205},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334984,"byte_end":334995,"line_start":354,"line_end":354,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334266,"byte_end":334319,"line_start":333,"line_end":333,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334324,"byte_end":334368,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334373,"byte_end":334376,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334381,"byte_end":334430,"line_start":336,"line_end":336,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334435,"byte_end":334508,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334513,"byte_end":334533,"line_start":338,"line_end":338,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334538,"byte_end":334541,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334546,"byte_end":334560,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334565,"byte_end":334568,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334573,"byte_end":334580,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334585,"byte_end":334644,"line_start":343,"line_end":343,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334649,"byte_end":334652,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334657,"byte_end":334676,"line_start":345,"line_end":345,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334681,"byte_end":334699,"line_start":346,"line_end":346,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334704,"byte_end":334776,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334781,"byte_end":334811,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334816,"byte_end":334823,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334828,"byte_end":334902,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334907,"byte_end":334910,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334915,"byte_end":334964,"line_start":352,"line_end":352,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334969,"byte_end":334976,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5206},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335890,"byte_end":335898,"line_start":381,"line_end":381,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"fn try_next<'_>(&'_ mut Self) -> TryNext where Self: Unpin","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335151,"byte_end":335225,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335230,"byte_end":335304,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335309,"byte_end":335321,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335326,"byte_end":335329,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335334,"byte_end":335401,"line_start":365,"line_end":365,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335406,"byte_end":335478,"line_start":366,"line_end":366,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335483,"byte_end":335522,"line_start":367,"line_end":367,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335527,"byte_end":335530,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335535,"byte_end":335549,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335554,"byte_end":335557,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335562,"byte_end":335569,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335574,"byte_end":335615,"line_start":372,"line_end":372,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335620,"byte_end":335666,"line_start":373,"line_end":373,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335671,"byte_end":335674,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335679,"byte_end":335736,"line_start":375,"line_end":375,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335741,"byte_end":335744,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335749,"byte_end":335803,"line_start":377,"line_end":377,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335808,"byte_end":335857,"line_start":378,"line_end":378,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335862,"byte_end":335870,"line_start":379,"line_end":379,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335875,"byte_end":335882,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5207},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337250,"byte_end":337262,"line_start":421,"line_end":421,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = Self::Error>,\nSelf: Sized","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336065,"byte_end":336134,"line_start":388,"line_end":388,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336139,"byte_end":336195,"line_start":389,"line_end":389,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336200,"byte_end":336203,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336208,"byte_end":336283,"line_start":391,"line_end":391,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336288,"byte_end":336358,"line_start":392,"line_end":392,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336363,"byte_end":336401,"line_start":393,"line_end":393,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336406,"byte_end":336409,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336414,"byte_end":336492,"line_start":395,"line_end":395,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336497,"byte_end":336557,"line_start":396,"line_end":396,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336562,"byte_end":336619,"line_start":397,"line_end":397,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336624,"byte_end":336691,"line_start":398,"line_end":398,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336696,"byte_end":336726,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336731,"byte_end":336734,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336739,"byte_end":336753,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336758,"byte_end":336761,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336766,"byte_end":336773,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336778,"byte_end":336819,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336824,"byte_end":336848,"line_start":405,"line_end":405,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336853,"byte_end":336899,"line_start":406,"line_end":406,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336904,"byte_end":336907,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336912,"byte_end":336933,"line_start":408,"line_end":408,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336938,"byte_end":336941,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336946,"byte_end":336951,"line_start":410,"line_end":410,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336956,"byte_end":337017,"line_start":411,"line_end":411,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337022,"byte_end":337044,"line_start":412,"line_end":412,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337049,"byte_end":337113,"line_start":413,"line_end":413,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337118,"byte_end":337129,"line_start":414,"line_end":414,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337134,"byte_end":337173,"line_start":415,"line_end":415,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337178,"byte_end":337183,"line_start":416,"line_end":416,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337188,"byte_end":337191,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337196,"byte_end":337217,"line_start":418,"line_end":418,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337222,"byte_end":337230,"line_start":419,"line_end":419,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337235,"byte_end":337242,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5210},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338275,"byte_end":338289,"line_start":451,"line_end":451,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: for<'_> FnMut(&'_ Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error =\nSelf::Error>, Self: Sized","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337526,"byte_end":337600,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337605,"byte_end":337628,"line_start":431,"line_end":431,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337633,"byte_end":337636,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337641,"byte_end":337672,"line_start":433,"line_end":433,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337677,"byte_end":337754,"line_start":434,"line_end":434,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337759,"byte_end":337788,"line_start":435,"line_end":435,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337793,"byte_end":337796,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337801,"byte_end":337815,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337820,"byte_end":337823,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337828,"byte_end":337835,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337840,"byte_end":337881,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337886,"byte_end":337910,"line_start":441,"line_end":441,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337915,"byte_end":337961,"line_start":442,"line_end":442,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337966,"byte_end":337969,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337974,"byte_end":338043,"line_start":444,"line_end":444,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338048,"byte_end":338118,"line_start":445,"line_end":445,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338123,"byte_end":338126,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338131,"byte_end":338198,"line_start":447,"line_end":447,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338203,"byte_end":338242,"line_start":448,"line_end":448,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338247,"byte_end":338255,"line_start":449,"line_end":449,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338260,"byte_end":338267,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5213},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339322,"byte_end":339336,"line_start":481,"line_end":481,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: for<'_> FnMut(&'_ Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error =\nSelf::Error>, Self: Sized","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338566,"byte_end":338640,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338645,"byte_end":338668,"line_start":461,"line_end":461,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338673,"byte_end":338676,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338681,"byte_end":338712,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338717,"byte_end":338794,"line_start":464,"line_end":464,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338799,"byte_end":338828,"line_start":465,"line_end":465,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338833,"byte_end":338836,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338841,"byte_end":338855,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338860,"byte_end":338863,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338868,"byte_end":338875,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338880,"byte_end":338921,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338926,"byte_end":338950,"line_start":471,"line_end":471,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338955,"byte_end":339001,"line_start":472,"line_end":472,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339006,"byte_end":339009,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339014,"byte_end":339090,"line_start":474,"line_end":474,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339095,"byte_end":339165,"line_start":475,"line_end":475,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339170,"byte_end":339173,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339178,"byte_end":339245,"line_start":477,"line_end":477,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339250,"byte_end":339289,"line_start":478,"line_end":478,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339294,"byte_end":339302,"line_start":479,"line_end":479,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339307,"byte_end":339314,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5216},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341251,"byte_end":341274,"line_start":533,"line_end":533,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"fn try_for_each_concurrent<Fut, F,\nimpl Into<Option<usize>>>(Self, impl Into<Option<usize>>, F)\n-> TryForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Ok) -> Fut,\nFut: Future<Output = Result<(), Self::Error>>, Self: Sized,\nimpl Into<Option<usize>>: Into<Option<usize>>","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339613,"byte_end":339695,"line_start":490,"line_end":490,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339700,"byte_end":339774,"line_start":491,"line_end":491,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339779,"byte_end":339829,"line_start":492,"line_end":492,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339834,"byte_end":339837,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339842,"byte_end":339864,"line_start":494,"line_end":494,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339869,"byte_end":339955,"line_start":495,"line_end":495,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339960,"byte_end":340045,"line_start":496,"line_end":496,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340050,"byte_end":340078,"line_start":497,"line_end":497,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340083,"byte_end":340086,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340091,"byte_end":340166,"line_start":499,"line_end":499,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340171,"byte_end":340228,"line_start":500,"line_end":500,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340233,"byte_end":340236,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340241,"byte_end":340255,"line_start":502,"line_end":502,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340260,"byte_end":340263,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340268,"byte_end":340275,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340280,"byte_end":340321,"line_start":505,"line_end":505,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340326,"byte_end":340360,"line_start":506,"line_end":506,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340365,"byte_end":340422,"line_start":507,"line_end":507,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340427,"byte_end":340430,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340435,"byte_end":340475,"line_start":509,"line_end":509,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340480,"byte_end":340520,"line_start":510,"line_end":510,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340525,"byte_end":340566,"line_start":511,"line_end":511,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340571,"byte_end":340574,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340579,"byte_end":340630,"line_start":513,"line_end":513,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340635,"byte_end":340688,"line_start":514,"line_end":514,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340693,"byte_end":340715,"line_start":515,"line_end":515,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340720,"byte_end":340745,"line_start":516,"line_end":516,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340750,"byte_end":340812,"line_start":517,"line_end":517,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340817,"byte_end":340832,"line_start":518,"line_end":518,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340837,"byte_end":340846,"line_start":519,"line_end":519,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340851,"byte_end":340857,"line_start":520,"line_end":520,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340862,"byte_end":340865,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340870,"byte_end":340896,"line_start":522,"line_end":522,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340901,"byte_end":340968,"line_start":523,"line_end":523,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340973,"byte_end":340987,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340992,"byte_end":340995,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341000,"byte_end":341061,"line_start":526,"line_end":526,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341066,"byte_end":341094,"line_start":527,"line_end":527,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341099,"byte_end":341149,"line_start":528,"line_end":528,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341154,"byte_end":341162,"line_start":529,"line_end":529,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341167,"byte_end":341174,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341179,"byte_end":341213,"line_start":531,"line_end":531,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341218,"byte_end":341243,"line_start":532,"line_end":532,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5220},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342723,"byte_end":342734,"line_start":580,"line_end":580,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"fn try_collect<C>(Self) -> TryCollect<Self, C> where C: Default +\nExtend<Self::Ok>, Self: Sized","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341684,"byte_end":341736,"line_start":550,"line_end":550,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341741,"byte_end":341808,"line_start":551,"line_end":551,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341813,"byte_end":341816,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341821,"byte_end":341895,"line_start":553,"line_end":553,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341900,"byte_end":341981,"line_start":554,"line_end":554,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341986,"byte_end":342056,"line_start":555,"line_end":555,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342061,"byte_end":342064,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342069,"byte_end":342137,"line_start":557,"line_end":557,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342142,"byte_end":342145,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342150,"byte_end":342164,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342169,"byte_end":342172,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342177,"byte_end":342184,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342189,"byte_end":342230,"line_start":562,"line_end":562,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342235,"byte_end":342266,"line_start":563,"line_end":563,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342271,"byte_end":342309,"line_start":564,"line_end":564,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342314,"byte_end":342334,"line_start":565,"line_end":565,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342339,"byte_end":342342,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342347,"byte_end":342384,"line_start":567,"line_end":567,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342389,"byte_end":342392,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342397,"byte_end":342424,"line_start":569,"line_end":569,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342429,"byte_end":342453,"line_start":570,"line_end":570,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342458,"byte_end":342504,"line_start":571,"line_end":571,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342509,"byte_end":342518,"line_start":572,"line_end":572,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342523,"byte_end":342566,"line_start":573,"line_end":573,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342571,"byte_end":342578,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342583,"byte_end":342586,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342591,"byte_end":342654,"line_start":576,"line_end":576,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342659,"byte_end":342690,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342695,"byte_end":342703,"line_start":578,"line_end":578,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342708,"byte_end":342715,"line_start":579,"line_end":579,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5222},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344549,"byte_end":344559,"line_start":625,"line_end":625,"column_start":8,"column_end":18},"name":"try_chunks","qualname":"::stream::try_stream::TryStreamExt::try_chunks","value":"fn try_chunks(Self, usize) -> TryChunks<Self> where Self: Sized","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" An adaptor for chunking up successful items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up successful items of the stream inside a vector.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342917,"byte_end":342995,"line_start":587,"line_end":587,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343000,"byte_end":343003,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull successful items from this stream and buffer","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343008,"byte_end":343093,"line_start":589,"line_end":589,"column_start":5,"column_end":90}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343098,"byte_end":343170,"line_start":590,"line_end":590,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343175,"byte_end":343227,"line_start":591,"line_end":591,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343232,"byte_end":343235,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343240,"byte_end":343313,"line_start":593,"line_end":593,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343318,"byte_end":343392,"line_start":594,"line_end":594,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343397,"byte_end":343472,"line_start":595,"line_end":595,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343477,"byte_end":343549,"line_start":596,"line_end":596,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343554,"byte_end":343566,"line_start":597,"line_end":597,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343571,"byte_end":343574,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343579,"byte_end":343654,"line_start":599,"line_end":599,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343659,"byte_end":343716,"line_start":600,"line_end":600,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343721,"byte_end":343724,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343729,"byte_end":343760,"line_start":602,"line_end":602,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::chunks`](crate::stream::StreamExt::chunks) but exits","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343765,"byte_end":343834,"line_start":603,"line_end":603,"column_start":5,"column_end":74}},{"value":"/ early if an error occurs.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343839,"byte_end":343868,"line_start":604,"line_end":604,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343873,"byte_end":343876,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343881,"byte_end":343895,"line_start":606,"line_end":606,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343900,"byte_end":343903,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343908,"byte_end":343915,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343920,"byte_end":343961,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryChunksError, TryStreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343966,"byte_end":344028,"line_start":610,"line_end":610,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344033,"byte_end":344036,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Err(4), Ok(5), Ok(6)]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344041,"byte_end":344132,"line_start":612,"line_end":612,"column_start":5,"column_end":96}},{"value":"/ let mut stream = stream.try_chunks(2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344137,"byte_end":344179,"line_start":613,"line_end":613,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344184,"byte_end":344187,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(vec![1, 2])));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344192,"byte_end":344254,"line_start":615,"line_end":615,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(stream.try_next().await, Err(TryChunksError(vec![3], 4)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344259,"byte_end":344332,"line_start":616,"line_end":616,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(vec![5, 6])));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344337,"byte_end":344399,"line_start":617,"line_end":617,"column_start":5,"column_end":67}},{"value":"/ # })","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344404,"byte_end":344412,"line_start":618,"line_end":618,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344417,"byte_end":344424,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344429,"byte_end":344432,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344437,"byte_end":344449,"line_start":621,"line_end":621,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344454,"byte_end":344457,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344462,"byte_end":344511,"line_start":623,"line_end":623,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344516,"byte_end":344541,"line_start":624,"line_end":624,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5223},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":346082,"byte_end":346092,"line_start":664,"line_end":664,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: for<'_> FnMut(&'_ Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344794,"byte_end":344867,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344872,"byte_end":344906,"line_start":635,"line_end":635,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344911,"byte_end":344914,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344919,"byte_end":344994,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344999,"byte_end":345074,"line_start":638,"line_end":638,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":345079,"byte_end":345152,"line_start":639,"line_end":639,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":345157,"byte_end":345228,"line_start":640,"line_end":640,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":345233,"byte_end":345283,"line_start":641,"line_end":641,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":345288,"byte_end":345291,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":345296,"byte_end":345367,"line_start":643,"line_end":643,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":345372,"byte_end":345375,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":345380,"byte_end":345456,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":345461,"byte_end":345531,"line_start":646,"line_end":646,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":345536,"byte_end":345561,"line_start":647,"line_end":647,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":345566,"byte_end":345569,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":345574,"byte_end":345588,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":345593,"byte_end":345600,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":345605,"byte_end":345646,"line_start":651,"line_end":651,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":345651,"byte_end":345675,"line_start":652,"line_end":652,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":345680,"byte_end":345737,"line_start":653,"line_end":653,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":345742,"byte_end":345745,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":345750,"byte_end":345830,"line_start":655,"line_end":655,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":345835,"byte_end":345878,"line_start":656,"line_end":656,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":345883,"byte_end":345916,"line_start":657,"line_end":657,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":345921,"byte_end":345928,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":345933,"byte_end":345936,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":345941,"byte_end":345989,"line_start":660,"line_end":660,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":345994,"byte_end":346049,"line_start":661,"line_end":661,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":346054,"byte_end":346062,"line_start":662,"line_end":662,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":346067,"byte_end":346074,"line_start":663,"line_end":663,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5226},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":347719,"byte_end":347733,"line_start":705,"line_end":705,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Self::Error>, F: FnMut(Self::Ok) ->\nFut, Self: Sized","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":346343,"byte_end":346405,"line_start":673,"line_end":673,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":346410,"byte_end":346478,"line_start":674,"line_end":674,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":346483,"byte_end":346517,"line_start":675,"line_end":675,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":346522,"byte_end":346525,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":346530,"byte_end":346605,"line_start":677,"line_end":677,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":346610,"byte_end":346685,"line_start":678,"line_end":678,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":346690,"byte_end":346766,"line_start":679,"line_end":679,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":346771,"byte_end":346836,"line_start":680,"line_end":680,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":346841,"byte_end":346844,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":346849,"byte_end":346920,"line_start":682,"line_end":682,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":346925,"byte_end":346928,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":346933,"byte_end":347009,"line_start":684,"line_end":684,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":347014,"byte_end":347088,"line_start":685,"line_end":685,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":347093,"byte_end":347118,"line_start":686,"line_end":686,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":347123,"byte_end":347126,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":347131,"byte_end":347145,"line_start":688,"line_end":688,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":347150,"byte_end":347157,"line_start":689,"line_end":689,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":347162,"byte_end":347203,"line_start":690,"line_end":690,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":347208,"byte_end":347265,"line_start":691,"line_end":691,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":347270,"byte_end":347295,"line_start":692,"line_end":692,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":347300,"byte_end":347303,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":347308,"byte_end":347378,"line_start":694,"line_end":694,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":347383,"byte_end":347438,"line_start":695,"line_end":695,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":347443,"byte_end":347505,"line_start":696,"line_end":696,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":347510,"byte_end":347525,"line_start":697,"line_end":697,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":347530,"byte_end":347537,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":347542,"byte_end":347545,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":347550,"byte_end":347571,"line_start":700,"line_end":700,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":347576,"byte_end":347625,"line_start":701,"line_end":701,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":347630,"byte_end":347686,"line_start":702,"line_end":702,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":347691,"byte_end":347699,"line_start":703,"line_end":703,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":347704,"byte_end":347711,"line_start":704,"line_end":704,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5230},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":349629,"byte_end":349640,"line_start":756,"line_end":756,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348010,"byte_end":348075,"line_start":714,"line_end":714,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348080,"byte_end":348083,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348088,"byte_end":348161,"line_start":716,"line_end":716,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348166,"byte_end":348239,"line_start":717,"line_end":717,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348244,"byte_end":348317,"line_start":718,"line_end":718,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348322,"byte_end":348392,"line_start":719,"line_end":719,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348397,"byte_end":348400,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348405,"byte_end":348419,"line_start":721,"line_end":721,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348424,"byte_end":348427,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348432,"byte_end":348439,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348444,"byte_end":348485,"line_start":724,"line_end":724,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348490,"byte_end":348521,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348526,"byte_end":348577,"line_start":726,"line_end":726,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348582,"byte_end":348602,"line_start":727,"line_end":727,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348607,"byte_end":348610,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348615,"byte_end":348654,"line_start":729,"line_end":729,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348659,"byte_end":348698,"line_start":730,"line_end":730,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348703,"byte_end":348742,"line_start":731,"line_end":731,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348747,"byte_end":348750,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348755,"byte_end":348782,"line_start":733,"line_end":733,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348787,"byte_end":348830,"line_start":734,"line_end":734,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348835,"byte_end":348842,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348847,"byte_end":348874,"line_start":736,"line_end":736,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348879,"byte_end":348922,"line_start":737,"line_end":737,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348927,"byte_end":348971,"line_start":738,"line_end":738,"column_start":5,"column_end":49}},{"value":"/     tx2.unbounded_send(Ok(4)).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348976,"byte_end":349019,"line_start":739,"line_end":739,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":349024,"byte_end":349031,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":349036,"byte_end":349063,"line_start":741,"line_end":741,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":349068,"byte_end":349113,"line_start":742,"line_end":742,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":349118,"byte_end":349163,"line_start":743,"line_end":743,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(5)).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":349168,"byte_end":349212,"line_start":744,"line_end":744,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":349217,"byte_end":349224,"line_start":745,"line_end":745,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":349229,"byte_end":349232,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":349237,"byte_end":349276,"line_start":747,"line_end":747,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":349281,"byte_end":349330,"line_start":748,"line_end":748,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":349335,"byte_end":349384,"line_start":749,"line_end":749,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":349389,"byte_end":349439,"line_start":750,"line_end":750,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(4)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":349444,"byte_end":349493,"line_start":751,"line_end":751,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(5)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":349498,"byte_end":349548,"line_start":752,"line_end":752,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":349553,"byte_end":349595,"line_start":753,"line_end":753,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":349600,"byte_end":349609,"line_start":754,"line_end":754,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":349614,"byte_end":349621,"line_start":755,"line_end":755,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5231},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":351232,"byte_end":351240,"line_start":795,"line_end":795,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = Self::Error>,\nSelf: Sized","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":349945,"byte_end":350015,"line_start":767,"line_end":767,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350020,"byte_end":350080,"line_start":768,"line_end":768,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350085,"byte_end":350088,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350093,"byte_end":350163,"line_start":770,"line_end":770,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350168,"byte_end":350244,"line_start":771,"line_end":771,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350249,"byte_end":350325,"line_start":772,"line_end":772,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350330,"byte_end":350400,"line_start":773,"line_end":773,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350405,"byte_end":350431,"line_start":774,"line_end":774,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350436,"byte_end":350439,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350444,"byte_end":350524,"line_start":776,"line_end":776,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350529,"byte_end":350598,"line_start":777,"line_end":777,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350603,"byte_end":350624,"line_start":778,"line_end":778,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350629,"byte_end":350632,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350637,"byte_end":350651,"line_start":780,"line_end":780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350656,"byte_end":350659,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350664,"byte_end":350671,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350676,"byte_end":350717,"line_start":783,"line_end":783,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350722,"byte_end":350768,"line_start":784,"line_end":784,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350773,"byte_end":350776,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350781,"byte_end":350850,"line_start":786,"line_end":786,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350855,"byte_end":350932,"line_start":787,"line_end":787,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350937,"byte_end":350970,"line_start":788,"line_end":788,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350975,"byte_end":350978,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350983,"byte_end":351069,"line_start":790,"line_end":790,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":351074,"byte_end":351160,"line_start":791,"line_end":791,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":351165,"byte_end":351199,"line_start":792,"line_end":792,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":351204,"byte_end":351212,"line_start":793,"line_end":793,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":351217,"byte_end":351224,"line_start":794,"line_end":794,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5235},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352766,"byte_end":352776,"line_start":838,"line_end":838,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":351520,"byte_end":351582,"line_start":804,"line_end":804,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":351587,"byte_end":351662,"line_start":805,"line_end":805,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":351667,"byte_end":351670,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":351675,"byte_end":351746,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":351751,"byte_end":351827,"line_start":808,"line_end":808,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":351832,"byte_end":351871,"line_start":809,"line_end":809,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":351876,"byte_end":351879,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":351884,"byte_end":351970,"line_start":811,"line_end":811,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":351975,"byte_end":351978,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":351983,"byte_end":352067,"line_start":813,"line_end":813,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352072,"byte_end":352128,"line_start":814,"line_end":814,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352133,"byte_end":352136,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352141,"byte_end":352155,"line_start":816,"line_end":816,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352160,"byte_end":352163,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352168,"byte_end":352175,"line_start":818,"line_end":818,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352180,"byte_end":352221,"line_start":819,"line_end":819,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352226,"byte_end":352257,"line_start":820,"line_end":820,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352262,"byte_end":352300,"line_start":821,"line_end":821,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352305,"byte_end":352325,"line_start":822,"line_end":822,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352330,"byte_end":352333,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352338,"byte_end":352399,"line_start":824,"line_end":824,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352404,"byte_end":352407,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352412,"byte_end":352439,"line_start":826,"line_end":826,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352444,"byte_end":352475,"line_start":827,"line_end":827,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352480,"byte_end":352506,"line_start":828,"line_end":828,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352511,"byte_end":352581,"line_start":829,"line_end":829,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352586,"byte_end":352595,"line_start":830,"line_end":830,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352600,"byte_end":352607,"line_start":831,"line_end":831,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352612,"byte_end":352615,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352620,"byte_end":352659,"line_start":833,"line_end":833,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352664,"byte_end":352667,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352672,"byte_end":352732,"line_start":835,"line_end":835,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352737,"byte_end":352746,"line_start":836,"line_end":836,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352751,"byte_end":352758,"line_start":837,"line_end":837,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5236},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355498,"byte_end":355518,"line_start":905,"line_end":905,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"fn try_buffer_unordered(Self, usize) -> TryBufferUnordered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently (unordered).","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently (unordered).","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353030,"byte_end":353108,"line_start":846,"line_end":846,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353113,"byte_end":353116,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353121,"byte_end":353226,"line_start":848,"line_end":848,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353231,"byte_end":353274,"line_start":849,"line_end":849,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353279,"byte_end":353282,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353287,"byte_end":353355,"line_start":851,"line_end":851,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353360,"byte_end":353433,"line_start":852,"line_end":852,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353438,"byte_end":353494,"line_start":853,"line_end":853,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353499,"byte_end":353502,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353507,"byte_end":353582,"line_start":855,"line_end":855,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353587,"byte_end":353660,"line_start":856,"line_end":856,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353665,"byte_end":353730,"line_start":857,"line_end":857,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353735,"byte_end":353738,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353743,"byte_end":353818,"line_start":859,"line_end":859,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353823,"byte_end":353880,"line_start":860,"line_end":860,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353885,"byte_end":353888,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353893,"byte_end":353907,"line_start":862,"line_end":862,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353912,"byte_end":353915,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353920,"byte_end":353972,"line_start":864,"line_end":864,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353977,"byte_end":353984,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353989,"byte_end":354030,"line_start":866,"line_end":866,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354035,"byte_end":354069,"line_start":867,"line_end":867,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354074,"byte_end":354131,"line_start":868,"line_end":868,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354136,"byte_end":354139,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354144,"byte_end":354194,"line_start":870,"line_end":870,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354199,"byte_end":354249,"line_start":871,"line_end":871,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354254,"byte_end":354257,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354262,"byte_end":354337,"line_start":873,"line_end":873,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354342,"byte_end":354345,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354350,"byte_end":354416,"line_start":875,"line_end":875,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354421,"byte_end":354424,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354429,"byte_end":354454,"line_start":877,"line_end":877,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354459,"byte_end":354513,"line_start":878,"line_end":878,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354518,"byte_end":354521,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354526,"byte_end":354551,"line_start":880,"line_end":880,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354556,"byte_end":354610,"line_start":881,"line_end":881,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354615,"byte_end":354618,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354623,"byte_end":354667,"line_start":883,"line_end":883,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354672,"byte_end":354708,"line_start":884,"line_end":884,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354713,"byte_end":354720,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354725,"byte_end":354728,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354733,"byte_end":354793,"line_start":887,"line_end":887,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354798,"byte_end":354805,"line_start":888,"line_end":888,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354810,"byte_end":354851,"line_start":889,"line_end":889,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354856,"byte_end":354887,"line_start":890,"line_end":890,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354892,"byte_end":354943,"line_start":891,"line_end":891,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354948,"byte_end":354951,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354956,"byte_end":355010,"line_start":893,"line_end":893,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355015,"byte_end":355081,"line_start":894,"line_end":894,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355086,"byte_end":355089,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355094,"byte_end":355143,"line_start":896,"line_end":896,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355148,"byte_end":355202,"line_start":897,"line_end":897,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355207,"byte_end":355210,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355215,"byte_end":355268,"line_start":899,"line_end":899,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355273,"byte_end":355345,"line_start":900,"line_end":900,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355350,"byte_end":355409,"line_start":901,"line_end":901,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355414,"byte_end":355421,"line_start":902,"line_end":902,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355426,"byte_end":355460,"line_start":903,"line_end":903,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355465,"byte_end":355490,"line_start":904,"line_end":904,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5237},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358529,"byte_end":358541,"line_start":981,"line_end":981,"column_start":8,"column_end":20},"name":"try_buffered","qualname":"::stream::try_stream::TryStreamExt::try_buffered","value":"fn try_buffered(Self, usize) -> TryBuffered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355795,"byte_end":355861,"line_start":915,"line_end":915,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355866,"byte_end":355869,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355874,"byte_end":355979,"line_start":917,"line_end":917,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355984,"byte_end":356027,"line_start":918,"line_end":918,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356032,"byte_end":356035,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356040,"byte_end":356108,"line_start":920,"line_end":920,"column_start":5,"column_end":73}},{"value":"/ outputs in the same order as the underlying stream. If the underlying stream returns an error, it will","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356113,"byte_end":356219,"line_start":921,"line_end":921,"column_start":5,"column_end":111}},{"value":"/ be immediately propagated.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356224,"byte_end":356254,"line_start":922,"line_end":922,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356259,"byte_end":356262,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356267,"byte_end":356342,"line_start":924,"line_end":924,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356347,"byte_end":356420,"line_start":925,"line_end":925,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356425,"byte_end":356490,"line_start":926,"line_end":926,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356495,"byte_end":356498,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356503,"byte_end":356578,"line_start":928,"line_end":928,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356583,"byte_end":356640,"line_start":929,"line_end":929,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356645,"byte_end":356648,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356653,"byte_end":356667,"line_start":931,"line_end":931,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356672,"byte_end":356675,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of addition:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356680,"byte_end":356730,"line_start":933,"line_end":933,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356735,"byte_end":356742,"line_start":934,"line_end":934,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356747,"byte_end":356788,"line_start":935,"line_end":935,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356793,"byte_end":356827,"line_start":936,"line_end":936,"column_start":5,"column_end":39}},{"value":"/ use futures::future::lazy;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356832,"byte_end":356862,"line_start":937,"line_end":937,"column_start":5,"column_end":35}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356867,"byte_end":356924,"line_start":938,"line_end":938,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356929,"byte_end":356932,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356937,"byte_end":356987,"line_start":940,"line_end":940,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356992,"byte_end":357042,"line_start":941,"line_end":941,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357047,"byte_end":357050,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = lazy(move |cx| {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357055,"byte_end":357094,"line_start":943,"line_end":943,"column_start":5,"column_end":44}},{"value":"/     let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357099,"byte_end":357178,"line_start":944,"line_end":944,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357183,"byte_end":357186,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/     let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357191,"byte_end":357253,"line_start":946,"line_end":946,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357258,"byte_end":357261,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357266,"byte_end":357329,"line_start":948,"line_end":948,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357334,"byte_end":357337,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/     send_two.send(2i32)?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357342,"byte_end":357371,"line_start":950,"line_end":950,"column_start":5,"column_end":34}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357376,"byte_end":357439,"line_start":951,"line_end":951,"column_start":5,"column_end":68}},{"value":"/     Ok::<_, i32>(buffered)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357444,"byte_end":357474,"line_start":952,"line_end":952,"column_start":5,"column_end":35}},{"value":"/ }).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357479,"byte_end":357493,"line_start":953,"line_end":953,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357498,"byte_end":357501,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357506,"byte_end":357531,"line_start":955,"line_end":955,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357536,"byte_end":357590,"line_start":956,"line_end":956,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357595,"byte_end":357649,"line_start":957,"line_end":957,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357654,"byte_end":357657,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357662,"byte_end":357706,"line_start":959,"line_end":959,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357711,"byte_end":357747,"line_start":960,"line_end":960,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357752,"byte_end":357759,"line_start":961,"line_end":961,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357764,"byte_end":357767,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357772,"byte_end":357832,"line_start":963,"line_end":963,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357837,"byte_end":357844,"line_start":964,"line_end":964,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357849,"byte_end":357890,"line_start":965,"line_end":965,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357895,"byte_end":357926,"line_start":966,"line_end":966,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357931,"byte_end":357982,"line_start":967,"line_end":967,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357987,"byte_end":357990,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357995,"byte_end":358049,"line_start":969,"line_end":969,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358054,"byte_end":358112,"line_start":970,"line_end":970,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358117,"byte_end":358120,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358125,"byte_end":358174,"line_start":972,"line_end":972,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358179,"byte_end":358233,"line_start":973,"line_end":973,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358238,"byte_end":358241,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358246,"byte_end":358299,"line_start":975,"line_end":975,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358304,"byte_end":358376,"line_start":976,"line_end":976,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358381,"byte_end":358440,"line_start":977,"line_end":977,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358445,"byte_end":358452,"line_start":978,"line_end":978,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358457,"byte_end":358491,"line_start":979,"line_end":979,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358496,"byte_end":358521,"line_start":980,"line_end":980,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5238},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358996,"byte_end":359015,"line_start":995,"line_end":995,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"fn try_poll_next_unpin<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358888,"byte_end":358966,"line_start":993,"line_end":993,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358971,"byte_end":358988,"line_start":994,"line_end":994,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5239},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360970,"byte_end":360985,"line_start":1057,"line_end":1057,"column_start":8,"column_end":23},"name":"into_async_read","qualname":"::stream::try_stream::TryStreamExt::into_async_read","value":"fn into_async_read(Self) -> IntoAsyncRead<Self> where Self: Sized +\nTryStreamExt<Error = std::io::Error>, Self::Ok: AsRef<[u8]>","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" Adapter that converts this stream into an [`AsyncBufRead`](crate::io::AsyncBufRead).","sig":null,"attributes":[{"value":"/ Adapter that converts this stream into an [`AsyncBufRead`](crate::io::AsyncBufRead).","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360154,"byte_end":360242,"line_start":1034,"line_end":1034,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360247,"byte_end":360250,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360255,"byte_end":360319,"line_start":1036,"line_end":1036,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360324,"byte_end":360381,"line_start":1037,"line_end":1037,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360386,"byte_end":360389,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360394,"byte_end":360408,"line_start":1039,"line_end":1039,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360413,"byte_end":360416,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360421,"byte_end":360428,"line_start":1041,"line_end":1041,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360433,"byte_end":360474,"line_start":1042,"line_end":1042,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360479,"byte_end":360525,"line_start":1043,"line_end":1043,"column_start":5,"column_end":51}},{"value":"/ use futures::io::AsyncReadExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360530,"byte_end":360564,"line_start":1044,"line_end":1044,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360569,"byte_end":360572,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter([Ok(vec![1, 2, 3]), Ok(vec![4, 5])]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360577,"byte_end":360644,"line_start":1046,"line_end":1046,"column_start":5,"column_end":72}},{"value":"/ let mut reader = stream.into_async_read();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360649,"byte_end":360695,"line_start":1047,"line_end":1047,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360700,"byte_end":360703,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360708,"byte_end":360737,"line_start":1049,"line_end":1049,"column_start":5,"column_end":34}},{"value":"/ reader.read_to_end(&mut buf).await.unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360742,"byte_end":360790,"line_start":1050,"line_end":1050,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(buf, [1, 2, 3, 4, 5]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360795,"byte_end":360832,"line_start":1051,"line_end":1051,"column_start":5,"column_end":42}},{"value":"/ # })","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360837,"byte_end":360845,"line_start":1052,"line_end":1052,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360850,"byte_end":360857,"line_start":1053,"line_end":1053,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"io\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360862,"byte_end":360884,"line_start":1054,"line_end":1054,"column_start":5,"column_end":27}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360939,"byte_end":360962,"line_start":1056,"line_end":1056,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":14974},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":415245,"byte_end":415249,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":14976}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":415123,"byte_end":415160,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":415185,"byte_end":415233,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5343},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":415767,"byte_end":415771,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":415301,"byte_end":415365,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":415366,"byte_end":415394,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":415395,"byte_end":415398,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":415399,"byte_end":415472,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":415473,"byte_end":415528,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":415529,"byte_end":415532,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":415533,"byte_end":415540,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":415541,"byte_end":415582,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":415583,"byte_end":415626,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":415627,"byte_end":415630,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":415631,"byte_end":415675,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":415676,"byte_end":415741,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":415742,"byte_end":415751,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":415752,"byte_end":415759,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5348},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":415981,"byte_end":415990,"line_start":42,"line_end":42,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Iter<I> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<I::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5349},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":416117,"byte_end":416126,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter<I> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14983},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":416462,"byte_end":416468,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":14985}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":416338,"byte_end":416377,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":416402,"byte_end":416450,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5378},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":416992,"byte_end":416998,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":416490,"byte_end":416550,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":416551,"byte_end":416554,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":416555,"byte_end":416622,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":416623,"byte_end":416695,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":416696,"byte_end":416753,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":416754,"byte_end":416757,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":416758,"byte_end":416765,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":416766,"byte_end":416807,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":416808,"byte_end":416851,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":416852,"byte_end":416855,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":416856,"byte_end":416891,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":416892,"byte_end":416966,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":416967,"byte_end":416976,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":416977,"byte_end":416984,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5385},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":417202,"byte_end":417211,"line_start":42,"line_end":42,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Repeat<T> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5386},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":417344,"byte_end":417353,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Repeat<T> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5389},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":417496,"byte_end":417509,"line_start":55,"line_end":55,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Repeat<T> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14992},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":417989,"byte_end":417999,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":14994}],"decl_id":null,"docs":" An stream that repeats elements of type `A` endlessly by\n applying the provided closure `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ An stream that repeats elements of type `A` endlessly by","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":417687,"byte_end":417747,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ applying the provided closure `F: FnMut() -> A`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":417748,"byte_end":417800,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":417801,"byte_end":417804,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`repeat_with()`] function.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":417805,"byte_end":417868,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":417869,"byte_end":417904,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":417929,"byte_end":417977,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5425},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":418157,"byte_end":418166,"line_start":22,"line_end":22,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<RepeatWith<F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5426},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":418308,"byte_end":418317,"line_start":26,"line_end":26,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<RepeatWith<F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5430},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":418461,"byte_end":418474,"line_start":32,"line_end":32,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<RepeatWith<F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5431},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":420287,"byte_end":420298,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"fn repeat_with<A, F>(F) -> RepeatWith<F> where F: FnMut() -> A","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by\n applying the provided closure, the repeater, `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":418515,"byte_end":418586,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ applying the provided closure, the repeater, `F: FnMut() -> A`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":418587,"byte_end":418654,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":418655,"byte_end":418658,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The `repeat_with()` function calls the repeater over and over again.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":418659,"byte_end":418731,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":418732,"byte_end":418735,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Infinite stream like `repeat_with()` are often used with adapters like","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":418736,"byte_end":418810,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ [`stream.take()`], in order to make them finite.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":418811,"byte_end":418863,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":418864,"byte_end":418867,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the element type of the stream you need implements [`Clone`], and","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":418868,"byte_end":418940,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ it is OK to keep the source element in memory, you should instead use","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":418941,"byte_end":419014,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ the [`stream.repeat()`] function.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419015,"byte_end":419052,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419053,"byte_end":419056,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419057,"byte_end":419071,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419072,"byte_end":419075,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419076,"byte_end":419092,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419093,"byte_end":419096,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419097,"byte_end":419104,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419105,"byte_end":419146,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419147,"byte_end":419190,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419191,"byte_end":419194,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // let's assume we have some value of a type that is not `Clone`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419195,"byte_end":419263,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ // or which don't want to have in memory just yet because it is expensive:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419264,"byte_end":419342,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419343,"byte_end":419374,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ struct Expensive;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419375,"byte_end":419396,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419397,"byte_end":419400,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // a particular value forever:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419401,"byte_end":419435,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/ let mut things = stream::repeat_with(|| Expensive);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419436,"byte_end":419491,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419492,"byte_end":419495,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419496,"byte_end":419549,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419550,"byte_end":419603,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419604,"byte_end":419657,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419658,"byte_end":419667,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419668,"byte_end":419675,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419676,"byte_end":419679,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Using mutation and going finite:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419680,"byte_end":419716,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419717,"byte_end":419720,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419721,"byte_end":419732,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419733,"byte_end":419774,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419775,"byte_end":419818,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419819,"byte_end":419822,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // From the zeroth to the third power of two:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419823,"byte_end":419872,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ let mut curr = 1;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419873,"byte_end":419894,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/ let mut pow2 = stream::repeat_with(|| { let tmp = curr; curr *= 2; tmp })","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419895,"byte_end":419972,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/                     .take(4);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":419973,"byte_end":420006,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":420007,"byte_end":420010,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(1), pow2.next().await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":420011,"byte_end":420054,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(2), pow2.next().await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":420055,"byte_end":420098,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(4), pow2.next().await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":420099,"byte_end":420142,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(8), pow2.next().await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":420143,"byte_end":420186,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":420187,"byte_end":420190,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // ... and now we're done","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":420191,"byte_end":420220,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(None, pow2.next().await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":420221,"byte_end":420261,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":420262,"byte_end":420271,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":420272,"byte_end":420279,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15001},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":420689,"byte_end":420694,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":15003}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":420573,"byte_end":420611,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":420629,"byte_end":420677,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5465},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":420863,"byte_end":420868,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":420733,"byte_end":420781,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":420782,"byte_end":420785,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":420786,"byte_end":420855,"line_start":16,"line_end":16,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":5471},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":421023,"byte_end":421036,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Empty<T> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5475},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":421133,"byte_end":421142,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Empty<T> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5476},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":421256,"byte_end":421265,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Empty<T> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5479},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":421367,"byte_end":421372,"line_start":42,"line_end":42,"column_start":8,"column_end":13},"name":"clone","qualname":"<Empty<T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5517},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":421953,"byte_end":421957,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"fn once<Fut>(Fut) -> Once<Fut> where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":421646,"byte_end":421687,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":421688,"byte_end":421691,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":421692,"byte_end":421699,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":421700,"byte_end":421741,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":421742,"byte_end":421785,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":421786,"byte_end":421789,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":421790,"byte_end":421834,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":421835,"byte_end":421890,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":421891,"byte_end":421927,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":421928,"byte_end":421937,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":421938,"byte_end":421945,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15007},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":422219,"byte_end":422223,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":15009}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5525},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":422475,"byte_end":422484,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Once<Fut> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5526},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":422835,"byte_end":422844,"line_start":54,"line_end":54,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Once<Fut> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5529},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":423054,"byte_end":423067,"line_start":64,"line_end":64,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Once<Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15043},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":423399,"byte_end":423406,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":15045}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":423279,"byte_end":423321,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":423339,"byte_end":423387,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5561},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":423582,"byte_end":423589,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":423450,"byte_end":423504,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":423505,"byte_end":423508,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":423509,"byte_end":423574,"line_start":16,"line_end":16,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":5567},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":423757,"byte_end":423770,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Pending<T> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5571},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":423869,"byte_end":423878,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Pending<T> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5572},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":423988,"byte_end":423997,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Pending<T> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5575},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":424101,"byte_end":424106,"line_start":42,"line_end":42,"column_start":8,"column_end":13},"name":"clone","qualname":"<Pending<T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5603},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":424432,"byte_end":424438,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":5605}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":424331,"byte_end":424371,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":424372,"byte_end":424420,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5610},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":424531,"byte_end":424534,"line_start":18,"line_end":18,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PollFn<F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5611},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":425126,"byte_end":425133,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"fn poll_fn<T, F>(F) -> PollFn<F> where F: for<'_, '_> FnMut(&'_ mut Context)\n-> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":424638,"byte_end":424711,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":424712,"byte_end":424715,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":424716,"byte_end":424775,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":424776,"byte_end":424779,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":424780,"byte_end":424794,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":424795,"byte_end":424798,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":424799,"byte_end":424806,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":424807,"byte_end":424840,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":424841,"byte_end":424869,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":424870,"byte_end":424873,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":424874,"byte_end":424903,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":424904,"byte_end":424907,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":424908,"byte_end":424972,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":424973,"byte_end":425026,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":425027,"byte_end":425048,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":425049,"byte_end":425102,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":425103,"byte_end":425110,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":425111,"byte_end":425118,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5618},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":425379,"byte_end":425388,"line_start":54,"line_end":54,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<PollFn<F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<T>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15049},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":425894,"byte_end":425907,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::stream::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":15051}],"decl_id":null,"docs":" Stream for the [poll_immediate](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5647},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":426068,"byte_end":426077,"line_start":24,"line_end":24,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<PollImmediate<S> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5648},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":426749,"byte_end":426758,"line_start":42,"line_end":42,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<PollImmediate<S> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5651},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":426937,"byte_end":426950,"line_start":48,"line_end":48,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<PollImmediate<S> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5652},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":427888,"byte_end":427902,"line_start":78,"line_end":78,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::stream::poll_immediate::poll_immediate","value":"fn poll_immediate<S>(S) -> PollImmediate<S> where S: Stream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","sig":null,"attributes":[{"value":"/ Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":427007,"byte_end":427120,"line_start":53,"line_end":53,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":427121,"byte_end":427124,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This is useful when immediacy is more important than waiting for the next item to be ready.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":427125,"byte_end":427220,"line_start":55,"line_end":55,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":427221,"byte_end":427224,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":427225,"byte_end":427239,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":427240,"byte_end":427243,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":427244,"byte_end":427251,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":427252,"byte_end":427293,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":427294,"byte_end":427337,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":427338,"byte_end":427366,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":427367,"byte_end":427370,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let mut r = stream::poll_immediate(Box::pin(stream::iter(1_u32..3)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":427371,"byte_end":427444,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(1)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":427445,"byte_end":427498,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(2)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":427499,"byte_end":427552,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, None);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":427553,"byte_end":427590,"line_start":67,"line_end":67,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":427591,"byte_end":427594,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let mut p = stream::poll_immediate(Box::pin(stream::once(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":427595,"byte_end":427663,"line_start":69,"line_end":69,"column_start":1,"column_end":69}},{"value":"/     futures::pending!();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":427664,"byte_end":427692,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/     42_u8","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":427693,"byte_end":427706,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/ })));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":427707,"byte_end":427716,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Pending));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":427717,"byte_end":427769,"line_start":73,"line_end":73,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Ready(42)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":427770,"byte_end":427824,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(p.next().await, None);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":427825,"byte_end":427862,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":427863,"byte_end":427872,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":427873,"byte_end":427880,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15088},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":428435,"byte_end":428441,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":15091}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5695},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":429467,"byte_end":429473,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":428563,"byte_end":428631,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":428632,"byte_end":428708,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":428709,"byte_end":428757,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":428758,"byte_end":428761,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":428762,"byte_end":428837,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":428838,"byte_end":428907,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":428908,"byte_end":428935,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":428936,"byte_end":428939,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":428940,"byte_end":429011,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":429012,"byte_end":429032,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":429033,"byte_end":429036,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":429037,"byte_end":429052,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":429053,"byte_end":429056,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":429057,"byte_end":429068,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":429069,"byte_end":429110,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select, StreamExt };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":429111,"byte_end":429166,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":429167,"byte_end":429170,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":429171,"byte_end":429196,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":429197,"byte_end":429223,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":429224,"byte_end":429227,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut out = select(left, right);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":429228,"byte_end":429266,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":429267,"byte_end":429270,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":429271,"byte_end":429292,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":429293,"byte_end":429329,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":429330,"byte_end":429382,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":429383,"byte_end":429435,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":429436,"byte_end":429441,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":429442,"byte_end":429451,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":429452,"byte_end":429459,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5702},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":429942,"byte_end":429949,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> (&'_ St1, &'_ St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":429834,"byte_end":429908,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":429913,"byte_end":429930,"line_start":63,"line_end":63,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5703},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":430277,"byte_end":430284,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> (&'_ mut St1, &'_ mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":430015,"byte_end":430083,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":430088,"byte_end":430119,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":430124,"byte_end":430127,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":430132,"byte_end":430205,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":430210,"byte_end":430265,"line_start":72,"line_end":72,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5704},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":430631,"byte_end":430642,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"fn get_pin_mut<'_>(Pin<&'_ mut Self>) -> (Pin<&'_ mut St1>, Pin<&'_ mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":430362,"byte_end":430437,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":430442,"byte_end":430473,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":430478,"byte_end":430481,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":430486,"byte_end":430559,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":430564,"byte_end":430619,"line_start":81,"line_end":81,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5705},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":431016,"byte_end":431026,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":430780,"byte_end":430843,"line_start":87,"line_end":87,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":430848,"byte_end":430851,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":430856,"byte_end":430928,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":430933,"byte_end":431004,"line_start":90,"line_end":90,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5709},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":431205,"byte_end":431218,"line_start":101,"line_end":101,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Select<St1, St2> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5714},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":431418,"byte_end":431427,"line_start":113,"line_end":113,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Select<St1, St2> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<St1::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":15134},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":431930,"byte_end":431934,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Left","qualname":"::stream::select_with_strategy::PollNext::Left","value":"PollNext::Left","parent":{"krate":0,"index":15133},"children":[],"decl_id":null,"docs":" Poll the first stream.\n","sig":null,"attributes":[{"value":"/ Poll the first stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":431899,"byte_end":431925,"line_start":10,"line_end":10,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15136},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":431972,"byte_end":431977,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"name":"Right","qualname":"::stream::select_with_strategy::PollNext::Right","value":"PollNext::Right","parent":{"krate":0,"index":15133},"children":[],"decl_id":null,"docs":" Poll the second stream.\n","sig":null,"attributes":[{"value":"/ Poll the second stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":431940,"byte_end":431967,"line_start":12,"line_end":12,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":15133},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":431884,"byte_end":431892,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"PollNext","qualname":"::stream::select_with_strategy::PollNext","value":"enum PollNext { Left, Right, }","parent":null,"children":[{"krate":0,"index":15134},{"krate":0,"index":15136}],"decl_id":null,"docs":" Type to tell [`SelectWithStrategy`] which stream to poll next.\n","sig":null,"attributes":[{"value":"/ Type to tell [`SelectWithStrategy`] which stream to poll next.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":431757,"byte_end":431823,"line_start":7,"line_end":7,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5751},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":432058,"byte_end":432064,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"toggle","qualname":"<PollNext>::toggle","value":"fn toggle<'_>(&'_ mut Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Toggle the value and return the old one.\n","sig":null,"attributes":[{"value":"/ Toggle the value and return the old one.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":432002,"byte_end":432046,"line_start":17,"line_end":17,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5754},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":432363,"byte_end":432370,"line_start":33,"line_end":33,"column_start":8,"column_end":15},"name":"default","qualname":"<PollNext as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15152},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":433288,"byte_end":433306,"line_start":67,"line_end":67,"column_start":16,"column_end":34},"name":"SelectWithStrategy","qualname":"::stream::select_with_strategy::SelectWithStrategy","value":"SelectWithStrategy {  }","parent":null,"children":[{"krate":0,"index":15157},{"krate":0,"index":15158},{"krate":0,"index":15159},{"krate":0,"index":15160},{"krate":0,"index":15161}],"decl_id":null,"docs":" Stream for the [`select_with_strategy()`] function. See function docs for details.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5766},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":435625,"byte_end":435645,"line_start":139,"line_end":139,"column_start":8,"column_end":28},"name":"select_with_strategy","qualname":"::stream::select_with_strategy::select_with_strategy","value":"fn select_with_strategy<St1, St2, Clos, State>(St1, St2, Clos)\n-> SelectWithStrategy<St1, St2, Clos, State> where St1: Stream,\nSt2: Stream<Item = St1::Item>, Clos: for<'_> FnMut(&'_ mut State) -> PollNext,\nState: Default","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. You provide a\n closure to tell [`SelectWithStrategy`] which stream to poll. The closure can\n store state on `SelectWithStrategy` to which it will receive a `&mut` on every\n invocation. This allows basing the strategy on prior choices.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. You provide a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":433496,"byte_end":433573,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/ closure to tell [`SelectWithStrategy`] which stream to poll. The closure can","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":433574,"byte_end":433654,"line_start":79,"line_end":79,"column_start":1,"column_end":81}},{"value":"/ store state on `SelectWithStrategy` to which it will receive a `&mut` on every","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":433655,"byte_end":433737,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/ invocation. This allows basing the strategy on prior choices.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":433738,"byte_end":433803,"line_start":81,"line_end":81,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":433804,"byte_end":433807,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":433808,"byte_end":433883,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":433884,"byte_end":433953,"line_start":84,"line_end":84,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":433954,"byte_end":433981,"line_start":85,"line_end":85,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":433982,"byte_end":433985,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":433986,"byte_end":434057,"line_start":87,"line_end":87,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434058,"byte_end":434078,"line_start":88,"line_end":88,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434079,"byte_end":434082,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434083,"byte_end":434098,"line_start":90,"line_end":90,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434099,"byte_end":434102,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ### Priority","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434103,"byte_end":434119,"line_start":92,"line_end":92,"column_start":1,"column_end":17}},{"value":"/ This example shows how to always prioritize the left stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434120,"byte_end":434184,"line_start":93,"line_end":93,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434185,"byte_end":434188,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434189,"byte_end":434200,"line_start":95,"line_end":95,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434201,"byte_end":434242,"line_start":96,"line_end":96,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434243,"byte_end":434322,"line_start":97,"line_end":97,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434323,"byte_end":434326,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434327,"byte_end":434352,"line_start":99,"line_end":99,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434353,"byte_end":434379,"line_start":100,"line_end":100,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434380,"byte_end":434383,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ // We don't need any state, so let's make it an empty tuple.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434384,"byte_end":434448,"line_start":102,"line_end":102,"column_start":1,"column_end":65}},{"value":"/ // We must provide some type here, as there is no way for the compiler","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434449,"byte_end":434523,"line_start":103,"line_end":103,"column_start":1,"column_end":75}},{"value":"/ // to infer it. As we don't need to capture variables, we can just","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434524,"byte_end":434594,"line_start":104,"line_end":104,"column_start":1,"column_end":71}},{"value":"/ // use a function pointer instead of a closure.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434595,"byte_end":434646,"line_start":105,"line_end":105,"column_start":1,"column_end":52}},{"value":"/ fn prio_left(_: &mut ()) -> PollNext { PollNext::Left }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434647,"byte_end":434706,"line_start":106,"line_end":106,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434707,"byte_end":434710,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, prio_left);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434711,"byte_end":434774,"line_start":108,"line_end":108,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434775,"byte_end":434778,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434779,"byte_end":434800,"line_start":110,"line_end":110,"column_start":1,"column_end":22}},{"value":"/     // Whenever we poll out, we will alwas get `1`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434801,"byte_end":434856,"line_start":111,"line_end":111,"column_start":1,"column_end":56}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434857,"byte_end":434909,"line_start":112,"line_end":112,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434910,"byte_end":434915,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434916,"byte_end":434925,"line_start":114,"line_end":114,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434926,"byte_end":434933,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434934,"byte_end":434937,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ ### Round Robin","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434938,"byte_end":434957,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/ This example shows how to select from both streams round robin.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":434958,"byte_end":435025,"line_start":118,"line_end":118,"column_start":1,"column_end":68}},{"value":"/ Note: this special case is provided by [`futures-util::stream::select`].","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":435026,"byte_end":435102,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":435103,"byte_end":435106,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":435107,"byte_end":435118,"line_start":121,"line_end":121,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":435119,"byte_end":435160,"line_start":122,"line_end":122,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":435161,"byte_end":435240,"line_start":123,"line_end":123,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":435241,"byte_end":435244,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":435245,"byte_end":435270,"line_start":125,"line_end":125,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":435271,"byte_end":435297,"line_start":126,"line_end":126,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":435298,"byte_end":435301,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let rrobin = |last: &mut PollNext| last.toggle();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":435302,"byte_end":435355,"line_start":128,"line_end":128,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":435356,"byte_end":435359,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, rrobin);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":435360,"byte_end":435420,"line_start":130,"line_end":130,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":435421,"byte_end":435424,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":435425,"byte_end":435446,"line_start":132,"line_end":132,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating now.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":435447,"byte_end":435487,"line_start":133,"line_end":133,"column_start":1,"column_end":41}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":435488,"byte_end":435540,"line_start":134,"line_end":134,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":435541,"byte_end":435593,"line_start":135,"line_end":135,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":435594,"byte_end":435599,"line_start":136,"line_end":136,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":435600,"byte_end":435609,"line_start":137,"line_end":137,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":435610,"byte_end":435617,"line_start":138,"line_end":138,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5776},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":436276,"byte_end":436283,"line_start":162,"line_end":162,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> (&'_ St1, &'_ St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":436168,"byte_end":436242,"line_start":160,"line_end":160,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":436247,"byte_end":436264,"line_start":161,"line_end":161,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5777},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":436621,"byte_end":436628,"line_start":171,"line_end":171,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> (&'_ mut St1, &'_ mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":436359,"byte_end":436427,"line_start":166,"line_end":166,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":436432,"byte_end":436463,"line_start":167,"line_end":167,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":436468,"byte_end":436471,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":436476,"byte_end":436549,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":436554,"byte_end":436609,"line_start":170,"line_end":170,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5778},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":436993,"byte_end":437004,"line_start":180,"line_end":180,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_pin_mut","value":"fn get_pin_mut<'_>(Pin<&'_ mut Self>) -> (Pin<&'_ mut St1>, Pin<&'_ mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":436724,"byte_end":436799,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":436804,"byte_end":436835,"line_start":176,"line_end":176,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":436840,"byte_end":436843,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":436848,"byte_end":436921,"line_start":178,"line_end":178,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":436926,"byte_end":436981,"line_start":179,"line_end":179,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5779},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":437382,"byte_end":437392,"line_start":189,"line_end":189,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::into_inner","value":"fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":437146,"byte_end":437209,"line_start":185,"line_end":185,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":437214,"byte_end":437217,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":437222,"byte_end":437294,"line_start":187,"line_end":187,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":437299,"byte_end":437370,"line_start":188,"line_end":188,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5785},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":437655,"byte_end":437668,"line_start":200,"line_end":200,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<SelectWithStrategy<St1, St2, Clos, State> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5802},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":439271,"byte_end":439280,"line_start":264,"line_end":264,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<SelectWithStrategy<St1, St2, Clos, State> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<St1::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5808},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":440407,"byte_end":440410,"line_start":297,"line_end":297,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SelectWithStrategy<St1, St2, Clos, State> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5855},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":442396,"byte_end":442402,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":440954,"byte_end":441024,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":441025,"byte_end":441028,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":441029,"byte_end":441098,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":441099,"byte_end":441180,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":441181,"byte_end":441212,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":441213,"byte_end":441216,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":441217,"byte_end":441296,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":441297,"byte_end":441376,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":441377,"byte_end":441431,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":441432,"byte_end":441435,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":441436,"byte_end":441516,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":441517,"byte_end":441587,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":441588,"byte_end":441610,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":441611,"byte_end":441614,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":441615,"byte_end":441692,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":441693,"byte_end":441765,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":441766,"byte_end":441843,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":441844,"byte_end":441904,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":441905,"byte_end":441908,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":441909,"byte_end":441922,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":441923,"byte_end":441926,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":441927,"byte_end":441934,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":441935,"byte_end":441976,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":441977,"byte_end":442020,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":442021,"byte_end":442024,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":442025,"byte_end":442080,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":442081,"byte_end":442104,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":442105,"byte_end":442144,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":442145,"byte_end":442182,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":442183,"byte_end":442222,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":442223,"byte_end":442239,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":442240,"byte_end":442256,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":442257,"byte_end":442266,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":442267,"byte_end":442274,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":442275,"byte_end":442278,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":442279,"byte_end":442331,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":442332,"byte_end":442370,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":442371,"byte_end":442380,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":442381,"byte_end":442388,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15225},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":442749,"byte_end":442755,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":15229},{"krate":0,"index":15230}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5864},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":442947,"byte_end":442950,"line_start":73,"line_end":73,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Unfold<T, F, Fut> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5870},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":443222,"byte_end":443235,"line_start":83,"line_end":83,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Unfold<T, F, Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5877},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":443531,"byte_end":443540,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Unfold<T, F, Fut> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5955},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":447806,"byte_end":447820,"line_start":95,"line_end":95,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":5957},{"krate":0,"index":5958},{"krate":0,"index":5959},{"krate":0,"index":5960}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":445740,"byte_end":445774,"line_start":59,"line_end":59,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":445775,"byte_end":445778,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":445779,"byte_end":445858,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":445859,"byte_end":445930,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":445931,"byte_end":446007,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":446008,"byte_end":446056,"line_start":64,"line_end":64,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":446057,"byte_end":446060,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":446061,"byte_end":446140,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":446141,"byte_end":446216,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":446217,"byte_end":446295,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":446296,"byte_end":446376,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":446377,"byte_end":446406,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":446407,"byte_end":446410,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":446411,"byte_end":446489,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":446490,"byte_end":446564,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":446565,"byte_end":446640,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":446641,"byte_end":446716,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":446717,"byte_end":446792,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":446793,"byte_end":446851,"line_start":77,"line_end":77,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":446852,"byte_end":446855,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":446856,"byte_end":446929,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":446930,"byte_end":447008,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":447009,"byte_end":447067,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":447068,"byte_end":447141,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":447142,"byte_end":447210,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":447211,"byte_end":447287,"line_start":84,"line_end":84,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":447288,"byte_end":447356,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":447357,"byte_end":447410,"line_start":86,"line_end":86,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":447411,"byte_end":447414,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":447415,"byte_end":447481,"line_start":88,"line_end":88,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":447482,"byte_end":447561,"line_start":89,"line_end":89,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":447562,"byte_end":447609,"line_start":90,"line_end":90,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":447610,"byte_end":447613,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":447614,"byte_end":447687,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":447688,"byte_end":447745,"line_start":93,"line_end":93,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":447746,"byte_end":447794,"line_start":94,"line_end":94,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5965},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":448328,"byte_end":448331,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":448108,"byte_end":448152,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":448157,"byte_end":448160,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":448165,"byte_end":448240,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":448245,"byte_end":448316,"line_start":108,"line_end":108,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5966},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":448828,"byte_end":448831,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":448555,"byte_end":448612,"line_start":118,"line_end":118,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":448617,"byte_end":448620,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":448625,"byte_end":448688,"line_start":120,"line_end":120,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":448693,"byte_end":448757,"line_start":121,"line_end":121,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":448762,"byte_end":448816,"line_start":122,"line_end":122,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":5967},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":448989,"byte_end":448997,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":448926,"byte_end":448977,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5968},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":449473,"byte_end":449477,"line_start":139,"line_end":139,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"fn push<'_>(&'_ mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":449102,"byte_end":449135,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":449140,"byte_end":449143,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":449148,"byte_end":449224,"line_start":134,"line_end":134,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":449229,"byte_end":449303,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":449308,"byte_end":449381,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":449386,"byte_end":449409,"line_start":137,"line_end":137,"column_start":5,"column_end":28}},{"value":"deprecated(note = \"use `push_back` instead\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":449414,"byte_end":449461,"line_start":138,"line_end":138,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5969},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":449878,"byte_end":449887,"line_start":149,"line_end":149,"column_start":12,"column_end":21},"name":"push_back","qualname":"<FuturesOrdered<Fut>>::push_back","value":"fn push_back<'_>(&'_ mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Pushes a future to the back of the queue.","sig":null,"attributes":[{"value":"/ Pushes a future to the back of the queue.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":449547,"byte_end":449592,"line_start":143,"line_end":143,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":449597,"byte_end":449600,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":449605,"byte_end":449681,"line_start":145,"line_end":145,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":449686,"byte_end":449760,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":449765,"byte_end":449838,"line_start":147,"line_end":147,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":449843,"byte_end":449866,"line_start":148,"line_end":148,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":5970},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":450497,"byte_end":450507,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"push_front","qualname":"<FuturesOrdered<Fut>>::push_front","value":"fn push_front<'_>(&'_ mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Pushes a future to the front of the queue.","sig":null,"attributes":[{"value":"/ Pushes a future to the front of the queue.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":450096,"byte_end":450142,"line_start":155,"line_end":155,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":450147,"byte_end":450150,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":450155,"byte_end":450231,"line_start":157,"line_end":157,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":450236,"byte_end":450310,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":450315,"byte_end":450388,"line_start":159,"line_end":159,"column_start":5,"column_end":78}},{"value":"/ task notifications. This future will be the next future to be returned","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":450393,"byte_end":450467,"line_start":160,"line_end":160,"column_start":5,"column_end":79}},{"value":"/ complete.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":450472,"byte_end":450485,"line_start":161,"line_end":161,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5973},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":450894,"byte_end":450901,"line_start":174,"line_end":174,"column_start":8,"column_end":15},"name":"default","qualname":"<FuturesOrdered<Fut> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5977},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":451031,"byte_end":451040,"line_start":182,"line_end":182,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FuturesOrdered<Fut> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5978},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":452011,"byte_end":452020,"line_start":208,"line_end":208,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<FuturesOrdered<Fut> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5981},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":452177,"byte_end":452180,"line_start":215,"line_end":215,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FuturesOrdered<Fut> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5984},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":452357,"byte_end":452366,"line_start":221,"line_end":221,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<FuturesOrdered<Fut> as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = Fut>","parent":{"krate":2,"index":8401},"children":[],"decl_id":{"krate":2,"index":8403},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5989},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":452656,"byte_end":452669,"line_start":234,"line_end":234,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<FuturesOrdered<Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5992},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":452840,"byte_end":452846,"line_start":240,"line_end":240,"column_start":8,"column_end":14},"name":"extend","qualname":"<FuturesOrdered<Fut> as std::iter::Extend>::extend","value":"fn extend<I, '_>(&'_ mut Self, I) where I: IntoIterator<Item = Fut>","parent":{"krate":2,"index":8414},"children":[],"decl_id":{"krate":2,"index":8416},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5997},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","parent":null,"children":[{"krate":0,"index":5998},{"krate":0,"index":6001},{"krate":0,"index":6002},{"krate":0,"index":6005},{"krate":0,"index":6008},{"krate":0,"index":6011},{"krate":0,"index":6012},{"krate":0,"index":6015},{"krate":0,"index":6016},{"krate":0,"index":6018},{"krate":0,"index":6021},{"krate":0,"index":6022},{"krate":0,"index":6024},{"krate":0,"index":6027},{"krate":0,"index":6030},{"krate":0,"index":6033},{"krate":0,"index":6034},{"krate":0,"index":6035},{"krate":0,"index":6037},{"krate":0,"index":6038},{"krate":0,"index":6040},{"krate":0,"index":6041},{"krate":0,"index":6043},{"krate":0,"index":6044},{"krate":0,"index":6046},{"krate":0,"index":6047},{"krate":0,"index":6049},{"krate":0,"index":6050},{"krate":0,"index":6053},{"krate":0,"index":6056},{"krate":0,"index":6059},{"krate":0,"index":6060},{"krate":0,"index":6063},{"krate":0,"index":6066},{"krate":0,"index":6067},{"krate":0,"index":6070},{"krate":0,"index":6073},{"krate":0,"index":6074},{"krate":0,"index":6077},{"krate":0,"index":6080},{"krate":0,"index":6083},{"krate":0,"index":6086},{"krate":0,"index":6089},{"krate":0,"index":6095},{"krate":0,"index":6165},{"krate":0,"index":6166},{"krate":0,"index":6169},{"krate":0,"index":6170},{"krate":0,"index":6172},{"krate":0,"index":6173},{"krate":0,"index":6175},{"krate":0,"index":6178},{"krate":0,"index":6181},{"krate":0,"index":6249},{"krate":0,"index":6252},{"krate":0,"index":6311},{"krate":0,"index":6312},{"krate":0,"index":6315},{"krate":0,"index":6318},{"krate":0,"index":6323},{"krate":0,"index":6325},{"krate":0,"index":6327},{"krate":0,"index":6329},{"krate":0,"index":6331},{"krate":0,"index":6333},{"krate":0,"index":6336},{"krate":0,"index":6351},{"krate":0,"index":6364},{"krate":0,"index":6367},{"krate":0,"index":6371},{"krate":0,"index":6374},{"krate":0,"index":6380},{"krate":0,"index":6386},{"krate":0,"index":6391},{"krate":0,"index":6396},{"krate":0,"index":6399}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":151351,"byte_end":151385,"line_start":110,"line_end":110,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":151386,"byte_end":151411,"line_start":111,"line_end":111,"column_start":1,"column_end":26}},{"value":"/ An unbounded set of futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":453003,"byte_end":453035,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":453036,"byte_end":453039,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":453040,"byte_end":453115,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":453116,"byte_end":453173,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":15318},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":480295,"byte_end":480305,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":15321},{"krate":0,"index":15322},{"krate":0,"index":15323}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":480207,"byte_end":480266,"line_start":8,"line_end":8,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":15328},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":480542,"byte_end":480549,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":480454,"byte_end":480513,"line_start":16,"line_end":16,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":15337},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":480690,"byte_end":480700,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":15340},{"krate":0,"index":15341},{"krate":0,"index":15342},{"krate":0,"index":15343}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":480600,"byte_end":480661,"line_start":20,"line_end":20,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":15348},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":480988,"byte_end":480992,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":480894,"byte_end":480959,"line_start":29,"line_end":29,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":15357},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":481129,"byte_end":481137,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::futures_unordered::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":15359},{"krate":0,"index":15360}],"decl_id":null,"docs":" Owned iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all futures in the unordered set.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":481043,"byte_end":481100,"line_start":33,"line_end":33,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6117},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":481302,"byte_end":481306,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"next","qualname":"<IntoIter<Fut> as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6118},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":482318,"byte_end":482327,"line_start":70,"line_end":70,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IntoIter<Fut> as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6125},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":482555,"byte_end":482559,"line_start":80,"line_end":80,"column_start":8,"column_end":12},"name":"next","qualname":"<IterPinMut as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6126},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":483232,"byte_end":483241,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IterPinMut as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6133},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":483467,"byte_end":483471,"line_start":109,"line_end":109,"column_start":8,"column_end":12},"name":"next","qualname":"<IterMut as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6134},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":483561,"byte_end":483570,"line_start":113,"line_end":113,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IterMut as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6141},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":483789,"byte_end":483793,"line_start":123,"line_end":123,"column_start":8,"column_end":12},"name":"next","qualname":"<IterPinRef as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6142},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":484487,"byte_end":484496,"line_start":142,"line_end":142,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IterPinRef as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6149},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":484715,"byte_end":484719,"line_start":152,"line_end":152,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6150},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":484809,"byte_end":484818,"line_start":156,"line_end":156,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6318},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":455117,"byte_end":455133,"line_start":55,"line_end":55,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":6320},{"krate":0,"index":6321},{"krate":0,"index":6322}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":454022,"byte_end":454075,"line_start":34,"line_end":34,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":454076,"byte_end":454079,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":454080,"byte_end":454148,"line_start":36,"line_end":36,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":454149,"byte_end":454222,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":454223,"byte_end":454299,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":454300,"byte_end":454344,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":454345,"byte_end":454348,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":454349,"byte_end":454427,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":454428,"byte_end":454486,"line_start":42,"line_end":42,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":454487,"byte_end":454551,"line_start":43,"line_end":43,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":454552,"byte_end":454605,"line_start":44,"line_end":44,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":454606,"byte_end":454685,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":454686,"byte_end":454715,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":454716,"byte_end":454719,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":454720,"byte_end":454790,"line_start":48,"line_end":48,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":454791,"byte_end":454868,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":454869,"byte_end":454920,"line_start":50,"line_end":50,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":454921,"byte_end":454924,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":454925,"byte_end":454998,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":454999,"byte_end":455056,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":455057,"byte_end":455105,"line_start":54,"line_end":54,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6330},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":455482,"byte_end":455491,"line_start":66,"line_end":66,"column_start":8,"column_end":17},"name":"spawn_obj","qualname":"<FuturesUnordered<FutureObj> as futures_task::Spawn>::spawn_obj","value":"fn spawn_obj<'_>(&'_ Self, FutureObj) -> Result<(), SpawnError>","parent":{"krate":22,"index":15},"children":[],"decl_id":{"krate":22,"index":16},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6332},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":455688,"byte_end":455703,"line_start":73,"line_end":73,"column_start":8,"column_end":23},"name":"spawn_local_obj","qualname":"<FuturesUnordered<LocalFutureObj> as futures_task::LocalSpawn>::spawn_local_obj","value":"fn spawn_local_obj<'_>(&'_ Self, LocalFutureObj) -> Result<(), SpawnError>","parent":{"krate":22,"index":18},"children":[],"decl_id":{"krate":22,"index":19},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6335},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":457392,"byte_end":457399,"line_start":105,"line_end":105,"column_start":8,"column_end":15},"name":"default","qualname":"<FuturesUnordered<Fut> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6338},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":457750,"byte_end":457753,"line_start":116,"line_end":116,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":457479,"byte_end":457528,"line_start":111,"line_end":111,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":457533,"byte_end":457536,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":457541,"byte_end":457608,"line_start":113,"line_end":113,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":457613,"byte_end":457687,"line_start":114,"line_end":114,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":457692,"byte_end":457738,"line_start":115,"line_end":115,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":6339},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":458783,"byte_end":458786,"line_start":145,"line_end":145,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":458645,"byte_end":458700,"line_start":142,"line_end":142,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":458705,"byte_end":458708,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":458713,"byte_end":458771,"line_start":144,"line_end":144,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6340},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":458950,"byte_end":458958,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":458888,"byte_end":458938,"line_start":150,"line_end":150,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6341},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":459541,"byte_end":459545,"line_start":163,"line_end":163,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"fn push<'_>(&'_ Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":459171,"byte_end":459202,"line_start":157,"line_end":157,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":459207,"byte_end":459210,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":459215,"byte_end":459285,"line_start":159,"line_end":159,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":459290,"byte_end":459376,"line_start":160,"line_end":160,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":459381,"byte_end":459457,"line_start":161,"line_end":161,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":459462,"byte_end":459529,"line_start":162,"line_end":162,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6342},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":460863,"byte_end":460867,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"fn iter<'_>(&'_ Self) -> Iter where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":460781,"byte_end":460851,"line_start":191,"line_end":191,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6343},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":461065,"byte_end":461077,"line_start":200,"line_end":200,"column_start":12,"column_end":24},"name":"iter_pin_ref","qualname":"<FuturesUnordered<Fut>>::iter_pin_ref","value":"fn iter_pin_ref<'_>(Pin<&'_ Self>) -> IterPinRef","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":460983,"byte_end":461053,"line_start":199,"line_end":199,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6344},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":461406,"byte_end":461414,"line_start":208,"line_end":208,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"fn iter_mut<'_>(&'_ mut Self) -> IterMut where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":461325,"byte_end":461394,"line_start":207,"line_end":207,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6345},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":461621,"byte_end":461633,"line_start":216,"line_end":216,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"fn iter_pin_mut<'_>(Pin<&'_ mut Self>) -> IterPinMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":461540,"byte_end":461609,"line_start":215,"line_end":215,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6354},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":469137,"byte_end":469146,"line_start":388,"line_end":388,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FuturesUnordered<Fut> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6363},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":476152,"byte_end":476161,"line_start":543,"line_end":543,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<FuturesUnordered<Fut> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6366},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":476312,"byte_end":476315,"line_start":550,"line_end":550,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FuturesUnordered<Fut> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6369},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":476516,"byte_end":476521,"line_start":557,"line_end":557,"column_start":12,"column_end":17},"name":"clear","qualname":"<FuturesUnordered<Fut>>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all futures.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":476463,"byte_end":476504,"line_start":556,"line_end":556,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":6373},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":477053,"byte_end":477057,"line_start":576,"line_end":576,"column_start":8,"column_end":12},"name":"drop","qualname":"<FuturesUnordered<Fut> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6379},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":478375,"byte_end":478384,"line_start":602,"line_end":602,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a FuturesUnordered<Fut> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8405},"children":[],"decl_id":{"krate":2,"index":8408},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6385},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":478585,"byte_end":478594,"line_start":611,"line_end":611,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a mut FuturesUnordered<Fut> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8405},"children":[],"decl_id":{"krate":2,"index":8408},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6390},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":478776,"byte_end":478785,"line_start":620,"line_end":620,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<FuturesUnordered<Fut> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8405},"children":[],"decl_id":{"krate":2,"index":8408},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6393},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":479205,"byte_end":479214,"line_start":631,"line_end":631,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<FuturesUnordered<Fut> as std::iter::FromIterator>::from_iter","value":"fn from_iter<I>(I) -> Self where I: IntoIterator<Item = Fut>","parent":{"krate":2,"index":8401},"children":[],"decl_id":{"krate":2,"index":8403},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6398},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":479497,"byte_end":479510,"line_start":644,"line_end":644,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<FuturesUnordered<Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6401},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":479635,"byte_end":479641,"line_start":650,"line_end":650,"column_start":8,"column_end":14},"name":"extend","qualname":"<FuturesUnordered<Fut> as std::iter::Extend>::extend","value":"fn extend<I, '_>(&'_ mut Self, I) where I: IntoIterator<Item = Fut>","parent":{"krate":2,"index":8414},"children":[],"decl_id":{"krate":2,"index":8416},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6406},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"select_all","qualname":"::stream::select_all","value":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","parent":null,"children":[{"krate":0,"index":6407},{"krate":0,"index":6408},{"krate":0,"index":6411},{"krate":0,"index":6412},{"krate":0,"index":6414},{"krate":0,"index":6417},{"krate":0,"index":6420},{"krate":0,"index":6423},{"krate":0,"index":6424},{"krate":0,"index":6427},{"krate":0,"index":6430},{"krate":0,"index":6431},{"krate":0,"index":6434},{"krate":0,"index":6437},{"krate":0,"index":6440},{"krate":0,"index":6443},{"krate":0,"index":6444},{"krate":0,"index":6447},{"krate":0,"index":6450},{"krate":0,"index":6453},{"krate":0,"index":15364},{"krate":0,"index":15367},{"krate":0,"index":6456},{"krate":0,"index":6459},{"krate":0,"index":6468},{"krate":0,"index":6471},{"krate":0,"index":6475},{"krate":0,"index":6478},{"krate":0,"index":6480},{"krate":0,"index":6484},{"krate":0,"index":6488},{"krate":0,"index":6493},{"krate":0,"index":6499},{"krate":0,"index":15397},{"krate":0,"index":15402},{"krate":0,"index":15406},{"krate":0,"index":15411},{"krate":0,"index":15415},{"krate":0,"index":15419},{"krate":0,"index":6505},{"krate":0,"index":6511},{"krate":0,"index":6513},{"krate":0,"index":6519},{"krate":0,"index":6521},{"krate":0,"index":6526}],"decl_id":null,"docs":" An unbounded set of streams\n","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":151567,"byte_end":151601,"line_start":118,"line_end":118,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":151602,"byte_end":151627,"line_start":119,"line_end":119,"column_start":1,"column_end":26}},{"value":"/ An unbounded set of streams","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":493857,"byte_end":493888,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":15364},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":494928,"byte_end":494937,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":15366}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6458},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":495068,"byte_end":495071,"line_start":37,"line_end":37,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SelectAll<St> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6461},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":495419,"byte_end":495422,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":495219,"byte_end":495258,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":495263,"byte_end":495266,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":495271,"byte_end":495341,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":495346,"byte_end":495407,"line_start":46,"line_end":46,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6462},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":495632,"byte_end":495635,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":495494,"byte_end":495549,"line_start":51,"line_end":51,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":495554,"byte_end":495557,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":495562,"byte_end":495620,"line_start":53,"line_end":53,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6463},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":495751,"byte_end":495759,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":495690,"byte_end":495739,"line_start":58,"line_end":58,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6464},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":496121,"byte_end":496125,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"fn push<'_>(&'_ mut Self, St)","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":495818,"byte_end":495849,"line_start":63,"line_end":63,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":495854,"byte_end":495857,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":495862,"byte_end":495934,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":495939,"byte_end":496013,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":496018,"byte_end":496086,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":496091,"byte_end":496109,"line_start":68,"line_end":68,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":6465},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":496291,"byte_end":496295,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"iter","qualname":"<SelectAll<St>>::iter","value":"fn iter<'_>(&'_ Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each stream in the set.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":496209,"byte_end":496279,"line_start":73,"line_end":73,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6466},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":496445,"byte_end":496453,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<SelectAll<St>>::iter_mut","value":"fn iter_mut<'_>(&'_ mut Self) -> IterMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each stream in the set.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":496364,"byte_end":496433,"line_start":78,"line_end":78,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6467},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":496589,"byte_end":496594,"line_start":84,"line_end":84,"column_start":12,"column_end":17},"name":"clear","qualname":"<SelectAll<St>>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all streams.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all streams.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":496536,"byte_end":496577,"line_start":83,"line_end":83,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":6470},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":496704,"byte_end":496711,"line_start":90,"line_end":90,"column_start":8,"column_end":15},"name":"default","qualname":"<SelectAll<St> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6474},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":496839,"byte_end":496848,"line_start":98,"line_end":98,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<SelectAll<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6477},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":497605,"byte_end":497618,"line_start":118,"line_end":118,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<SelectAll<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6478},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":498301,"byte_end":498311,"line_start":135,"line_end":135,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Stream + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":497680,"byte_end":497754,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":497755,"byte_end":497758,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":497759,"byte_end":497838,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":497839,"byte_end":497890,"line_start":126,"line_end":126,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":497891,"byte_end":497965,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":497966,"byte_end":498025,"line_start":128,"line_end":128,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":498026,"byte_end":498029,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":498030,"byte_end":498102,"line_start":130,"line_end":130,"column_start":1,"column_end":73}},{"value":"/ streams into the set as they become available.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":498103,"byte_end":498153,"line_start":131,"line_end":131,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":498154,"byte_end":498157,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":498158,"byte_end":498235,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":498236,"byte_end":498293,"line_start":134,"line_end":134,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6482},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":498632,"byte_end":498641,"line_start":150,"line_end":150,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<SelectAll<St> as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = St>","parent":{"krate":2,"index":8401},"children":[],"decl_id":{"krate":2,"index":8403},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6486},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":498786,"byte_end":498792,"line_start":156,"line_end":156,"column_start":8,"column_end":14},"name":"extend","qualname":"<SelectAll<St> as std::iter::Extend>::extend","value":"fn extend<T, '_>(&'_ mut Self, T) where T: IntoIterator<Item = St>","parent":{"krate":2,"index":8414},"children":[],"decl_id":{"krate":2,"index":8416},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6492},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":499033,"byte_end":499042,"line_start":167,"line_end":167,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<SelectAll<St> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8405},"children":[],"decl_id":{"krate":2,"index":8408},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6498},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":499251,"byte_end":499260,"line_start":176,"line_end":176,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a SelectAll<St> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8405},"children":[],"decl_id":{"krate":2,"index":8408},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6504},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":499459,"byte_end":499468,"line_start":185,"line_end":185,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a mut SelectAll<St> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8405},"children":[],"decl_id":{"krate":2,"index":8408},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15397},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":499618,"byte_end":499622,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::select_all::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all streams in the unordered set.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":499528,"byte_end":499589,"line_start":190,"line_end":190,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":15406},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":499775,"byte_end":499782,"line_start":196,"line_end":196,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::select_all::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all streams in the unordered set.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":499687,"byte_end":499746,"line_start":194,"line_end":194,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":15415},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":499936,"byte_end":499944,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::select_all::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Owned iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all streams in the unordered set.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":499850,"byte_end":499907,"line_start":198,"line_end":198,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6509},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":500094,"byte_end":500098,"line_start":205,"line_end":205,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6510},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":500356,"byte_end":500365,"line_start":213,"line_end":213,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6517},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":500597,"byte_end":500601,"line_start":223,"line_end":223,"column_start":8,"column_end":12},"name":"next","qualname":"<IterMut as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6518},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":500859,"byte_end":500868,"line_start":231,"line_end":231,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IterMut as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6524},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":501088,"byte_end":501092,"line_start":241,"line_end":241,"column_start":8,"column_end":12},"name":"next","qualname":"<IntoIter<St> as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6525},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":501353,"byte_end":501362,"line_start":249,"line_end":249,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IntoIter<St> as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6549},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/abortable.rs","byte_start":501959,"byte_end":501968,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::stream::abortable::abortable","value":"fn abortable<St>(St) -> (Abortable<St>, AbortHandle) where St: Stream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/abortable.rs","byte_start":501589,"byte_end":501676,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/abortable.rs","byte_start":501677,"byte_end":501680,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/abortable.rs","byte_start":501681,"byte_end":501757,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/abortable.rs","byte_start":501758,"byte_end":501811,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/abortable.rs","byte_start":501812,"byte_end":501815,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/abortable.rs","byte_start":501816,"byte_end":501893,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/abortable.rs","byte_start":501894,"byte_end":501951,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":6583},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":6584},{"krate":0,"index":6585},{"krate":0,"index":6588},{"krate":0,"index":6591},{"krate":0,"index":6594},{"krate":0,"index":6597},{"krate":0,"index":6600},{"krate":0,"index":6601},{"krate":0,"index":6604},{"krate":0,"index":6607},{"krate":0,"index":6610},{"krate":0,"index":6613},{"krate":0,"index":6616},{"krate":0,"index":6619},{"krate":0,"index":6622},{"krate":0,"index":6625},{"krate":0,"index":6628},{"krate":0,"index":6631},{"krate":0,"index":6632},{"krate":0,"index":6635},{"krate":0,"index":6638},{"krate":0,"index":6641},{"krate":0,"index":6675},{"krate":0,"index":6676},{"krate":0,"index":6679}],"decl_id":null,"docs":" Tools for working with tasks.","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":502196,"byte_end":502229,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":502230,"byte_end":502233,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":502234,"byte_end":502259,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":502260,"byte_end":502263,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - [`Spawn`], a trait for spawning new tasks.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":502264,"byte_end":502312,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ - [`Context`], a context of an asynchronous task,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":502313,"byte_end":502366,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/   including a handle for waking up the task.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":502367,"byte_end":502415,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/ - [`Waker`], a handle for waking up a task.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":502416,"byte_end":502463,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":502464,"byte_end":502467,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The remaining types and traits in the module are used for implementing","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":502468,"byte_end":502542,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ executors or dealing with synchronization issues around task wakeup.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":502543,"byte_end":502615,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":6669},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":503865,"byte_end":503873,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":6670}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":503822,"byte_end":503854,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":6670},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":505048,"byte_end":505053,"line_start":49,"line_end":49,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"fn spawn<Fut, '_>(&'_ Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + Send + 'static","parent":{"krate":0,"index":6669},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":503887,"byte_end":503952,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":503957,"byte_end":503972,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":503977,"byte_end":503980,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":503985,"byte_end":504055,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":504060,"byte_end":504079,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":504084,"byte_end":504087,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":504092,"byte_end":504161,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":504166,"byte_end":504239,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":504244,"byte_end":504283,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":504288,"byte_end":504291,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":504296,"byte_end":504362,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":504367,"byte_end":504433,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":504438,"byte_end":504509,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":504514,"byte_end":504570,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":504575,"byte_end":504578,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":504583,"byte_end":504590,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ # {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":504595,"byte_end":504602,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":504607,"byte_end":504645,"line_start":38,"line_end":38,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":504650,"byte_end":504682,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":504687,"byte_end":504690,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":504695,"byte_end":504741,"line_start":41,"line_end":41,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":504746,"byte_end":504749,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":504754,"byte_end":504791,"line_start":43,"line_end":43,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":504796,"byte_end":504832,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":504837,"byte_end":504844,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ # std::thread::sleep(std::time::Duration::from_millis(500)); // wait for background threads closed: https://github.com/rust-lang/miri/issues/1371","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":504849,"byte_end":504998,"line_start":46,"line_end":46,"column_start":5,"column_end":154}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":505003,"byte_end":505010,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":505015,"byte_end":505040,"line_start":48,"line_end":48,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":6672},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":506985,"byte_end":506998,"line_start":103,"line_end":103,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":6673}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":506937,"byte_end":506974,"line_start":102,"line_end":102,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6673},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":508041,"byte_end":508052,"line_start":130,"line_end":130,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"fn spawn_local<Fut, '_>(&'_ Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + 'static","parent":{"krate":0,"index":6672},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":507017,"byte_end":507082,"line_start":104,"line_end":104,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":507087,"byte_end":507102,"line_start":105,"line_end":105,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":507107,"byte_end":507110,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":507115,"byte_end":507185,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":507190,"byte_end":507209,"line_start":108,"line_end":108,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":507214,"byte_end":507217,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":507222,"byte_end":507291,"line_start":110,"line_end":110,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":507296,"byte_end":507369,"line_start":111,"line_end":111,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":507374,"byte_end":507413,"line_start":112,"line_end":112,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":507418,"byte_end":507421,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":507426,"byte_end":507492,"line_start":114,"line_end":114,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":507497,"byte_end":507563,"line_start":115,"line_end":115,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":507568,"byte_end":507639,"line_start":116,"line_end":116,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":507644,"byte_end":507700,"line_start":117,"line_end":117,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":507705,"byte_end":507708,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":507713,"byte_end":507720,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":507725,"byte_end":507762,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":507767,"byte_end":507804,"line_start":121,"line_end":121,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":507809,"byte_end":507812,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":507817,"byte_end":507853,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":507858,"byte_end":507895,"line_start":124,"line_end":124,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":507900,"byte_end":507903,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":507908,"byte_end":507945,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":507950,"byte_end":507991,"line_start":127,"line_end":127,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":507996,"byte_end":508003,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":508008,"byte_end":508033,"line_start":129,"line_end":129,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":6682},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","parent":null,"children":[{"krate":0,"index":6683}],"decl_id":null,"docs":" This module contains the `Never` type.","sig":null,"attributes":[{"value":"/ This module contains the `Never` type.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":509457,"byte_end":509499,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":509500,"byte_end":509503,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Values of this type can never be created and will never exist.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":509504,"byte_end":509570,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":6683},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":510207,"byte_end":510212,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":509572,"byte_end":509607,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":509608,"byte_end":509611,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":509612,"byte_end":509687,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":509688,"byte_end":509725,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":509726,"byte_end":509729,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":509730,"byte_end":509794,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":509795,"byte_end":509798,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":509799,"byte_end":509870,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":509871,"byte_end":509922,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":509923,"byte_end":510015,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":510016,"byte_end":510019,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":510020,"byte_end":510091,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":510092,"byte_end":510197,"line_start":17,"line_end":17,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":6684},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":6685},{"krate":0,"index":6688},{"krate":0,"index":6691},{"krate":0,"index":6692},{"krate":0,"index":6695},{"krate":0,"index":6698},{"krate":0,"index":6699},{"krate":0,"index":6702},{"krate":0,"index":6705},{"krate":0,"index":6708},{"krate":0,"index":6711},{"krate":0,"index":6714},{"krate":0,"index":6717},{"krate":0,"index":6718},{"krate":0,"index":6721},{"krate":0,"index":6724},{"krate":0,"index":6727},{"krate":0,"index":6730},{"krate":0,"index":6731},{"krate":0,"index":6733},{"krate":0,"index":6820},{"krate":0,"index":6823},{"krate":0,"index":6914},{"krate":0,"index":6915},{"krate":0,"index":6918},{"krate":0,"index":6921},{"krate":0,"index":7002},{"krate":0,"index":7005},{"krate":0,"index":7053},{"krate":0,"index":7056},{"krate":0,"index":7112},{"krate":0,"index":7115},{"krate":0,"index":7145},{"krate":0,"index":7148},{"krate":0,"index":7193},{"krate":0,"index":7194},{"krate":0,"index":7197},{"krate":0,"index":7200},{"krate":0,"index":7238},{"krate":0,"index":7239},{"krate":0,"index":7242},{"krate":0,"index":7245},{"krate":0,"index":7297},{"krate":0,"index":7298},{"krate":0,"index":7301},{"krate":0,"index":7304},{"krate":0,"index":7364},{"krate":0,"index":7367},{"krate":0,"index":7401},{"krate":0,"index":7402},{"krate":0,"index":7405},{"krate":0,"index":7408},{"krate":0,"index":7439},{"krate":0,"index":7442},{"krate":0,"index":7472},{"krate":0,"index":7475},{"krate":0,"index":7514},{"krate":0,"index":7517},{"krate":0,"index":7547},{"krate":0,"index":7550},{"krate":0,"index":7584},{"krate":0,"index":7587},{"krate":0,"index":7623},{"krate":0,"index":7626},{"krate":0,"index":7671},{"krate":0,"index":7674},{"krate":0,"index":7718},{"krate":0,"index":7721},{"krate":0,"index":7770},{"krate":0,"index":7773},{"krate":0,"index":7811},{"krate":0,"index":7814},{"krate":0,"index":7849},{"krate":0,"index":7850},{"krate":0,"index":7853},{"krate":0,"index":7856},{"krate":0,"index":7890},{"krate":0,"index":7893},{"krate":0,"index":7928},{"krate":0,"index":7929},{"krate":0,"index":7932},{"krate":0,"index":7935},{"krate":0,"index":8014},{"krate":0,"index":8015},{"krate":0,"index":8018},{"krate":0,"index":8019},{"krate":0,"index":8021},{"krate":0,"index":8024},{"krate":0,"index":8067},{"krate":0,"index":8070},{"krate":0,"index":8097},{"krate":0,"index":8100},{"krate":0,"index":8130},{"krate":0,"index":8133},{"krate":0,"index":8167},{"krate":0,"index":8170},{"krate":0,"index":8206},{"krate":0,"index":8209},{"krate":0,"index":8224},{"krate":0,"index":8226},{"krate":0,"index":8235},{"krate":0,"index":8237},{"krate":0,"index":8240},{"krate":0,"index":8242},{"krate":0,"index":8250},{"krate":0,"index":8252},{"krate":0,"index":8254}],"decl_id":null,"docs":" Asynchronous I/O.","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11117,"byte_end":11139,"line_start":317,"line_end":317,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11186,"byte_end":11209,"line_start":319,"line_end":319,"column_start":1,"column_end":24}},{"value":"/ Asynchronous I/O.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":510243,"byte_end":510264,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":510265,"byte_end":510268,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. It defines four","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":510269,"byte_end":510342,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ traits, [`AsyncRead`], [`AsyncWrite`], [`AsyncSeek`], and [`AsyncBufRead`],","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":510343,"byte_end":510422,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ which mirror the `Read`, `Write`, `Seek`, and `BufRead` traits of the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":510423,"byte_end":510496,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ standard library. However, these traits integrate with the asynchronous","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":510497,"byte_end":510572,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ task system, so that if an I/O object isn't ready for reading (or writing),","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":510573,"byte_end":510652,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ the thread is not blocked, and instead the current task is queued to be","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":510653,"byte_end":510728,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ woken when I/O is ready.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":510729,"byte_end":510757,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":510758,"byte_end":510761,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ In addition, the [`AsyncReadExt`], [`AsyncWriteExt`], [`AsyncSeekExt`], and","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":510762,"byte_end":510841,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ [`AsyncBufReadExt`] extension traits offer a variety of useful combinators","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":510842,"byte_end":510920,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ for operating with asynchronous I/O objects, including ways to work with","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":510921,"byte_end":510997,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ them using futures, streams and sinks.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":510998,"byte_end":511040,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":511041,"byte_end":511044,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":511045,"byte_end":511109,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":511110,"byte_end":511167,"line_start":17,"line_end":17,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":15422},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":538353,"byte_end":538363,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"AllowStdIo","qualname":"::io::allow_std::AllowStdIo","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple wrapper type which allows types which implement only\n implement `std::io::Read` or `std::io::Write`\n to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","sig":null,"attributes":[{"value":"/ A simple wrapper type which allows types which implement only","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":537704,"byte_end":537769,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ implement `std::io::Read` or `std::io::Write`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":537770,"byte_end":537819,"line_start":7,"line_end":7,"column_start":1,"column_end":50}},{"value":"/ to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":537820,"byte_end":537891,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":537892,"byte_end":537895,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ If these types issue an error with the kind `io::ErrorKind::WouldBlock`,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":537896,"byte_end":537972,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ it is expected that they will notify the current task on readiness.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":537973,"byte_end":538044,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ Synchronous `std` types should not issue errors of this kind and","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":538045,"byte_end":538113,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/ are safe to use in this context. However, using these types with","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":538114,"byte_end":538182,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/ `AllowStdIo` will cause the event loop to block, so they should be used","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":538183,"byte_end":538258,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ with care.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":538259,"byte_end":538273,"line_start":15,"line_end":15,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":6778},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":538928,"byte_end":538931,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<AllowStdIo<T>>::new","value":"fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AllowStdIo` from an existing IO object.\n","sig":null,"attributes":[{"value":"/ Creates a new `AllowStdIo` from an existing IO object.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":538858,"byte_end":538916,"line_start":40,"line_end":40,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6779},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":539040,"byte_end":539047,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AllowStdIo<T>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> &'_ T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained IO object.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":538977,"byte_end":539028,"line_start":45,"line_end":45,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6780},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":539161,"byte_end":539168,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AllowStdIo<T>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained IO object.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":539090,"byte_end":539149,"line_start":50,"line_end":50,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":6781},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":539289,"byte_end":539299,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AllowStdIo<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns the contained IO object.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns the contained IO object.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":539223,"byte_end":539277,"line_start":55,"line_end":55,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6784},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":539406,"byte_end":539411,"line_start":65,"line_end":65,"column_start":8,"column_end":13},"name":"write","qualname":"<AllowStdIo<T> as std::io::Write>::write","value":"fn write<'_, '_>(&'_ mut Self, &'_ [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4725},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6785},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":539497,"byte_end":539511,"line_start":68,"line_end":68,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"<AllowStdIo<T> as std::io::Write>::write_vectored","value":"fn write_vectored<'_, '_, '_>(&'_ mut Self, &'_ [IoSlice])\n-> io::Result<usize>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4726},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6786},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":539617,"byte_end":539622,"line_start":71,"line_end":71,"column_start":8,"column_end":13},"name":"flush","qualname":"<AllowStdIo<T> as std::io::Write>::flush","value":"fn flush<'_>(&'_ mut Self) -> io::Result<()>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4729},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6787},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":539690,"byte_end":539699,"line_start":74,"line_end":74,"column_start":8,"column_end":17},"name":"write_all","qualname":"<AllowStdIo<T> as std::io::Write>::write_all","value":"fn write_all<'_, '_>(&'_ mut Self, &'_ [u8]) -> io::Result<()>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4730},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6788},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":539786,"byte_end":539795,"line_start":77,"line_end":77,"column_start":8,"column_end":17},"name":"write_fmt","qualname":"<AllowStdIo<T> as std::io::Write>::write_fmt","value":"fn write_fmt<'_, '_>(&'_ mut Self, fmt::Arguments) -> io::Result<()>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4732},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6791},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":539961,"byte_end":539971,"line_start":86,"line_end":86,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<AllowStdIo<T> as futures_io::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6792},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":540169,"byte_end":540188,"line_start":94,"line_end":94,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<AllowStdIo<T> as futures_io::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6793},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":540406,"byte_end":540416,"line_start":102,"line_end":102,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<AllowStdIo<T> as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6794},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":540577,"byte_end":540587,"line_start":107,"line_end":107,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<AllowStdIo<T> as futures_io::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6797},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":540762,"byte_end":540766,"line_start":116,"line_end":116,"column_start":8,"column_end":12},"name":"read","qualname":"<AllowStdIo<T> as std::io::Read>::read","value":"fn read<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4668},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6798},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":540855,"byte_end":540868,"line_start":119,"line_end":119,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"<AllowStdIo<T> as std::io::Read>::read_vectored","value":"fn read_vectored<'_, '_, '_>(&'_ mut Self, &'_ mut [IoSliceMut])\n-> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4669},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6799},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":540980,"byte_end":540991,"line_start":122,"line_end":122,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"<AllowStdIo<T> as std::io::Read>::read_to_end","value":"fn read_to_end<'_, '_>(&'_ mut Self, &'_ mut Vec<u8>) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4672},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6800},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":541090,"byte_end":541104,"line_start":125,"line_end":125,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"<AllowStdIo<T> as std::io::Read>::read_to_string","value":"fn read_to_string<'_, '_>(&'_ mut Self, &'_ mut String) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4673},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6801},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":541205,"byte_end":541215,"line_start":128,"line_end":128,"column_start":8,"column_end":18},"name":"read_exact","qualname":"<AllowStdIo<T> as std::io::Read>::read_exact","value":"fn read_exact<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> io::Result<()>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4674},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6804},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":541371,"byte_end":541380,"line_start":137,"line_end":137,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<AllowStdIo<T> as futures_io::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":25,"index":39},"children":[],"decl_id":{"krate":25,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6805},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":541581,"byte_end":541599,"line_start":145,"line_end":145,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<AllowStdIo<T> as futures_io::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":25,"index":39},"children":[],"decl_id":{"krate":25,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6808},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":541885,"byte_end":541889,"line_start":158,"line_end":158,"column_start":8,"column_end":12},"name":"seek","qualname":"<AllowStdIo<T> as std::io::Seek>::seek","value":"fn seek<'_>(&'_ mut Self, SeekFrom) -> io::Result<u64>","parent":{"krate":1,"index":4742},"children":[],"decl_id":{"krate":1,"index":4743},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6811},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":542039,"byte_end":542048,"line_start":167,"line_end":167,"column_start":8,"column_end":17},"name":"poll_seek","qualname":"<AllowStdIo<T> as futures_io::AsyncSeek>::poll_seek","value":"fn poll_seek<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, SeekFrom)\n-> Poll<io::Result<u64>>","parent":{"krate":25,"index":47},"children":[],"decl_id":{"krate":25,"index":48},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6814},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":542314,"byte_end":542322,"line_start":180,"line_end":180,"column_start":8,"column_end":16},"name":"fill_buf","qualname":"<AllowStdIo<T> as std::io::BufRead>::fill_buf","value":"fn fill_buf<'_>(&'_ mut Self) -> io::Result<&'_ [u8]>","parent":{"krate":1,"index":4749},"children":[],"decl_id":{"krate":1,"index":4750},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6815},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":542396,"byte_end":542403,"line_start":183,"line_end":183,"column_start":8,"column_end":15},"name":"consume","qualname":"<AllowStdIo<T> as std::io::BufRead>::consume","value":"fn consume<'_>(&'_ mut Self, usize)","parent":{"krate":1,"index":4749},"children":[],"decl_id":{"krate":1,"index":4751},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6818},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":542540,"byte_end":542553,"line_start":192,"line_end":192,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<AllowStdIo<T> as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<&'_ [u8]>>","parent":{"krate":25,"index":49},"children":[],"decl_id":{"krate":25,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6819},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":542777,"byte_end":542784,"line_start":197,"line_end":197,"column_start":8,"column_end":15},"name":"consume","qualname":"<AllowStdIo<T> as futures_io::AsyncBufRead>::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":25,"index":49},"children":[],"decl_id":{"krate":25,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15455},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":544165,"byte_end":544174,"line_start":31,"line_end":31,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":15457},{"krate":0,"index":15458},{"krate":0,"index":15459},{"krate":0,"index":15460}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6881},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":544469,"byte_end":544472,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":544327,"byte_end":544419,"line_start":41,"line_end":41,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":544424,"byte_end":544457,"line_start":42,"line_end":42,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6882},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":544634,"byte_end":544647,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":544557,"byte_end":544622,"line_start":47,"line_end":47,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6883},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":545153,"byte_end":545159,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"fn buffer<'_>(&'_ Self) -> &'_ [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":544993,"byte_end":545049,"line_start":59,"line_end":59,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":545054,"byte_end":545057,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":545062,"byte_end":545141,"line_start":61,"line_end":61,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":6887},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":545808,"byte_end":545821,"line_start":80,"line_end":80,"column_start":12,"column_end":25},"name":"seek_relative","qualname":"<BufReader<R>>::seek_relative","value":"fn seek_relative<'_>(Pin<&'_ mut Self>, i64) -> SeeKRelative","parent":null,"children":[],"decl_id":null,"docs":" Seeks relative to the current position. If the new position lies within the buffer,\n the buffer will not be flushed, allowing for more efficient seeks.\n This method does not return the location of the underlying reader, so the caller\n must track this information themselves if it is required.\n","sig":null,"attributes":[{"value":"/ Seeks relative to the current position. If the new position lies within the buffer,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":545479,"byte_end":545566,"line_start":76,"line_end":76,"column_start":5,"column_end":92}},{"value":"/ the buffer will not be flushed, allowing for more efficient seeks.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":545571,"byte_end":545641,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/ This method does not return the location of the underlying reader, so the caller","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":545646,"byte_end":545730,"line_start":78,"line_end":78,"column_start":5,"column_end":89}},{"value":"/ must track this information themselves if it is required.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":545735,"byte_end":545796,"line_start":79,"line_end":79,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6888},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":546291,"byte_end":546309,"line_start":88,"line_end":88,"column_start":12,"column_end":30},"name":"poll_seek_relative","qualname":"<BufReader<R>>::poll_seek_relative","value":"fn poll_seek_relative<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, i64)\n-> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to seek relative to the current position. If the new position lies within the buffer,\n the buffer will not be flushed, allowing for more efficient seeks.\n This method does not return the location of the underlying reader, so the caller\n must track this information themselves if it is required.\n","sig":null,"attributes":[{"value":"/ Attempts to seek relative to the current position. If the new position lies within the buffer,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":545951,"byte_end":546049,"line_start":84,"line_end":84,"column_start":5,"column_end":103}},{"value":"/ the buffer will not be flushed, allowing for more efficient seeks.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":546054,"byte_end":546124,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ This method does not return the location of the underlying reader, so the caller","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":546129,"byte_end":546213,"line_start":86,"line_end":86,"column_start":5,"column_end":89}},{"value":"/ must track this information themselves if it is required.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":546218,"byte_end":546279,"line_start":87,"line_end":87,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6893},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":547052,"byte_end":547061,"line_start":110,"line_end":110,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<BufReader<R> as futures_io::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":25,"index":39},"children":[],"decl_id":{"krate":25,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6894},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":547761,"byte_end":547779,"line_start":129,"line_end":129,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<BufReader<R> as futures_io::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":25,"index":39},"children":[],"decl_id":{"krate":25,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6898},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":548463,"byte_end":548476,"line_start":148,"line_end":148,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<BufReader<R> as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<&'_ [u8]>>","parent":{"krate":25,"index":49},"children":[],"decl_id":{"krate":25,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6899},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":549126,"byte_end":549133,"line_start":163,"line_end":163,"column_start":8,"column_end":15},"name":"consume","qualname":"<BufReader<R> as futures_io::AsyncBufRead>::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":25,"index":49},"children":[],"decl_id":{"krate":25,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6904},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":549389,"byte_end":549392,"line_start":173,"line_end":173,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BufReader<R> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6907},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":550888,"byte_end":550897,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"poll_seek","qualname":"<BufReader<R> as futures_io::AsyncSeek>::poll_seek","value":"fn poll_seek<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, SeekFrom)\n-> Poll<io::Result<u64>>","parent":{"krate":25,"index":47},"children":[],"decl_id":{"krate":25,"index":48},"docs":" Seek to an offset, in bytes, in the underlying reader.","sig":null,"attributes":[{"value":"/ Seek to an offset, in bytes, in the underlying reader.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":549711,"byte_end":549769,"line_start":182,"line_end":182,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":549774,"byte_end":549777,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The position used for seeking with `SeekFrom::Current(_)` is the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":549782,"byte_end":549850,"line_start":184,"line_end":184,"column_start":5,"column_end":73}},{"value":"/ position the underlying reader would be at if the `BufReader` had no","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":549855,"byte_end":549927,"line_start":185,"line_end":185,"column_start":5,"column_end":77}},{"value":"/ internal buffer.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":549932,"byte_end":549952,"line_start":186,"line_end":186,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":549957,"byte_end":549960,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Seeking always discards the internal buffer, even if the seek position","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":549965,"byte_end":550039,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/ would otherwise fall within it. This guarantees that calling","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":550044,"byte_end":550108,"line_start":189,"line_end":189,"column_start":5,"column_end":69}},{"value":"/ `.into_inner()` immediately after a seek yields the underlying reader","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":550113,"byte_end":550186,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ at the same position.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":550191,"byte_end":550216,"line_start":191,"line_end":191,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":550221,"byte_end":550224,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ To seek without discarding the internal buffer, use","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":550229,"byte_end":550284,"line_start":193,"line_end":193,"column_start":5,"column_end":60}},{"value":"/ [`BufReader::seek_relative`](BufReader::seek_relative) or","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":550289,"byte_end":550350,"line_start":194,"line_end":194,"column_start":5,"column_end":66}},{"value":"/ [`BufReader::poll_seek_relative`](BufReader::poll_seek_relative).","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":550355,"byte_end":550424,"line_start":195,"line_end":195,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":550429,"byte_end":550432,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ See [`AsyncSeek`](futures_io::AsyncSeek) for more details.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":550437,"byte_end":550499,"line_start":197,"line_end":197,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":550504,"byte_end":550507,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Note: In the edge case where you're seeking with `SeekFrom::Current(n)`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":550512,"byte_end":550587,"line_start":199,"line_end":199,"column_start":5,"column_end":80}},{"value":"/ where `n` minus the internal buffer length overflows an `i64`, two","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":550592,"byte_end":550662,"line_start":200,"line_end":200,"column_start":5,"column_end":75}},{"value":"/ seeks will be performed instead of one. If the second seek returns","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":550667,"byte_end":550737,"line_start":201,"line_end":201,"column_start":5,"column_end":75}},{"value":"/ `Err`, the underlying reader will be left at the same position it would","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":550742,"byte_end":550817,"line_start":202,"line_end":202,"column_start":5,"column_end":80}},{"value":"/ have if you called `seek` with `SeekFrom::Current(0)`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":550822,"byte_end":550880,"line_start":203,"line_end":203,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":15508},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":552505,"byte_end":552517,"line_start":238,"line_end":238,"column_start":12,"column_end":24},"name":"SeeKRelative","qualname":"::io::buf_reader::SeeKRelative","value":"SeeKRelative {  }","parent":null,"children":[{"krate":0,"index":15511},{"krate":0,"index":15512},{"krate":0,"index":15513}],"decl_id":null,"docs":" Future for the [`BufReader::seek_relative`](self::BufReader::seek_relative) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`BufReader::seek_relative`](self::BufReader::seek_relative) method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":552340,"byte_end":552427,"line_start":235,"line_end":235,"column_start":1,"column_end":88}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":552445,"byte_end":552493,"line_start":237,"line_end":237,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6911},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":552721,"byte_end":552725,"line_start":250,"line_end":250,"column_start":8,"column_end":12},"name":"poll","qualname":"<SeeKRelative as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15518},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":554592,"byte_end":554601,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":15520},{"krate":0,"index":15521},{"krate":0,"index":15522}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6975},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":554876,"byte_end":554879,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":554734,"byte_end":554826,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":554831,"byte_end":554864,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6976},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":555041,"byte_end":555054,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":554964,"byte_end":555029,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6978},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":556177,"byte_end":556183,"line_start":84,"line_end":84,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"fn buffer<'_>(&'_ Self) -> &'_ [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":556109,"byte_end":556165,"line_start":83,"line_end":83,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":6987},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":558345,"byte_end":558355,"line_start":152,"line_end":152,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<BufWriter<W> as futures_io::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6988},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":558793,"byte_end":558812,"line_start":167,"line_end":167,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<BufWriter<W> as futures_io::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6990},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":559349,"byte_end":559359,"line_start":183,"line_end":183,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<BufWriter<W> as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6991},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":559538,"byte_end":559548,"line_start":188,"line_end":188,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<BufWriter<W> as futures_io::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6998},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":559957,"byte_end":559960,"line_start":203,"line_end":203,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BufWriter<W> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7001},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":560467,"byte_end":560476,"line_start":216,"line_end":216,"column_start":8,"column_end":17},"name":"poll_seek","qualname":"<BufWriter<W> as futures_io::AsyncSeek>::poll_seek","value":"fn poll_seek<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, SeekFrom)\n-> Poll<io::Result<u64>>","parent":{"krate":25,"index":47},"children":[],"decl_id":{"krate":25,"index":48},"docs":" Seek to the offset, in bytes, in the underlying writer.","sig":null,"attributes":[{"value":"/ Seek to the offset, in bytes, in the underlying writer.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":560322,"byte_end":560381,"line_start":213,"line_end":213,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":560386,"byte_end":560389,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Seeking always writes out the internal buffer before seeking.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":560394,"byte_end":560459,"line_start":215,"line_end":215,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":15567},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":561272,"byte_end":561282,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"LineWriter","qualname":"::io::line_writer::LineWriter","value":"LineWriter {  }","parent":null,"children":[{"krate":0,"index":15569}],"decl_id":null,"docs":" Wrap a writer, like [`BufWriter`] does, but prioritizes buffering lines","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7036},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":561537,"byte_end":561540,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<LineWriter<W>>::new","value":"fn new(W) -> LineWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `LineWriter` with default buffer capacity. The default is currently 1KB\n which was taken from `std::io::LineWriter`\n","sig":null,"attributes":[{"value":"/ Create a new `LineWriter` with default buffer capacity. The default is currently 1KB","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":561386,"byte_end":561474,"line_start":26,"line_end":26,"column_start":5,"column_end":93}},{"value":"/ which was taken from `std::io::LineWriter`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":561479,"byte_end":561525,"line_start":27,"line_end":27,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":7037},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":561706,"byte_end":561719,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<LineWriter<W>>::with_capacity","value":"fn with_capacity(usize, W) -> LineWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LineWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `LineWriter` with the specified buffer capacity.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":561628,"byte_end":561694,"line_start":32,"line_end":32,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":7039},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":562293,"byte_end":562299,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"buffer","qualname":"<LineWriter<W>>::buffer","value":"fn buffer<'_>(&'_ Self) -> &'_ [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to `buf_writer`'s internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to `buf_writer`'s internally buffered data.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":562214,"byte_end":562281,"line_start":46,"line_end":46,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7040},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":562477,"byte_end":562484,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<LineWriter<W>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> &'_ W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying sink or stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying sink or stream that this combinator is","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":562362,"byte_end":562443,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ pulling from.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":562448,"byte_end":562465,"line_start":52,"line_end":52,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":7043},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":562601,"byte_end":562611,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<LineWriter<W> as futures_io::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7044},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":563990,"byte_end":564009,"line_start":100,"line_end":100,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<LineWriter<W> as futures_io::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7051},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":565596,"byte_end":565606,"line_start":147,"line_end":147,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<LineWriter<W> as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":45},"docs":" Forward to `buf_writer` 's `BufWriter::poll_flush()`\n","sig":null,"attributes":[{"value":"/ Forward to `buf_writer` 's `BufWriter::poll_flush()`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":565532,"byte_end":565588,"line_start":146,"line_end":146,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":7052},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":565814,"byte_end":565824,"line_start":152,"line_end":152,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<LineWriter<W> as futures_io::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":46},"docs":" Forward to `buf_writer` 's `BufWriter::poll_close()`\n","sig":null,"attributes":[{"value":"/ Forward to `buf_writer` 's `BufWriter::poll_close()`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":565750,"byte_end":565806,"line_start":151,"line_end":151,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":15603},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":566321,"byte_end":566326,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":15606},{"krate":0,"index":15607},{"krate":0,"index":15608}],"decl_id":null,"docs":" Reader for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7093},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":566692,"byte_end":566699,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> (&'_ T, &'_ U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":566618,"byte_end":566680,"line_start":30,"line_end":30,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":7094},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":567031,"byte_end":567038,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> (&'_ mut T, &'_ mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":566768,"byte_end":566838,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":566843,"byte_end":566846,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":566851,"byte_end":566924,"line_start":37,"line_end":37,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":566929,"byte_end":567002,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":567007,"byte_end":567019,"line_start":39,"line_end":39,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":7095},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":567397,"byte_end":567408,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"fn get_pin_mut<'_>(Pin<&'_ mut Self>) -> (Pin<&'_ mut T>, Pin<&'_ mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":567127,"byte_end":567204,"line_start":44,"line_end":44,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":567209,"byte_end":567212,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":567217,"byte_end":567290,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":567295,"byte_end":567368,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":567373,"byte_end":567385,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":7096},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":567611,"byte_end":567621,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":567543,"byte_end":567599,"line_start":54,"line_end":54,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":7100},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":567774,"byte_end":567777,"line_start":65,"line_end":65,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Chain<T, U> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7104},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":568107,"byte_end":568116,"line_start":79,"line_end":79,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Chain<T, U> as futures_io::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":25,"index":39},"children":[],"decl_id":{"krate":25,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7105},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":568553,"byte_end":568571,"line_start":95,"line_end":95,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<Chain<T, U> as futures_io::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":25,"index":39},"children":[],"decl_id":{"krate":25,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7110},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":569187,"byte_end":569200,"line_start":119,"line_end":119,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Chain<T, U> as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<&'_ [u8]>>","parent":{"krate":25,"index":49},"children":[],"decl_id":{"krate":25,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7111},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":569633,"byte_end":569640,"line_start":133,"line_end":133,"column_start":8,"column_end":15},"name":"consume","qualname":"<Chain<T, U> as futures_io::AsyncBufRead>::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":25,"index":49},"children":[],"decl_id":{"krate":25,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15652},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/close.rs","byte_start":570151,"byte_end":570156,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::io::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":15655}],"decl_id":null,"docs":" Future for the [`close`](super::AsyncWriteExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::AsyncWriteExt::close) method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/close.rs","byte_start":569989,"byte_end":570054,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/close.rs","byte_start":570072,"byte_end":570139,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7144},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/close.rs","byte_start":570496,"byte_end":570500,"line_start":25,"line_end":25,"column_start":8,"column_end":12},"name":"poll","qualname":"<Close as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7185},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":571709,"byte_end":571713,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"copy","qualname":"::io::copy::copy","value":"fn copy<R, W, '_>(R, &'_ mut W) -> Copy where R: AsyncRead, W: AsyncWrite +\nUnpin + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":570860,"byte_end":570935,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":570936,"byte_end":570939,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncRead` into the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":570940,"byte_end":571023,"line_start":11,"line_end":11,"column_start":1,"column_end":84}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":571024,"byte_end":571104,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":571105,"byte_end":571177,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":571178,"byte_end":571191,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":571192,"byte_end":571195,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":571196,"byte_end":571243,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":571244,"byte_end":571247,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":571248,"byte_end":571262,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":571263,"byte_end":571266,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":571267,"byte_end":571274,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":571275,"byte_end":571316,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":571317,"byte_end":571368,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":571369,"byte_end":571372,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":571373,"byte_end":571416,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":571417,"byte_end":571464,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":571465,"byte_end":571468,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy(reader, &mut writer).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":571469,"byte_end":571522,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/ writer.close().await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":571523,"byte_end":571549,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":571550,"byte_end":571553,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":571554,"byte_end":571579,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":571580,"byte_end":571633,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":571634,"byte_end":571693,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":571694,"byte_end":571701,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15660},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":572058,"byte_end":572062,"line_start":46,"line_end":46,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":15664}],"decl_id":null,"docs":" Future for the [`copy()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7192},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":572274,"byte_end":572278,"line_start":55,"line_end":55,"column_start":8,"column_end":12},"name":"poll","qualname":"<Copy as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7230},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":573462,"byte_end":573470,"line_start":34,"line_end":34,"column_start":8,"column_end":16},"name":"copy_buf","qualname":"::io::copy_buf::copy_buf","value":"fn copy_buf<R, W, '_>(R, &'_ mut W) -> CopyBuf where R: AsyncBufRead,\nW: AsyncWrite + Unpin + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":572606,"byte_end":572681,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":572682,"byte_end":572685,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncBufRead` into the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":572686,"byte_end":572772,"line_start":11,"line_end":11,"column_start":1,"column_end":87}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":572773,"byte_end":572853,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":572854,"byte_end":572926,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":572927,"byte_end":572940,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":572941,"byte_end":572944,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":572945,"byte_end":572992,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":572993,"byte_end":572996,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":572997,"byte_end":573011,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":573012,"byte_end":573015,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":573016,"byte_end":573023,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":573024,"byte_end":573065,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":573066,"byte_end":573117,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":573118,"byte_end":573121,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":573122,"byte_end":573165,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":573166,"byte_end":573213,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":573214,"byte_end":573217,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy_buf(reader, &mut writer).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":573218,"byte_end":573275,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/ writer.close().await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":573276,"byte_end":573302,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":573303,"byte_end":573306,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":573307,"byte_end":573332,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":573333,"byte_end":573386,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":573387,"byte_end":573446,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":573447,"byte_end":573454,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15714},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":573803,"byte_end":573810,"line_start":46,"line_end":46,"column_start":16,"column_end":23},"name":"CopyBuf","qualname":"::io::copy_buf::CopyBuf","value":"CopyBuf {  }","parent":null,"children":[{"krate":0,"index":15718},{"krate":0,"index":15719},{"krate":0,"index":15720}],"decl_id":null,"docs":" Future for the [`copy_buf()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7237},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":574067,"byte_end":574071,"line_start":61,"line_end":61,"column_start":8,"column_end":12},"name":"poll","qualname":"<CopyBuf as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7288},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":576273,"byte_end":576291,"line_start":47,"line_end":47,"column_start":8,"column_end":26},"name":"copy_buf_abortable","qualname":"::io::copy_buf_abortable::copy_buf_abortable","value":"fn copy_buf_abortable<R, W, '_>(R, &'_ mut W)\n-> (CopyBufAbortable, AbortHandle) where R: AsyncBufRead, W: AsyncWrite +\nUnpin + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another, with its `AbortHandle`.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another, with its `AbortHandle`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":575026,"byte_end":575125,"line_start":11,"line_end":11,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":575126,"byte_end":575129,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncBufRead` into the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":575130,"byte_end":575216,"line_start":13,"line_end":13,"column_start":1,"column_end":87}},{"value":"/ `writer` specified. This future will only complete once abort has been requested or the `reader` has hit","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":575217,"byte_end":575325,"line_start":14,"line_end":14,"column_start":1,"column_end":109}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":575326,"byte_end":575398,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":575399,"byte_end":575412,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":575413,"byte_end":575416,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned. If aborted, `Aborted` is returned. Otherwise, the underlying error is returned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":575417,"byte_end":575544,"line_start":18,"line_end":18,"column_start":1,"column_end":128}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":575545,"byte_end":575548,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":575549,"byte_end":575563,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":575564,"byte_end":575567,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":575568,"byte_end":575575,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":575576,"byte_end":575617,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":575618,"byte_end":575669,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/ use futures::future::Aborted;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":575670,"byte_end":575703,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":575704,"byte_end":575707,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":575708,"byte_end":575751,"line_start":27,"line_end":27,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":575752,"byte_end":575799,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":575800,"byte_end":575803,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let (fut, abort_handle) = io::copy_buf_abortable(reader, &mut writer);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":575804,"byte_end":575878,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ let bytes = fut.await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":575879,"byte_end":575905,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ abort_handle.abort();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":575906,"byte_end":575931,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"/ writer.close().await.unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":575932,"byte_end":575966,"line_start":33,"line_end":33,"column_start":1,"column_end":35}},{"value":"/ match bytes {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":575967,"byte_end":575984,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/     Ok(Ok(n)) => {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":575985,"byte_end":576007,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/         assert_eq!(n, 4);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":576008,"byte_end":576037,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/         assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":576038,"byte_end":576099,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/         Ok(n)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":576100,"byte_end":576117,"line_start":38,"line_end":38,"column_start":1,"column_end":18}},{"value":"/     },","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":576118,"byte_end":576128,"line_start":39,"line_end":39,"column_start":1,"column_end":11}},{"value":"/     Ok(Err(a)) => {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":576129,"byte_end":576152,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/         Err::<u64, Aborted>(a)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":576153,"byte_end":576187,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":576188,"byte_end":576197,"line_start":42,"line_end":42,"column_start":1,"column_end":10}},{"value":"/     Err(e) => panic!(\"{}\", e)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":576198,"byte_end":576231,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":576232,"byte_end":576237,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ #  }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":576238,"byte_end":576257,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":576258,"byte_end":576265,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15776},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":576745,"byte_end":576761,"line_start":63,"line_end":63,"column_start":16,"column_end":32},"name":"CopyBufAbortable","qualname":"::io::copy_buf_abortable::CopyBufAbortable","value":"CopyBufAbortable {  }","parent":null,"children":[{"krate":0,"index":15780},{"krate":0,"index":15781},{"krate":0,"index":15782},{"krate":0,"index":15783}],"decl_id":null,"docs":" Future for the [`copy_buf()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7296},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":577272,"byte_end":577276,"line_start":88,"line_end":88,"column_start":8,"column_end":12},"name":"poll","qualname":"<CopyBufAbortable as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15842},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":579847,"byte_end":579853,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":15844}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`AsyncSeek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":579080,"byte_end":579143,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ [`AsyncSeek`] implementation.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":579144,"byte_end":579177,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":579178,"byte_end":579181,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":579182,"byte_end":579250,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`AsyncRead`] and/or [`AsyncWrite`],","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":579251,"byte_end":579333,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":579334,"byte_end":579413,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":579414,"byte_end":579439,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":579440,"byte_end":579443,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This library implements some I/O traits on various types which","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":579444,"byte_end":579510,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":579511,"byte_end":579578,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":579579,"byte_end":579612,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":579613,"byte_end":579616,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: trait.AsyncSeek.html","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":579617,"byte_end":579656,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait.AsyncRead.html","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":579657,"byte_end":579696,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: trait.AsyncWrite.html","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":579697,"byte_end":579738,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":579739,"byte_end":579802,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":7342},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580433,"byte_end":580436,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":579912,"byte_end":579987,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":579992,"byte_end":579995,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580000,"byte_end":580074,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580079,"byte_end":580147,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580152,"byte_end":580190,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580195,"byte_end":580198,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580203,"byte_end":580217,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580222,"byte_end":580225,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580230,"byte_end":580237,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580242,"byte_end":580270,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580275,"byte_end":580278,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580283,"byte_end":580322,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580327,"byte_end":580375,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580380,"byte_end":580409,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580414,"byte_end":580421,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7343},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580860,"byte_end":580870,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580515,"byte_end":580572,"line_start":49,"line_end":49,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580577,"byte_end":580580,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580585,"byte_end":580599,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580604,"byte_end":580607,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580612,"byte_end":580619,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580624,"byte_end":580652,"line_start":54,"line_end":54,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580657,"byte_end":580660,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580665,"byte_end":580704,"line_start":56,"line_end":56,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580709,"byte_end":580757,"line_start":57,"line_end":57,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580762,"byte_end":580791,"line_start":58,"line_end":58,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580796,"byte_end":580799,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580804,"byte_end":580836,"line_start":60,"line_end":60,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580841,"byte_end":580848,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7344},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581278,"byte_end":581285,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> &'_ T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580927,"byte_end":580987,"line_start":66,"line_end":66,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":580992,"byte_end":580995,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581000,"byte_end":581014,"line_start":68,"line_end":68,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581019,"byte_end":581022,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581027,"byte_end":581034,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581039,"byte_end":581067,"line_start":71,"line_end":71,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581072,"byte_end":581075,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581080,"byte_end":581119,"line_start":73,"line_end":73,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581124,"byte_end":581172,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581177,"byte_end":581206,"line_start":75,"line_end":75,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581211,"byte_end":581214,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581219,"byte_end":581254,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581259,"byte_end":581266,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7345},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581857,"byte_end":581864,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581341,"byte_end":581409,"line_start":83,"line_end":83,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581414,"byte_end":581417,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581422,"byte_end":581495,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581500,"byte_end":581562,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581567,"byte_end":581570,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581575,"byte_end":581589,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581594,"byte_end":581597,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581602,"byte_end":581609,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581614,"byte_end":581642,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581647,"byte_end":581650,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581655,"byte_end":581698,"line_start":93,"line_end":93,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581703,"byte_end":581751,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581756,"byte_end":581785,"line_start":95,"line_end":95,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581790,"byte_end":581793,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581798,"byte_end":581833,"line_start":97,"line_end":97,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581838,"byte_end":581845,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7346},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582522,"byte_end":582530,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"fn position<'_>(&'_ Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581928,"byte_end":581976,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581981,"byte_end":581984,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":581989,"byte_end":582003,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582008,"byte_end":582011,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582016,"byte_end":582023,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582028,"byte_end":582069,"line_start":108,"line_end":108,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncSeekExt, Cursor, SeekFrom};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582074,"byte_end":582128,"line_start":109,"line_end":109,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582133,"byte_end":582136,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582141,"byte_end":582193,"line_start":111,"line_end":111,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582198,"byte_end":582201,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582206,"byte_end":582241,"line_start":113,"line_end":113,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582246,"byte_end":582249,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582254,"byte_end":582297,"line_start":115,"line_end":115,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582302,"byte_end":582337,"line_start":116,"line_end":116,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582342,"byte_end":582345,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582350,"byte_end":582394,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582399,"byte_end":582434,"line_start":119,"line_end":119,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582439,"byte_end":582498,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582503,"byte_end":582510,"line_start":121,"line_end":121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7347},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582998,"byte_end":583010,"line_start":143,"line_end":143,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"fn set_position<'_>(&'_ mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582588,"byte_end":582625,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582630,"byte_end":582633,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582638,"byte_end":582652,"line_start":128,"line_end":128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582657,"byte_end":582660,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582665,"byte_end":582672,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582677,"byte_end":582705,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582710,"byte_end":582713,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582718,"byte_end":582770,"line_start":133,"line_end":133,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582775,"byte_end":582778,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582783,"byte_end":582818,"line_start":135,"line_end":135,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582823,"byte_end":582826,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582831,"byte_end":582856,"line_start":137,"line_end":137,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582861,"byte_end":582896,"line_start":138,"line_end":138,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582901,"byte_end":582904,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582909,"byte_end":582934,"line_start":140,"line_end":140,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582939,"byte_end":582974,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":582979,"byte_end":582986,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7350},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":583155,"byte_end":583164,"line_start":152,"line_end":152,"column_start":8,"column_end":17},"name":"poll_seek","qualname":"<Cursor<T> as futures_io::AsyncSeek>::poll_seek","value":"fn poll_seek<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, SeekFrom)\n-> Poll<io::Result<u64>>","parent":{"krate":25,"index":47},"children":[],"decl_id":{"krate":25,"index":48},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7353},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":583569,"byte_end":583578,"line_start":168,"line_end":168,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Cursor<T> as futures_io::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":25,"index":39},"children":[],"decl_id":{"krate":25,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7354},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":583776,"byte_end":583794,"line_start":176,"line_end":176,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<Cursor<T> as futures_io::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":25,"index":39},"children":[],"decl_id":{"krate":25,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7357},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":584086,"byte_end":584099,"line_start":189,"line_end":189,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Cursor<T> as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<&'_ [u8]>>","parent":{"krate":25,"index":49},"children":[],"decl_id":{"krate":25,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7358},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":584256,"byte_end":584263,"line_start":193,"line_end":193,"column_start":8,"column_end":15},"name":"consume","qualname":"<Cursor<T> as futures_io::AsyncBufRead>::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":25,"index":49},"children":[],"decl_id":{"krate":25,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7391},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":585780,"byte_end":585785,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":7392}],"decl_id":null,"docs":" Reader for the [`empty()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`empty()`] function.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":585679,"byte_end":585719,"line_start":7,"line_end":7,"column_start":1,"column_end":41}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":585720,"byte_end":585768,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":7393},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":586345,"byte_end":586350,"line_start":31,"line_end":31,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to an empty reader.","sig":null,"attributes":[{"value":"/ Constructs a new handle to an empty reader.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":585806,"byte_end":585853,"line_start":13,"line_end":13,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":585854,"byte_end":585857,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All reads from the returned reader will return `Poll::Ready(Ok(0))`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":585858,"byte_end":585930,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":585931,"byte_end":585934,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":585935,"byte_end":585949,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":585950,"byte_end":585953,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ A slightly sad example of not reading anything into a buffer:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":585954,"byte_end":586019,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":586020,"byte_end":586023,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":586024,"byte_end":586031,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":586032,"byte_end":586073,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":586074,"byte_end":586116,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":586117,"byte_end":586120,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":586121,"byte_end":586156,"line_start":25,"line_end":25,"column_start":1,"column_end":36}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":586157,"byte_end":586190,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":586191,"byte_end":586237,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ assert!(buffer.is_empty());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":586238,"byte_end":586269,"line_start":28,"line_end":28,"column_start":1,"column_end":32}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":586270,"byte_end":586329,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":586330,"byte_end":586337,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7395},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":586439,"byte_end":586448,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Empty as futures_io::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":25,"index":39},"children":[],"decl_id":{"krate":25,"index":40},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":586422,"byte_end":586431,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7397},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":586653,"byte_end":586666,"line_start":48,"line_end":48,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Empty as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<&'_ [u8]>>","parent":{"krate":25,"index":49},"children":[],"decl_id":{"krate":25,"index":50},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":586636,"byte_end":586645,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7398},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":586795,"byte_end":586802,"line_start":52,"line_end":52,"column_start":8,"column_end":15},"name":"consume","qualname":"<Empty as futures_io::AsyncBufRead>::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":25,"index":49},"children":[],"decl_id":{"krate":25,"index":51},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":586778,"byte_end":586787,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7400},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":586876,"byte_end":586879,"line_start":56,"line_end":56,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Empty as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15870},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/fill_buf.rs","byte_start":587279,"byte_end":587286,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"FillBuf","qualname":"::io::fill_buf::FillBuf","value":"FillBuf {  }","parent":null,"children":[{"krate":0,"index":15873}],"decl_id":null,"docs":" Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/fill_buf.rs","byte_start":587109,"byte_end":587182,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/fill_buf.rs","byte_start":587200,"byte_end":587267,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7438},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/fill_buf.rs","byte_start":587673,"byte_end":587677,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"poll","qualname":"<FillBuf as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15878},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/flush.rs","byte_start":589058,"byte_end":589063,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::io::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":15881}],"decl_id":null,"docs":" Future for the [`flush`](super::AsyncWriteExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::AsyncWriteExt::flush) method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/flush.rs","byte_start":588896,"byte_end":588961,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/flush.rs","byte_start":588979,"byte_end":589046,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7471},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/flush.rs","byte_start":589416,"byte_end":589420,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"poll","qualname":"<Flush as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15886},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/lines.rs","byte_start":589983,"byte_end":589988,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":15888},{"krate":0,"index":15889},{"krate":0,"index":15890},{"krate":0,"index":15891}],"decl_id":null,"docs":" Stream for the [`lines`](super::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7513},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/lines.rs","byte_start":590348,"byte_end":590357,"line_start":33,"line_end":33,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Lines<R> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15934},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read.rs","byte_start":591170,"byte_end":591174,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Read","qualname":"::io::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":15937},{"krate":0,"index":15938}],"decl_id":null,"docs":" Future for the [`read`](super::AsyncReadExt::read) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read`](super::AsyncReadExt::read) method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read.rs","byte_start":591011,"byte_end":591073,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read.rs","byte_start":591091,"byte_end":591158,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7546},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read.rs","byte_start":591559,"byte_end":591563,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"poll","qualname":"<Read as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15943},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_vectored.rs","byte_start":592066,"byte_end":592078,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"ReadVectored","qualname":"::io::read_vectored::ReadVectored","value":"ReadVectored {  }","parent":null,"children":[{"krate":0,"index":15946},{"krate":0,"index":15947}],"decl_id":null,"docs":" Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_vectored.rs","byte_start":591889,"byte_end":591969,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_vectored.rs","byte_start":591987,"byte_end":592054,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7583},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_vectored.rs","byte_start":592514,"byte_end":592518,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadVectored as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15952},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_exact.rs","byte_start":593044,"byte_end":593053,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadExact","qualname":"::io::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":15955},{"krate":0,"index":15956}],"decl_id":null,"docs":" Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_exact.rs","byte_start":592873,"byte_end":592947,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_exact.rs","byte_start":592965,"byte_end":593032,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7622},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_exact.rs","byte_start":593450,"byte_end":593454,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadExact as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15961},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_line.rs","byte_start":594381,"byte_end":594389,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"ReadLine","qualname":"::io::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":15964},{"krate":0,"index":15965},{"krate":0,"index":15966},{"krate":0,"index":15967}],"decl_id":null,"docs":" Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_line.rs","byte_start":594209,"byte_end":594284,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_line.rs","byte_start":594302,"byte_end":594369,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7670},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_line.rs","byte_start":595614,"byte_end":595618,"line_start":53,"line_end":53,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadLine as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15972},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_end.rs","byte_start":596179,"byte_end":596188,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":15975},{"krate":0,"index":15976},{"krate":0,"index":15977}],"decl_id":null,"docs":" Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_end.rs","byte_start":596006,"byte_end":596082,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_end.rs","byte_start":596100,"byte_end":596167,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7717},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_end.rs","byte_start":598574,"byte_end":598578,"line_start":87,"line_end":87,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadToEnd as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15982},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_string.rs","byte_start":599194,"byte_end":599206,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"ReadToString","qualname":"::io::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":15985},{"krate":0,"index":15986},{"krate":0,"index":15987},{"krate":0,"index":15988}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_string.rs","byte_start":599015,"byte_end":599097,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_string.rs","byte_start":599115,"byte_end":599182,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7769},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_string.rs","byte_start":600446,"byte_end":600450,"line_start":55,"line_end":55,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadToString as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15993},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_until.rs","byte_start":601026,"byte_end":601035,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadUntil","qualname":"::io::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":15996},{"krate":0,"index":15997},{"krate":0,"index":15998},{"krate":0,"index":15999}],"decl_id":null,"docs":" Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_until.rs","byte_start":600852,"byte_end":600929,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_until.rs","byte_start":600947,"byte_end":601014,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7810},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_until.rs","byte_start":602279,"byte_end":602283,"line_start":56,"line_end":56,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadUntil as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7841},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":602748,"byte_end":602754,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":7842}],"decl_id":null,"docs":" Reader for the [`repeat()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`repeat()`] function.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":602646,"byte_end":602687,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":602688,"byte_end":602736,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":7843},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":603311,"byte_end":603317,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":602774,"byte_end":602843,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":602844,"byte_end":602847,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":602848,"byte_end":602928,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ the given byte.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":602929,"byte_end":602948,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":602949,"byte_end":602952,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":602953,"byte_end":602967,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":602968,"byte_end":602971,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":602972,"byte_end":602979,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":602980,"byte_end":603021,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":603022,"byte_end":603064,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":603065,"byte_end":603068,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":603069,"byte_end":603097,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ let mut reader = io::repeat(0b101);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":603098,"byte_end":603137,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ reader.read_exact(&mut buffer).await.unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":603138,"byte_end":603188,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":603189,"byte_end":603235,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":603236,"byte_end":603295,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":603296,"byte_end":603303,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7845},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":603412,"byte_end":603421,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Repeat as futures_io::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":25,"index":39},"children":[],"decl_id":{"krate":25,"index":40},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":603395,"byte_end":603404,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7846},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":603677,"byte_end":603695,"line_start":49,"line_end":49,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<Repeat as futures_io::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":25,"index":39},"children":[],"decl_id":{"krate":25,"index":41},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":603660,"byte_end":603669,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7848},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":604045,"byte_end":604048,"line_start":63,"line_end":63,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Repeat as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16004},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/seek.rs","byte_start":604450,"byte_end":604454,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":16007},{"krate":0,"index":16008}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/seek.rs","byte_start":604287,"byte_end":604353,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/seek.rs","byte_start":604371,"byte_end":604438,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7889},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/seek.rs","byte_start":604823,"byte_end":604827,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"poll","qualname":"<Seek as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7917},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":605224,"byte_end":605228,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":7918}],"decl_id":null,"docs":" Writer for the [`sink()`] function.\n","sig":null,"attributes":[{"value":"/ Writer for the [`sink()`] function.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":605124,"byte_end":605163,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"must_use = \"writers do nothing unless polled\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":605164,"byte_end":605212,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":7919},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":605836,"byte_end":605840,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a writer which will successfully consume all data.","sig":null,"attributes":[{"value":"/ Creates an instance of a writer which will successfully consume all data.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":605249,"byte_end":605326,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":605327,"byte_end":605330,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All calls to `poll_write` on the returned instance will return `Poll::Ready(Ok(buf.len()))`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":605331,"byte_end":605426,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ and the contents of the buffer will not be inspected.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":605427,"byte_end":605484,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":605485,"byte_end":605488,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":605489,"byte_end":605503,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":605504,"byte_end":605507,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":605508,"byte_end":605519,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":605520,"byte_end":605561,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":605562,"byte_end":605605,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":605606,"byte_end":605609,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let buffer = vec![1, 2, 3, 5, 8];","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":605610,"byte_end":605647,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":605648,"byte_end":605680,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ let num_bytes = writer.write(&buffer).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":605681,"byte_end":605730,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":605731,"byte_end":605760,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":605761,"byte_end":605820,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":605821,"byte_end":605828,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7921},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":605927,"byte_end":605937,"line_start":36,"line_end":36,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Sink as futures_io::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":43},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":605910,"byte_end":605919,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7922},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":606116,"byte_end":606135,"line_start":45,"line_end":45,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<Sink as futures_io::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":44},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":606099,"byte_end":606108,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7924},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":606349,"byte_end":606359,"line_start":54,"line_end":54,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Sink as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":45},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":606332,"byte_end":606341,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7925},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":606484,"byte_end":606494,"line_start":58,"line_end":58,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Sink as futures_io::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":46},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":606467,"byte_end":606476,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7927},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":606635,"byte_end":606638,"line_start":64,"line_end":64,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Sink as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16013},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":607027,"byte_end":607035,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":16015}],"decl_id":null,"docs":" The readable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The readable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":606930,"byte_end":606998,"line_start":9,"line_end":9,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":16019},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":607164,"byte_end":607173,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":16021}],"decl_id":null,"docs":" The writable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The writable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":607067,"byte_end":607135,"line_start":15,"line_end":15,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":7980},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":607906,"byte_end":607913,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"reunite","qualname":"<ReadHalf<T>>::reunite","value":"fn reunite(Self, WriteHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":607660,"byte_end":607737,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":607742,"byte_end":607813,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":607818,"byte_end":607894,"line_start":37,"line_end":37,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":7984},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":608415,"byte_end":608422,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"reunite","qualname":"<WriteHalf<T>>::reunite","value":"fn reunite(Self, ReadHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":608169,"byte_end":608246,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":608251,"byte_end":608322,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":608327,"byte_end":608403,"line_start":48,"line_end":48,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":7987},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":608572,"byte_end":608581,"line_start":55,"line_end":55,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<ReadHalf<R> as futures_io::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":25,"index":39},"children":[],"decl_id":{"krate":25,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7989},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":608786,"byte_end":608804,"line_start":63,"line_end":63,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<ReadHalf<R> as futures_io::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":25,"index":39},"children":[],"decl_id":{"krate":25,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7993},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":609084,"byte_end":609094,"line_start":73,"line_end":73,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<WriteHalf<W> as futures_io::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7995},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":609296,"byte_end":609315,"line_start":81,"line_end":81,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<WriteHalf<W> as futures_io::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7997},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":609537,"byte_end":609547,"line_start":89,"line_end":89,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<WriteHalf<W> as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7999},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":609698,"byte_end":609708,"line_start":93,"line_end":93,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<WriteHalf<W> as futures_io::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":25,"index":42},"children":[],"decl_id":{"krate":25,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8001},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":610010,"byte_end":610022,"line_start":100,"line_end":100,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::io::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves\n of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":609854,"byte_end":609929,"line_start":98,"line_end":98,"column_start":1,"column_end":76}},{"value":"/ of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":609930,"byte_end":609998,"line_start":99,"line_end":99,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":8004},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":610026,"byte_end":610041,"line_start":100,"line_end":100,"column_start":28,"column_end":43},"name":"0","qualname":"::io::split::ReuniteError::0","value":"io::split::ReadHalf<T>","parent":{"krate":0,"index":8001},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8005},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":610043,"byte_end":610059,"line_start":100,"line_end":100,"column_start":45,"column_end":61},"name":"1","qualname":"::io::split::ReuniteError::1","value":"io::split::WriteHalf<T>","parent":{"krate":0,"index":8001},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8008},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":610111,"byte_end":610114,"line_start":103,"line_end":103,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ReuniteError<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8011},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":610287,"byte_end":610290,"line_start":109,"line_end":109,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ReuniteError<T> as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16025},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":610902,"byte_end":610906,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":16027},{"krate":0,"index":16028}],"decl_id":null,"docs":" Reader for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8058},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":611851,"byte_end":611856,"line_start":47,"line_end":47,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"fn limit<'_>(&'_ Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":611098,"byte_end":611151,"line_start":24,"line_end":24,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":611156,"byte_end":611202,"line_start":25,"line_end":25,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":611207,"byte_end":611210,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":611215,"byte_end":611225,"line_start":27,"line_end":27,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":611230,"byte_end":611233,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":611238,"byte_end":611315,"line_start":29,"line_end":29,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":611320,"byte_end":611389,"line_start":30,"line_end":30,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":611394,"byte_end":611397,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":611402,"byte_end":611416,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":611421,"byte_end":611424,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":611429,"byte_end":611436,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":611441,"byte_end":611482,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":611487,"byte_end":611531,"line_start":36,"line_end":36,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":611536,"byte_end":611539,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":611544,"byte_end":611591,"line_start":38,"line_end":38,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 2];","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":611596,"byte_end":611624,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":611629,"byte_end":611632,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":611637,"byte_end":611671,"line_start":41,"line_end":41,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":611676,"byte_end":611718,"line_start":42,"line_end":42,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":611723,"byte_end":611726,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(take.limit(), 2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":611731,"byte_end":611763,"line_start":44,"line_end":44,"column_start":5,"column_end":37}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":611768,"byte_end":611827,"line_start":45,"line_end":45,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":611832,"byte_end":611839,"line_start":46,"line_end":46,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8059},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612767,"byte_end":612776,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"fn set_limit<'_>(&'_ mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":611903,"byte_end":611974,"line_start":51,"line_end":51,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":611979,"byte_end":612053,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612058,"byte_end":612133,"line_start":53,"line_end":53,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612138,"byte_end":612162,"line_start":54,"line_end":54,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612167,"byte_end":612170,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612175,"byte_end":612189,"line_start":56,"line_end":56,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612194,"byte_end":612197,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612202,"byte_end":612209,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612214,"byte_end":612255,"line_start":59,"line_end":59,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612260,"byte_end":612304,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612309,"byte_end":612312,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612317,"byte_end":612364,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 4];","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612369,"byte_end":612397,"line_start":63,"line_end":63,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612402,"byte_end":612405,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612410,"byte_end":612444,"line_start":65,"line_end":65,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612449,"byte_end":612491,"line_start":66,"line_end":66,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612496,"byte_end":612499,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612504,"byte_end":612525,"line_start":68,"line_end":68,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(take.limit(), 0);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612530,"byte_end":612562,"line_start":69,"line_end":69,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612567,"byte_end":612570,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ take.set_limit(10);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612575,"byte_end":612598,"line_start":71,"line_end":71,"column_start":5,"column_end":28}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612603,"byte_end":612645,"line_start":72,"line_end":72,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612650,"byte_end":612671,"line_start":73,"line_end":73,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612676,"byte_end":612679,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612684,"byte_end":612743,"line_start":75,"line_end":75,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612748,"byte_end":612755,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8062},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612931,"byte_end":612940,"line_start":85,"line_end":85,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Take<R> as futures_io::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":25,"index":39},"children":[],"decl_id":{"krate":25,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8065},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":613445,"byte_end":613458,"line_start":104,"line_end":104,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Take<R> as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<&'_ [u8]>>","parent":{"krate":25,"index":49},"children":[],"decl_id":{"krate":25,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8066},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":613907,"byte_end":613914,"line_start":117,"line_end":117,"column_start":8,"column_end":15},"name":"consume","qualname":"<Take<R> as futures_io::AsyncBufRead>::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":25,"index":49},"children":[],"decl_id":{"krate":25,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16069},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":615200,"byte_end":615206,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Window","qualname":"::io::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":16071},{"krate":0,"index":16072}],"decl_id":null,"docs":" A owned window around an underlying buffer.","sig":null,"attributes":[{"value":"/ A owned window around an underlying buffer.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":614245,"byte_end":614292,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":614293,"byte_end":614296,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Normally slices work great for considering sub-portions of a buffer, but","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":614297,"byte_end":614373,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ unfortunately a slice is a *borrowed* type in Rust which has an associated","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":614374,"byte_end":614452,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ lifetime. When working with future and async I/O these lifetimes are not","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":614453,"byte_end":614529,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ always appropriate, and are sometimes difficult to store in tasks. This","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":614530,"byte_end":614605,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ type strives to fill this gap by providing an \"owned slice\" around an","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":614606,"byte_end":614679,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ underlying buffer of bytes.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":614680,"byte_end":614711,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":614712,"byte_end":614715,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A `Window<T>` wraps an underlying buffer, `T`, and has configurable","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":614716,"byte_end":614787,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ start/end indexes to alter the behavior of the `AsRef<[u8]>` implementation","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":614788,"byte_end":614867,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that this type carries.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":614868,"byte_end":614895,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":614896,"byte_end":614899,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type can be particularly useful when working with the `write_all`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":614900,"byte_end":614974,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ combinator in this crate. Data can be sliced via `Window`, consumed by","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":614975,"byte_end":615049,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ `write_all`, and then earned back once the write operation finishes through","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":615050,"byte_end":615129,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ the `into_inner` method on this type.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":615130,"byte_end":615171,"line_start":19,"line_end":19,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":8083},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":615515,"byte_end":615518,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Window<T>>::new","value":"fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new window around the buffer `t` defaulting to the entire\n slice.","sig":null,"attributes":[{"value":"/ Creates a new window around the buffer `t` defaulting to the entire","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":615291,"byte_end":615362,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ slice.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":615367,"byte_end":615377,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":615382,"byte_end":615385,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Further methods can be called on the returned `Window<T>` to alter the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":615390,"byte_end":615464,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ window into the data provided.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":615469,"byte_end":615503,"line_start":31,"line_end":31,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":8084},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":615697,"byte_end":615704,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Window<T>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> &'_ T","parent":null,"children":[],"decl_id":null,"docs":" Gets a shared reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a shared reference to the underlying buffer inside of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":615600,"byte_end":615667,"line_start":36,"line_end":36,"column_start":5,"column_end":72}},{"value":"/ `Window`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":615672,"byte_end":615685,"line_start":37,"line_end":37,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":8085},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":615849,"byte_end":615856,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Window<T>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying buffer inside of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":615751,"byte_end":615819,"line_start":42,"line_end":42,"column_start":5,"column_end":73}},{"value":"/ `Window`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":615824,"byte_end":615837,"line_start":43,"line_end":43,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":8086},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":615987,"byte_end":615997,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Window<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Window`, returning the underlying buffer.\n","sig":null,"attributes":[{"value":"/ Consumes this `Window`, returning the underlying buffer.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":615915,"byte_end":615975,"line_start":48,"line_end":48,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":8087},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":616138,"byte_end":616143,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"start","qualname":"<Window<T>>::start","value":"fn start<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the starting index of this window into the underlying buffer","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":616041,"byte_end":616113,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":616118,"byte_end":616126,"line_start":54,"line_end":54,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":8088},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":616290,"byte_end":616293,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"end","qualname":"<Window<T>>::end","value":"fn end<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the end index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the end index of this window into the underlying buffer","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":616198,"byte_end":616265,"line_start":59,"line_end":59,"column_start":5,"column_end":72}},{"value":"/ `T`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":616270,"byte_end":616278,"line_start":60,"line_end":60,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":8089},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":616739,"byte_end":616742,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"set","qualname":"<Window<T>>::set","value":"fn set<R, '_>(&'_ mut Self, R) where R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Changes the range of this window to the range specified.","sig":null,"attributes":[{"value":"/ Changes the range of this window to the range specified.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":616346,"byte_end":616406,"line_start":65,"line_end":65,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":616411,"byte_end":616414,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":616419,"byte_end":616431,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":616436,"byte_end":616439,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `range` is out of bounds for the underlying","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":616444,"byte_end":616517,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ slice or if [`start_bound()`] of `range` comes after the [`end_bound()`].","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":616522,"byte_end":616599,"line_start":70,"line_end":70,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":616604,"byte_end":616607,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`start_bound()`]: std::ops::RangeBounds::start_bound","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":616612,"byte_end":616669,"line_start":72,"line_end":72,"column_start":5,"column_end":62}},{"value":"/ [`end_bound()`]: std::ops::RangeBounds::end_bound","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":616674,"byte_end":616727,"line_start":73,"line_end":73,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":8093},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":617370,"byte_end":617376,"line_start":95,"line_end":95,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Window<T> as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8096},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":617523,"byte_end":617529,"line_start":101,"line_end":101,"column_start":8,"column_end":14},"name":"as_mut","qualname":"<Window<T> as std::convert::AsMut>::as_mut","value":"fn as_mut<'_>(&'_ mut Self) -> &'_ mut [u8]","parent":{"krate":2,"index":3163},"children":[],"decl_id":{"krate":2,"index":3165},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16076},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write.rs","byte_start":617929,"byte_end":617934,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Write","qualname":"::io::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":16079},{"krate":0,"index":16080}],"decl_id":null,"docs":" Future for the [`write`](super::AsyncWriteExt::write) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write`](super::AsyncWriteExt::write) method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write.rs","byte_start":617767,"byte_end":617832,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write.rs","byte_start":617850,"byte_end":617917,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8129},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write.rs","byte_start":618316,"byte_end":618320,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"poll","qualname":"<Write as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16085},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_vectored.rs","byte_start":618825,"byte_end":618838,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"WriteVectored","qualname":"::io::write_vectored::WriteVectored","value":"WriteVectored {  }","parent":null,"children":[{"krate":0,"index":16088},{"krate":0,"index":16089}],"decl_id":null,"docs":" Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_vectored.rs","byte_start":618645,"byte_end":618728,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_vectored.rs","byte_start":618746,"byte_end":618813,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8166},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_vectored.rs","byte_start":619265,"byte_end":619269,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"poll","qualname":"<WriteVectored as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16094},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_all.rs","byte_start":619797,"byte_end":619805,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"WriteAll","qualname":"::io::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":16097},{"krate":0,"index":16098}],"decl_id":null,"docs":" Future for the [`write_all`](super::AsyncWriteExt::write_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_all`](super::AsyncWriteExt::write_all) method.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_all.rs","byte_start":619627,"byte_end":619700,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_all.rs","byte_start":619718,"byte_end":619785,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8205},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_all.rs","byte_start":620193,"byte_end":620197,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"poll","qualname":"<WriteAll as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":8209},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":514050,"byte_end":514062,"line_start":148,"line_end":148,"column_start":11,"column_end":23},"name":"AsyncReadExt","qualname":"::io::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":8210},{"krate":0,"index":8212},{"krate":0,"index":8214},{"krate":0,"index":8216},{"krate":0,"index":8218},{"krate":0,"index":8220},{"krate":0,"index":8222},{"krate":0,"index":8223}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncRead` types.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":513968,"byte_end":514039,"line_start":147,"line_end":147,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":8210},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":514915,"byte_end":514920,"line_start":172,"line_end":172,"column_start":8,"column_end":13},"name":"chain","qualname":"::io::AsyncReadExt::chain","value":"fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":8209},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this stream with another.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":514080,"byte_end":514145,"line_start":149,"line_end":149,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":514150,"byte_end":514153,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ The returned `AsyncRead` instance will first read all bytes from this object","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":514158,"byte_end":514238,"line_start":151,"line_end":151,"column_start":5,"column_end":85}},{"value":"/ until EOF is encountered. Afterwards the output is equivalent to the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":514243,"byte_end":514315,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ output of `next`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":514320,"byte_end":514341,"line_start":153,"line_end":153,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":514346,"byte_end":514349,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":514354,"byte_end":514368,"line_start":155,"line_end":155,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":514373,"byte_end":514376,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":514381,"byte_end":514388,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":514393,"byte_end":514434,"line_start":158,"line_end":158,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":514439,"byte_end":514483,"line_start":159,"line_end":159,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":514488,"byte_end":514491,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let reader1 = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":514496,"byte_end":514540,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/ let reader2 = Cursor::new([5, 6, 7, 8]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":514545,"byte_end":514589,"line_start":162,"line_end":162,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":514594,"byte_end":514597,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ let mut reader = reader1.chain(reader2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":514602,"byte_end":514646,"line_start":164,"line_end":164,"column_start":5,"column_end":49}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":514651,"byte_end":514683,"line_start":165,"line_end":165,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":514688,"byte_end":514691,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ // read the value into a Vec.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":514696,"byte_end":514729,"line_start":167,"line_end":167,"column_start":5,"column_end":38}},{"value":"/ reader.read_to_end(&mut buffer).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":514734,"byte_end":514777,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buffer, [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":514782,"byte_end":514831,"line_start":169,"line_end":169,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":514836,"byte_end":514895,"line_start":170,"line_end":170,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":514900,"byte_end":514907,"line_start":171,"line_end":171,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8212},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":515973,"byte_end":515977,"line_start":204,"line_end":204,"column_start":8,"column_end":12},"name":"read","qualname":"::io::AsyncReadExt::read","value":"fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":8209},"children":[],"decl_id":null,"docs":" Tries to read some bytes directly into the given `buf` in asynchronous\n manner, returning a future type.","sig":null,"attributes":[{"value":"/ Tries to read some bytes directly into the given `buf` in asynchronous","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":515071,"byte_end":515145,"line_start":180,"line_end":180,"column_start":5,"column_end":79}},{"value":"/ manner, returning a future type.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":515150,"byte_end":515186,"line_start":181,"line_end":181,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":515191,"byte_end":515194,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":515199,"byte_end":515277,"line_start":183,"line_end":183,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":515282,"byte_end":515309,"line_start":184,"line_end":184,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":515314,"byte_end":515317,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":515322,"byte_end":515336,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":515341,"byte_end":515344,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":515349,"byte_end":515356,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":515361,"byte_end":515402,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":515407,"byte_end":515451,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":515456,"byte_end":515459,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":515464,"byte_end":515511,"line_start":192,"line_end":192,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":515516,"byte_end":515546,"line_start":193,"line_end":193,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":515551,"byte_end":515554,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read(&mut output[..]).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":515559,"byte_end":515611,"line_start":195,"line_end":195,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":515616,"byte_end":515619,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ // This is only guaranteed to be 4 because `&[u8]` is a synchronous","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":515624,"byte_end":515695,"line_start":197,"line_end":197,"column_start":5,"column_end":76}},{"value":"/ // reader. In a real system you could get anywhere from 1 to","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":515700,"byte_end":515764,"line_start":198,"line_end":198,"column_start":5,"column_end":69}},{"value":"/ // `output.len()` bytes in a single read.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":515769,"byte_end":515814,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":515819,"byte_end":515844,"line_start":200,"line_end":200,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":515849,"byte_end":515889,"line_start":201,"line_end":201,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":515894,"byte_end":515953,"line_start":202,"line_end":202,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":515958,"byte_end":515965,"line_start":203,"line_end":203,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8214},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":516383,"byte_end":516396,"line_start":216,"line_end":216,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"::io::AsyncReadExt::read_vectored","value":"fn read_vectored<'a>(&'a mut Self, &'a mut [IoSliceMut]) -> ReadVectored where\nSelf: Unpin","parent":{"krate":0,"index":8209},"children":[],"decl_id":null,"docs":" Creates a future which will read from the `AsyncRead` into `bufs` using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will read from the `AsyncRead` into `bufs` using vectored","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":516145,"byte_end":516229,"line_start":211,"line_end":211,"column_start":5,"column_end":89}},{"value":"/ IO operations.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":516234,"byte_end":516252,"line_start":212,"line_end":212,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":516257,"byte_end":516260,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":516265,"byte_end":516343,"line_start":214,"line_end":214,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":516348,"byte_end":516375,"line_start":215,"line_end":215,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8216},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517807,"byte_end":517817,"line_start":260,"line_end":260,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::AsyncReadExt::read_exact","value":"fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where Self: Unpin","parent":{"krate":0,"index":8209},"children":[],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if end of file (EOF) is hit sooner.","sig":null,"attributes":[{"value":"/ Creates a future which will read exactly enough bytes to fill `buf`,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":516594,"byte_end":516666,"line_start":223,"line_end":223,"column_start":5,"column_end":77}},{"value":"/ returning an error if end of file (EOF) is hit sooner.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":516671,"byte_end":516729,"line_start":224,"line_end":224,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":516734,"byte_end":516737,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve once the read operation is completed.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":516742,"byte_end":516816,"line_start":226,"line_end":226,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":516821,"byte_end":516824,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":516829,"byte_end":516906,"line_start":228,"line_end":228,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":516911,"byte_end":516933,"line_start":229,"line_end":229,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":516938,"byte_end":516941,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":516946,"byte_end":516960,"line_start":231,"line_end":231,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":516965,"byte_end":516968,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":516973,"byte_end":516980,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":516985,"byte_end":517026,"line_start":234,"line_end":234,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517031,"byte_end":517075,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517080,"byte_end":517083,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517088,"byte_end":517135,"line_start":237,"line_end":237,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 4];","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517140,"byte_end":517170,"line_start":238,"line_end":238,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517175,"byte_end":517178,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ reader.read_exact(&mut output).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517183,"byte_end":517225,"line_start":240,"line_end":240,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517230,"byte_end":517233,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517238,"byte_end":517275,"line_start":242,"line_end":242,"column_start":5,"column_end":42}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517280,"byte_end":517339,"line_start":243,"line_end":243,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517344,"byte_end":517351,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517356,"byte_end":517359,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ## EOF is hit before `buf` is filled","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517364,"byte_end":517404,"line_start":246,"line_end":246,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517409,"byte_end":517412,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517417,"byte_end":517424,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517429,"byte_end":517470,"line_start":249,"line_end":249,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517475,"byte_end":517525,"line_start":250,"line_end":250,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517530,"byte_end":517533,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517538,"byte_end":517585,"line_start":252,"line_end":252,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517590,"byte_end":517620,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517625,"byte_end":517628,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ let result = reader.read_exact(&mut output).await;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517633,"byte_end":517687,"line_start":255,"line_end":255,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517692,"byte_end":517695,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result.unwrap_err().kind(), io::ErrorKind::UnexpectedEof);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517700,"byte_end":517773,"line_start":257,"line_end":257,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517778,"byte_end":517787,"line_start":258,"line_end":258,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517792,"byte_end":517799,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8218},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":518622,"byte_end":518633,"line_start":286,"line_end":286,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::AsyncReadExt::read_to_end","value":"fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":8209},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":517992,"byte_end":518065,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":518070,"byte_end":518073,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":518078,"byte_end":518136,"line_start":269,"line_end":269,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":518141,"byte_end":518144,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":518149,"byte_end":518163,"line_start":271,"line_end":271,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":518168,"byte_end":518171,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":518176,"byte_end":518183,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":518188,"byte_end":518229,"line_start":274,"line_end":274,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":518234,"byte_end":518278,"line_start":275,"line_end":275,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":518283,"byte_end":518286,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":518291,"byte_end":518338,"line_start":277,"line_end":277,"column_start":5,"column_end":52}},{"value":"/ let mut output = Vec::with_capacity(4);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":518343,"byte_end":518386,"line_start":278,"line_end":278,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":518391,"byte_end":518394,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_end(&mut output).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":518399,"byte_end":518454,"line_start":280,"line_end":280,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":518459,"byte_end":518462,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":518467,"byte_end":518492,"line_start":282,"line_end":282,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":518497,"byte_end":518538,"line_start":283,"line_end":283,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":518543,"byte_end":518602,"line_start":284,"line_end":284,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":518607,"byte_end":518614,"line_start":285,"line_end":285,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8220},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":519454,"byte_end":519468,"line_start":312,"line_end":312,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::io::AsyncReadExt::read_to_string","value":"fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":8209},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":518814,"byte_end":518887,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":518892,"byte_end":518895,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":518900,"byte_end":518958,"line_start":295,"line_end":295,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":518963,"byte_end":518966,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":518971,"byte_end":518985,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":518990,"byte_end":518993,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":518998,"byte_end":519005,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":519010,"byte_end":519051,"line_start":300,"line_end":300,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":519056,"byte_end":519100,"line_start":301,"line_end":301,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":519105,"byte_end":519108,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new(&b\"1234\"[..]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":519113,"byte_end":519160,"line_start":303,"line_end":303,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = String::with_capacity(4);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":519165,"byte_end":519211,"line_start":304,"line_end":304,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":519216,"byte_end":519219,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":519224,"byte_end":519282,"line_start":306,"line_end":306,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":519287,"byte_end":519290,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":519295,"byte_end":519320,"line_start":308,"line_end":308,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffer, String::from(\"1234\"));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":519325,"byte_end":519370,"line_start":309,"line_end":309,"column_start":5,"column_end":50}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":519375,"byte_end":519434,"line_start":310,"line_end":310,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":519439,"byte_end":519446,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8222},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":520811,"byte_end":520816,"line_start":348,"line_end":348,"column_start":8,"column_end":13},"name":"split","qualname":"::io::AsyncReadExt::split","value":"fn split(Self) -> (ReadHalf<Self>, WriteHalf<Self>) where Self: AsyncWrite +\nSized","parent":{"krate":0,"index":8209},"children":[],"decl_id":null,"docs":" Helper method for splitting this read/write object into two halves.","sig":null,"attributes":[{"value":"/ Helper method for splitting this read/write object into two halves.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":519654,"byte_end":519725,"line_start":319,"line_end":319,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":519730,"byte_end":519733,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ The two halves returned implement the `AsyncRead` and `AsyncWrite`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":519738,"byte_end":519808,"line_start":321,"line_end":321,"column_start":5,"column_end":75}},{"value":"/ traits, respectively.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":519813,"byte_end":519838,"line_start":322,"line_end":322,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":519843,"byte_end":519846,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":519851,"byte_end":519865,"line_start":324,"line_end":324,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":519870,"byte_end":519873,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":519878,"byte_end":519885,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":519890,"byte_end":519931,"line_start":327,"line_end":327,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":519936,"byte_end":519986,"line_start":328,"line_end":328,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":519991,"byte_end":519994,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ // Note that for `Cursor` the read and write halves share a single","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":519999,"byte_end":520069,"line_start":330,"line_end":330,"column_start":5,"column_end":75}},{"value":"/ // seek position. This may or may not be true for other types that","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":520074,"byte_end":520144,"line_start":331,"line_end":331,"column_start":5,"column_end":75}},{"value":"/ // implement both `AsyncRead` and `AsyncWrite`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":520149,"byte_end":520200,"line_start":332,"line_end":332,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":520205,"byte_end":520208,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":520213,"byte_end":520256,"line_start":334,"line_end":334,"column_start":5,"column_end":48}},{"value":"/ let mut buffer = Cursor::new(vec![0, 0, 0, 0, 5, 6, 7, 8]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":520261,"byte_end":520324,"line_start":335,"line_end":335,"column_start":5,"column_end":68}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":520329,"byte_end":520376,"line_start":336,"line_end":336,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":520381,"byte_end":520384,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":520389,"byte_end":520394,"line_start":338,"line_end":338,"column_start":5,"column_end":10}},{"value":"/     let (buffer_reader, mut buffer_writer) = (&mut buffer).split();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":520399,"byte_end":520470,"line_start":339,"line_end":339,"column_start":5,"column_end":76}},{"value":"/     io::copy(reader, &mut buffer_writer).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":520475,"byte_end":520527,"line_start":340,"line_end":340,"column_start":5,"column_end":57}},{"value":"/     io::copy(buffer_reader, &mut writer).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":520532,"byte_end":520584,"line_start":341,"line_end":341,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":520589,"byte_end":520594,"line_start":342,"line_end":342,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":520599,"byte_end":520602,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffer.into_inner(), [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":520607,"byte_end":520669,"line_start":344,"line_end":344,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(writer.into_inner(), [5, 6, 7, 8, 0]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":520674,"byte_end":520727,"line_start":345,"line_end":345,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":520732,"byte_end":520791,"line_start":346,"line_end":346,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":520796,"byte_end":520803,"line_start":347,"line_end":347,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8223},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":521597,"byte_end":521601,"line_start":375,"line_end":375,"column_start":8,"column_end":12},"name":"take","qualname":"::io::AsyncReadExt::take","value":"fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":8209},"children":[],"decl_id":null,"docs":" Creates an AsyncRead adapter which will read at most `limit` bytes\n from the underlying reader.","sig":null,"attributes":[{"value":"/ Creates an AsyncRead adapter which will read at most `limit` bytes","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":521004,"byte_end":521074,"line_start":356,"line_end":356,"column_start":5,"column_end":75}},{"value":"/ from the underlying reader.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":521079,"byte_end":521110,"line_start":357,"line_end":357,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":521115,"byte_end":521118,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":521123,"byte_end":521137,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":521142,"byte_end":521145,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":521150,"byte_end":521157,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":521162,"byte_end":521203,"line_start":362,"line_end":362,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":521208,"byte_end":521252,"line_start":363,"line_end":363,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":521257,"byte_end":521260,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":521265,"byte_end":521312,"line_start":365,"line_end":365,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":521317,"byte_end":521345,"line_start":366,"line_end":366,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":521350,"byte_end":521353,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":521358,"byte_end":521392,"line_start":368,"line_end":368,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":521397,"byte_end":521439,"line_start":369,"line_end":369,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":521444,"byte_end":521447,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":521452,"byte_end":521473,"line_start":371,"line_end":371,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(&buffer, b\"1234\\0\");","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":521478,"byte_end":521513,"line_start":372,"line_end":372,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":521518,"byte_end":521577,"line_start":373,"line_end":373,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":521582,"byte_end":521589,"line_start":374,"line_end":374,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":8226},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":522410,"byte_end":522423,"line_start":401,"line_end":401,"column_start":11,"column_end":24},"name":"AsyncWriteExt","qualname":"::io::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":8227},{"krate":0,"index":8228},{"krate":0,"index":8229},{"krate":0,"index":8231},{"krate":0,"index":8233}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncWrite` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncWrite` types.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":522327,"byte_end":522399,"line_start":400,"line_end":400,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":8227},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":523164,"byte_end":523169,"line_start":424,"line_end":424,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::AsyncWriteExt::flush","value":"fn flush<'_>(&'_ mut Self) -> Flush where Self: Unpin","parent":{"krate":0,"index":8226},"children":[],"decl_id":null,"docs":" Creates a future which will entirely flush this `AsyncWrite`.","sig":null,"attributes":[{"value":"/ Creates a future which will entirely flush this `AsyncWrite`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":522442,"byte_end":522507,"line_start":402,"line_end":402,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":522512,"byte_end":522515,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":522520,"byte_end":522534,"line_start":404,"line_end":404,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":522539,"byte_end":522542,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":522547,"byte_end":522554,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":522559,"byte_end":522600,"line_start":407,"line_end":407,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AllowStdIo, AsyncWriteExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":522605,"byte_end":522654,"line_start":408,"line_end":408,"column_start":5,"column_end":54}},{"value":"/ use std::io::{BufWriter, Cursor};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":522659,"byte_end":522696,"line_start":409,"line_end":409,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":522701,"byte_end":522704,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let mut output = vec![0u8; 5];","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":522709,"byte_end":522743,"line_start":411,"line_end":411,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":522748,"byte_end":522751,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":522756,"byte_end":522761,"line_start":413,"line_end":413,"column_start":5,"column_end":10}},{"value":"/     let writer = Cursor::new(&mut output);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":522766,"byte_end":522812,"line_start":414,"line_end":414,"column_start":5,"column_end":51}},{"value":"/     let mut buffered = AllowStdIo::new(BufWriter::new(writer));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":522817,"byte_end":522884,"line_start":415,"line_end":415,"column_start":5,"column_end":72}},{"value":"/     buffered.write_all(&[1, 2]).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":522889,"byte_end":522932,"line_start":416,"line_end":416,"column_start":5,"column_end":48}},{"value":"/     buffered.write_all(&[3, 4]).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":522937,"byte_end":522980,"line_start":417,"line_end":417,"column_start":5,"column_end":48}},{"value":"/     buffered.flush().await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":522985,"byte_end":523017,"line_start":418,"line_end":418,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":523022,"byte_end":523027,"line_start":419,"line_end":419,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":523032,"byte_end":523035,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":523040,"byte_end":523080,"line_start":421,"line_end":421,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":523085,"byte_end":523144,"line_start":422,"line_end":422,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":523149,"byte_end":523156,"line_start":423,"line_end":423,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8228},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":523378,"byte_end":523383,"line_start":432,"line_end":432,"column_start":8,"column_end":13},"name":"close","qualname":"::io::AsyncWriteExt::close","value":"fn close<'_>(&'_ mut Self) -> Close where Self: Unpin","parent":{"krate":0,"index":8226},"children":[],"decl_id":null,"docs":" Creates a future which will entirely close this `AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Creates a future which will entirely close this `AsyncWrite`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":523305,"byte_end":523370,"line_start":431,"line_end":431,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":8229},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":523725,"byte_end":523730,"line_start":443,"line_end":443,"column_start":8,"column_end":13},"name":"write","qualname":"::io::AsyncWriteExt::write","value":"fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":8226},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `buf` into the object.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":523519,"byte_end":523590,"line_start":439,"line_end":439,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":523595,"byte_end":523598,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":523603,"byte_end":523685,"line_start":441,"line_end":441,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":523690,"byte_end":523717,"line_start":442,"line_end":442,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8231},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":524140,"byte_end":524154,"line_start":455,"line_end":455,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"::io::AsyncWriteExt::write_vectored","value":"fn write_vectored<'a>(&'a mut Self, &'a [IoSlice]) -> WriteVectored where\nSelf: Unpin","parent":{"krate":0,"index":8226},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `bufs` into the object using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `bufs` into the object using vectored","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":523896,"byte_end":523982,"line_start":450,"line_end":450,"column_start":5,"column_end":91}},{"value":"/ IO operations.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":523987,"byte_end":524005,"line_start":451,"line_end":451,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":524010,"byte_end":524013,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":524018,"byte_end":524100,"line_start":453,"line_end":453,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":524105,"byte_end":524132,"line_start":454,"line_end":454,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8233},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":525000,"byte_end":525009,"line_start":482,"line_end":482,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::AsyncWriteExt::write_all","value":"fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":8226},"children":[],"decl_id":null,"docs":" Write data into this object.","sig":null,"attributes":[{"value":"/ Write data into this object.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":524347,"byte_end":524379,"line_start":462,"line_end":462,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":524384,"byte_end":524387,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ Creates a future that will write the entire contents of the buffer `buf` into","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":524392,"byte_end":524473,"line_start":464,"line_end":464,"column_start":5,"column_end":86}},{"value":"/ this `AsyncWrite`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":524478,"byte_end":524500,"line_start":465,"line_end":465,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":524505,"byte_end":524508,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ The returned future will not complete until all the data has been written.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":524513,"byte_end":524591,"line_start":467,"line_end":467,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":524596,"byte_end":524599,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":524604,"byte_end":524618,"line_start":469,"line_end":469,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":524623,"byte_end":524626,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":524631,"byte_end":524638,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":524643,"byte_end":524684,"line_start":472,"line_end":472,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncWriteExt, Cursor};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":524689,"byte_end":524734,"line_start":473,"line_end":473,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":524739,"byte_end":524742,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":524747,"byte_end":524794,"line_start":475,"line_end":475,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":524799,"byte_end":524802,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ writer.write_all(&[1, 2, 3, 4]).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":524807,"byte_end":524850,"line_start":477,"line_end":477,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":524855,"byte_end":524858,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":524863,"byte_end":524916,"line_start":479,"line_end":479,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":524921,"byte_end":524980,"line_start":480,"line_end":480,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":524985,"byte_end":524992,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":8237},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":528865,"byte_end":528877,"line_start":595,"line_end":595,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":8238},{"krate":0,"index":8239}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncSeek` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncSeek` types.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":528783,"byte_end":528854,"line_start":594,"line_end":594,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":8238},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":529147,"byte_end":529151,"line_start":601,"line_end":601,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::AsyncSeekExt::seek","value":"fn seek<'_>(&'_ mut Self, SeekFrom) -> Seek where Self: Unpin","parent":{"krate":0,"index":8237},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":528895,"byte_end":528964,"line_start":596,"line_end":596,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":528969,"byte_end":529022,"line_start":597,"line_end":597,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":529027,"byte_end":529030,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":529035,"byte_end":529112,"line_start":599,"line_end":599,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":529117,"byte_end":529139,"line_start":600,"line_end":600,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":8239},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":529489,"byte_end":529504,"line_start":612,"line_end":612,"column_start":8,"column_end":23},"name":"stream_position","qualname":"::io::AsyncSeekExt::stream_position","value":"fn stream_position<'_>(&'_ mut Self) -> Seek where Self: Unpin","parent":{"krate":0,"index":8237},"children":[],"decl_id":null,"docs":" Creates a future which will return the current seek position from the\n start of the stream.","sig":null,"attributes":[{"value":"/ Creates a future which will return the current seek position from the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":529306,"byte_end":529379,"line_start":608,"line_end":608,"column_start":5,"column_end":78}},{"value":"/ start of the stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":529384,"byte_end":529408,"line_start":609,"line_end":609,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":529413,"byte_end":529416,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `self.seek(SeekFrom::Current(0))`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":529421,"byte_end":529481,"line_start":611,"line_end":611,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":8242},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":529756,"byte_end":529771,"line_start":623,"line_end":623,"column_start":11,"column_end":26},"name":"AsyncBufReadExt","qualname":"::io::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":8243},{"krate":0,"index":8244},{"krate":0,"index":8245},{"krate":0,"index":8247},{"krate":0,"index":8249}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncBufRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncBufRead` types.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":529671,"byte_end":529745,"line_start":622,"line_end":622,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":8243},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":530725,"byte_end":530733,"line_start":647,"line_end":647,"column_start":8,"column_end":16},"name":"fill_buf","qualname":"::io::AsyncBufReadExt::fill_buf","value":"fn fill_buf<'_>(&'_ mut Self) -> FillBuf where Self: Unpin","parent":{"krate":0,"index":8242},"children":[],"decl_id":null,"docs":" Creates a future which will wait for a non-empty buffer to be available from this I/O\n object or EOF to be reached.","sig":null,"attributes":[{"value":"/ Creates a future which will wait for a non-empty buffer to be available from this I/O","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":529792,"byte_end":529881,"line_start":624,"line_end":624,"column_start":5,"column_end":94}},{"value":"/ object or EOF to be reached.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":529886,"byte_end":529918,"line_start":625,"line_end":625,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":529923,"byte_end":529926,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ This method is the async equivalent to [`BufRead::fill_buf`](std::io::BufRead::fill_buf).","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":529931,"byte_end":530024,"line_start":627,"line_end":627,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":530029,"byte_end":530032,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":530037,"byte_end":530048,"line_start":629,"line_end":629,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":530053,"byte_end":530094,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":530099,"byte_end":530178,"line_start":631,"line_end":631,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":530183,"byte_end":530186,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3]), Ok(vec![4, 5, 6])]).into_async_read();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":530191,"byte_end":530279,"line_start":633,"line_end":633,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":530284,"byte_end":530287,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":530292,"byte_end":530348,"line_start":635,"line_end":635,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":530353,"byte_end":530381,"line_start":636,"line_end":636,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":530386,"byte_end":530389,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":530394,"byte_end":530444,"line_start":638,"line_end":638,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":530449,"byte_end":530477,"line_start":639,"line_end":639,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":530482,"byte_end":530485,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![4, 5, 6]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":530490,"byte_end":530546,"line_start":641,"line_end":641,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(3);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":530551,"byte_end":530579,"line_start":642,"line_end":642,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":530584,"byte_end":530587,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":530592,"byte_end":530641,"line_start":644,"line_end":644,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":530646,"byte_end":530705,"line_start":645,"line_end":645,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":530710,"byte_end":530717,"line_start":646,"line_end":646,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8244},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":531534,"byte_end":531547,"line_start":671,"line_end":671,"column_start":8,"column_end":21},"name":"consume_unpin","qualname":"::io::AsyncBufReadExt::consume_unpin","value":"fn consume_unpin<'_>(&'_ mut Self, usize) where Self: Unpin","parent":{"krate":0,"index":8242},"children":[],"decl_id":null,"docs":" A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","sig":null,"attributes":[{"value":"/ A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":530876,"byte_end":530954,"line_start":654,"line_end":654,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":530959,"byte_end":530962,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":530967,"byte_end":530978,"line_start":656,"line_end":656,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":530983,"byte_end":531024,"line_start":657,"line_end":657,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":531029,"byte_end":531108,"line_start":658,"line_end":658,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":531113,"byte_end":531116,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3])]).into_async_read();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":531121,"byte_end":531190,"line_start":660,"line_end":660,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":531195,"byte_end":531198,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":531203,"byte_end":531259,"line_start":662,"line_end":662,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":531264,"byte_end":531292,"line_start":663,"line_end":663,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":531297,"byte_end":531300,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":531305,"byte_end":531355,"line_start":665,"line_end":665,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":531360,"byte_end":531388,"line_start":666,"line_end":666,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":531393,"byte_end":531396,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":531401,"byte_end":531450,"line_start":668,"line_end":668,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":531455,"byte_end":531514,"line_start":669,"line_end":669,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":531519,"byte_end":531526,"line_start":670,"line_end":670,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8245},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":533238,"byte_end":533248,"line_start":719,"line_end":719,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::AsyncBufReadExt::read_until","value":"fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":8242},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until the delimiter `byte` or EOF is reached.\n This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":531655,"byte_end":531730,"line_start":678,"line_end":678,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until the delimiter `byte` or EOF is reached.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":531735,"byte_end":531802,"line_start":679,"line_end":679,"column_start":5,"column_end":72}},{"value":"/ This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":531807,"byte_end":531904,"line_start":680,"line_end":680,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":531909,"byte_end":531912,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":531917,"byte_end":531987,"line_start":682,"line_end":682,"column_start":5,"column_end":75}},{"value":"/ delimiter or EOF is found. Once found, all bytes up to, and including,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":531992,"byte_end":532066,"line_start":683,"line_end":683,"column_start":5,"column_end":79}},{"value":"/ the delimiter (if found) will be appended to `buf`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532071,"byte_end":532126,"line_start":684,"line_end":684,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532131,"byte_end":532134,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532139,"byte_end":532217,"line_start":686,"line_end":686,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532222,"byte_end":532249,"line_start":687,"line_end":687,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532254,"byte_end":532257,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532262,"byte_end":532339,"line_start":689,"line_end":689,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532344,"byte_end":532366,"line_start":690,"line_end":690,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532371,"byte_end":532374,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532379,"byte_end":532393,"line_start":692,"line_end":692,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532398,"byte_end":532401,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532406,"byte_end":532413,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532418,"byte_end":532459,"line_start":695,"line_end":695,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532464,"byte_end":532511,"line_start":696,"line_end":696,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532516,"byte_end":532519,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"lorem-ipsum\");","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532524,"byte_end":532573,"line_start":698,"line_end":698,"column_start":5,"column_end":54}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532578,"byte_end":532603,"line_start":699,"line_end":699,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532608,"byte_end":532611,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'l'","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532616,"byte_end":532639,"line_start":701,"line_end":701,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532644,"byte_end":532705,"line_start":702,"line_end":702,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 6);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532710,"byte_end":532739,"line_start":703,"line_end":703,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"lorem-\");","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532744,"byte_end":532775,"line_start":704,"line_end":704,"column_start":5,"column_end":36}},{"value":"/ buf.clear();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532780,"byte_end":532796,"line_start":705,"line_end":705,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532801,"byte_end":532804,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'i'","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532809,"byte_end":532832,"line_start":707,"line_end":707,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532837,"byte_end":532898,"line_start":708,"line_end":708,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532903,"byte_end":532932,"line_start":709,"line_end":709,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"ipsum\");","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532937,"byte_end":532967,"line_start":710,"line_end":710,"column_start":5,"column_end":35}},{"value":"/ buf.clear();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532972,"byte_end":532988,"line_start":711,"line_end":711,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":532993,"byte_end":532996,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":533001,"byte_end":533024,"line_start":713,"line_end":713,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":533029,"byte_end":533090,"line_start":714,"line_end":714,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":533095,"byte_end":533124,"line_start":715,"line_end":715,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"\");","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":533129,"byte_end":533154,"line_start":716,"line_end":716,"column_start":5,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":533159,"byte_end":533218,"line_start":717,"line_end":717,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":533223,"byte_end":533230,"line_start":718,"line_end":718,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8247},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535427,"byte_end":535436,"line_start":777,"line_end":777,"column_start":8,"column_end":17},"name":"read_line","qualname":"::io::AsyncBufReadExt::read_line","value":"fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where Self: Unpin","parent":{"krate":0,"index":8242},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until a newline (the 0xA byte) or EOF is reached,\n This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":533445,"byte_end":533520,"line_start":726,"line_end":726,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until a newline (the 0xA byte) or EOF is reached,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":533525,"byte_end":533596,"line_start":727,"line_end":727,"column_start":5,"column_end":76}},{"value":"/ This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":533601,"byte_end":533696,"line_start":728,"line_end":728,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":533701,"byte_end":533704,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":533709,"byte_end":533779,"line_start":730,"line_end":730,"column_start":5,"column_end":75}},{"value":"/ newline delimiter (the 0xA byte) or EOF is found. Once found, all bytes","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":533784,"byte_end":533859,"line_start":731,"line_end":731,"column_start":5,"column_end":80}},{"value":"/ up to, and including, the delimiter (if found) will be appended to","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":533864,"byte_end":533934,"line_start":732,"line_end":732,"column_start":5,"column_end":75}},{"value":"/ `buf`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":533939,"byte_end":533949,"line_start":733,"line_end":733,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":533954,"byte_end":533957,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":533962,"byte_end":534040,"line_start":735,"line_end":735,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534045,"byte_end":534072,"line_start":736,"line_end":736,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534077,"byte_end":534080,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534085,"byte_end":534162,"line_start":738,"line_end":738,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534167,"byte_end":534189,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534194,"byte_end":534197,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534202,"byte_end":534214,"line_start":741,"line_end":741,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534219,"byte_end":534222,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ This function has the same error semantics as [`read_until`] and will","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534227,"byte_end":534300,"line_start":743,"line_end":743,"column_start":5,"column_end":78}},{"value":"/ also return an error if the read bytes are not valid UTF-8. If an I/O","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534305,"byte_end":534378,"line_start":744,"line_end":744,"column_start":5,"column_end":78}},{"value":"/ error is encountered then `buf` may contain some bytes already read in","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534383,"byte_end":534457,"line_start":745,"line_end":745,"column_start":5,"column_end":79}},{"value":"/ the event that all data read so far was valid UTF-8.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534462,"byte_end":534518,"line_start":746,"line_end":746,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534523,"byte_end":534526,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ [`read_until`]: AsyncBufReadExt::read_until","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534531,"byte_end":534578,"line_start":748,"line_end":748,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534583,"byte_end":534586,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534591,"byte_end":534605,"line_start":750,"line_end":750,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534610,"byte_end":534613,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534618,"byte_end":534625,"line_start":752,"line_end":752,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534630,"byte_end":534671,"line_start":753,"line_end":753,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534676,"byte_end":534723,"line_start":754,"line_end":754,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534728,"byte_end":534731,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"foo\\nbar\");","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534736,"byte_end":534782,"line_start":756,"line_end":756,"column_start":5,"column_end":51}},{"value":"/ let mut buf = String::new();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534787,"byte_end":534819,"line_start":757,"line_end":757,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534824,"byte_end":534827,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'f'","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534832,"byte_end":534855,"line_start":759,"line_end":759,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534860,"byte_end":534914,"line_start":760,"line_end":760,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 4);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534919,"byte_end":534948,"line_start":761,"line_end":761,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"foo\\n\");","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534953,"byte_end":534982,"line_start":762,"line_end":762,"column_start":5,"column_end":34}},{"value":"/ buf.clear();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534987,"byte_end":535003,"line_start":763,"line_end":763,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535008,"byte_end":535011,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'b'","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535016,"byte_end":535039,"line_start":765,"line_end":765,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535044,"byte_end":535098,"line_start":766,"line_end":766,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 3);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535103,"byte_end":535132,"line_start":767,"line_end":767,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"bar\");","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535137,"byte_end":535164,"line_start":768,"line_end":768,"column_start":5,"column_end":32}},{"value":"/ buf.clear();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535169,"byte_end":535185,"line_start":769,"line_end":769,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535190,"byte_end":535193,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535198,"byte_end":535221,"line_start":771,"line_end":771,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535226,"byte_end":535280,"line_start":772,"line_end":772,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535285,"byte_end":535314,"line_start":773,"line_end":773,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"\");","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535319,"byte_end":535343,"line_start":774,"line_end":774,"column_start":5,"column_end":29}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535348,"byte_end":535407,"line_start":775,"line_end":775,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535412,"byte_end":535419,"line_start":776,"line_end":776,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8249},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536960,"byte_end":536965,"line_start":816,"line_end":816,"column_start":8,"column_end":13},"name":"lines","qualname":"::io::AsyncBufReadExt::lines","value":"fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":8242},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[{"value":"/ Returns a stream over the lines of this reader.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535614,"byte_end":535665,"line_start":784,"line_end":784,"column_start":5,"column_end":56}},{"value":"/ This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535670,"byte_end":535757,"line_start":785,"line_end":785,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535762,"byte_end":535765,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ The stream returned from this function will yield instances of","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535770,"byte_end":535836,"line_start":787,"line_end":787,"column_start":5,"column_end":71}},{"value":"/ [`io::Result`]`<`[`String`]`>`. Each string returned will *not* have a newline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535841,"byte_end":535923,"line_start":788,"line_end":788,"column_start":5,"column_end":87}},{"value":"/ byte (the 0xA byte) or CRLF (0xD, 0xA bytes) at the end.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535928,"byte_end":535988,"line_start":789,"line_end":789,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535993,"byte_end":535996,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536001,"byte_end":536036,"line_start":791,"line_end":791,"column_start":5,"column_end":40}},{"value":"/ [`String`]: String","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536041,"byte_end":536063,"line_start":792,"line_end":792,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536068,"byte_end":536071,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536076,"byte_end":536088,"line_start":794,"line_end":794,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536093,"byte_end":536096,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ Each line of the stream has the same error semantics as [`AsyncBufReadExt::read_line`].","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536101,"byte_end":536192,"line_start":796,"line_end":796,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536197,"byte_end":536200,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ [`AsyncBufReadExt::read_line`]: AsyncBufReadExt::read_line","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536205,"byte_end":536267,"line_start":798,"line_end":798,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536272,"byte_end":536275,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536280,"byte_end":536294,"line_start":800,"line_end":800,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536299,"byte_end":536302,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536307,"byte_end":536314,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536319,"byte_end":536360,"line_start":803,"line_end":803,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536365,"byte_end":536412,"line_start":804,"line_end":804,"column_start":5,"column_end":52}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536417,"byte_end":536452,"line_start":805,"line_end":805,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536457,"byte_end":536460,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ let cursor = Cursor::new(b\"lorem\\nipsum\\r\\ndolor\");","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536465,"byte_end":536520,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536525,"byte_end":536528,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ let mut lines_stream = cursor.lines().map(|l| l.unwrap());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536533,"byte_end":536595,"line_start":809,"line_end":809,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"lorem\")));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536600,"byte_end":536671,"line_start":810,"line_end":810,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"ipsum\")));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536676,"byte_end":536747,"line_start":811,"line_end":811,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"dolor\")));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536752,"byte_end":536823,"line_start":812,"line_end":812,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, None);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536828,"byte_end":536876,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536881,"byte_end":536940,"line_start":814,"line_end":814,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536945,"byte_end":536952,"line_start":815,"line_end":815,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":8281},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","parent":null,"children":[{"krate":0,"index":8282},{"krate":0,"index":8285},{"krate":0,"index":8286},{"krate":0,"index":8289},{"krate":0,"index":8292},{"krate":0,"index":8295},{"krate":0,"index":8298},{"krate":0,"index":8301},{"krate":0,"index":8304},{"krate":0,"index":8388}],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11428,"byte_end":11453,"line_start":329,"line_end":329,"column_start":1,"column_end":26}},{"value":"/ Futures-powered synchronization primitives.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":620713,"byte_end":620760,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":620761,"byte_end":620764,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":620765,"byte_end":620840,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":620841,"byte_end":620898,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":8446},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":632639,"byte_end":632644,"line_start":22,"line_end":22,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::lock::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":8448},{"krate":0,"index":8449},{"krate":0,"index":8450}],"decl_id":null,"docs":" A futures-aware mutex.","sig":null,"attributes":[{"value":"/ A futures-aware mutex.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":632312,"byte_end":632338,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":632339,"byte_end":632342,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":632343,"byte_end":632357,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":632358,"byte_end":632361,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This mutex provides no fairness guarantees. Tasks may not acquire the mutex","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":632362,"byte_end":632441,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ in the order that they requested the lock, and it's possible for a single task","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":632442,"byte_end":632524,"line_start":19,"line_end":19,"column_start":1,"column_end":83}},{"value":"/ which repeatedly takes the lock to starve other tasks, which may be left waiting","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":632525,"byte_end":632609,"line_start":20,"line_end":20,"column_start":1,"column_end":85}},{"value":"/ indefinitely.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":632610,"byte_end":632627,"line_start":21,"line_end":21,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":8453},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":632797,"byte_end":632800,"line_start":29,"line_end":29,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Mutex<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8456},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":633135,"byte_end":633139,"line_start":39,"line_end":39,"column_start":8,"column_end":12},"name":"from","qualname":"<Mutex<T> as std::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8459},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":633233,"byte_end":633240,"line_start":45,"line_end":45,"column_start":8,"column_end":15},"name":"default","qualname":"<Mutex<T> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8473},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":633870,"byte_end":633873,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ Creates a new futures-aware mutex.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":633820,"byte_end":633858,"line_start":75,"line_end":75,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":8474},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":634300,"byte_end":634310,"line_start":94,"line_end":94,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this mutex, returning the underlying data.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":634054,"byte_end":634109,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":634114,"byte_end":634117,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":634122,"byte_end":634136,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":634141,"byte_end":634144,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":634149,"byte_end":634156,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":634161,"byte_end":634190,"line_start":89,"line_end":89,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":634195,"byte_end":634198,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":634203,"byte_end":634233,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(mutex.into_inner(), 0);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":634238,"byte_end":634276,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":634281,"byte_end":634288,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8477},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":634524,"byte_end":634532,"line_start":103,"line_end":103,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"fn try_lock<'_>(&'_ Self) -> Option<MutexGuard>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":634396,"byte_end":634440,"line_start":100,"line_end":100,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":634445,"byte_end":634448,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":634453,"byte_end":634512,"line_start":102,"line_end":102,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":8478},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":634916,"byte_end":634930,"line_start":115,"line_end":115,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"fn try_lock_owned<'_>(&'_ Arc<Self>) -> Option<OwnedMutexGuard<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":634788,"byte_end":634832,"line_start":112,"line_end":112,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":634837,"byte_end":634840,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":634845,"byte_end":634904,"line_start":114,"line_end":114,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":8479},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":635376,"byte_end":635380,"line_start":128,"line_end":128,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"fn lock<'_>(&'_ Self) -> MutexLockFuture","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":635211,"byte_end":635247,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":635252,"byte_end":635255,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":635260,"byte_end":635333,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":635338,"byte_end":635364,"line_start":127,"line_end":127,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":8480},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":635663,"byte_end":635673,"line_start":136,"line_end":136,"column_start":12,"column_end":22},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"fn lock_owned(Arc<Self>) -> OwnedMutexLockFuture<T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":635498,"byte_end":635534,"line_start":132,"line_end":132,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":635539,"byte_end":635542,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":635547,"byte_end":635620,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":635625,"byte_end":635651,"line_start":135,"line_end":135,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":8481},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":636317,"byte_end":636324,"line_start":156,"line_end":156,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":635807,"byte_end":635862,"line_start":140,"line_end":140,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":635867,"byte_end":635870,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":635875,"byte_end":635950,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":635955,"byte_end":636029,"line_start":143,"line_end":143,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":636034,"byte_end":636037,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":636042,"byte_end":636056,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":636061,"byte_end":636064,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":636069,"byte_end":636076,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":636081,"byte_end":636122,"line_start":148,"line_end":148,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":636127,"byte_end":636156,"line_start":149,"line_end":149,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":636161,"byte_end":636164,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":636169,"byte_end":636203,"line_start":151,"line_end":151,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":636208,"byte_end":636234,"line_start":152,"line_end":152,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":636239,"byte_end":636279,"line_start":153,"line_end":153,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":636284,"byte_end":636293,"line_start":154,"line_end":154,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":636298,"byte_end":636305,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8485},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":638053,"byte_end":638073,"line_start":201,"line_end":201,"column_start":12,"column_end":32},"name":"OwnedMutexLockFuture","qualname":"::lock::mutex::OwnedMutexLockFuture","value":"OwnedMutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":8487},{"krate":0,"index":8488}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired, owned version.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired, owned version.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":637945,"byte_end":638041,"line_start":200,"line_end":200,"column_start":1,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":8491},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":638275,"byte_end":638278,"line_start":208,"line_end":208,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OwnedMutexLockFuture<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8494},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":638727,"byte_end":638740,"line_start":221,"line_end":221,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<OwnedMutexLockFuture<T> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8498},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":638895,"byte_end":638899,"line_start":229,"line_end":229,"column_start":8,"column_end":12},"name":"poll","qualname":"<OwnedMutexLockFuture<T> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8501},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":640160,"byte_end":640164,"line_start":265,"line_end":265,"column_start":8,"column_end":12},"name":"drop","qualname":"<OwnedMutexLockFuture<T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8502},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":640690,"byte_end":640705,"line_start":279,"line_end":279,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::lock::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":8504}],"decl_id":null,"docs":" An RAII guard returned by the `lock_owned` and `try_lock_owned` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock_owned` and `try_lock_owned` methods.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":640514,"byte_end":640590,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":640591,"byte_end":640664,"line_start":277,"line_end":277,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":640665,"byte_end":640678,"line_start":278,"line_end":278,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8507},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":640820,"byte_end":640823,"line_start":284,"line_end":284,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OwnedMutexGuard<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8510},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":641081,"byte_end":641085,"line_start":293,"line_end":293,"column_start":8,"column_end":12},"name":"drop","qualname":"<OwnedMutexGuard<T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8514},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":641211,"byte_end":641216,"line_start":300,"line_end":300,"column_start":8,"column_end":13},"name":"deref","qualname":"<OwnedMutexGuard<T> as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ T","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8517},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":641342,"byte_end":641351,"line_start":306,"line_end":306,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<OwnedMutexGuard<T> as std::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":{"krate":2,"index":3499},"children":[],"decl_id":{"krate":2,"index":3500},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8518},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":641525,"byte_end":641540,"line_start":312,"line_end":312,"column_start":12,"column_end":27},"name":"MutexLockFuture","qualname":"::lock::mutex::MutexLockFuture","value":"MutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":8521},{"krate":0,"index":8522}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":641432,"byte_end":641513,"line_start":311,"line_end":311,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":8525},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":641744,"byte_end":641747,"line_start":319,"line_end":319,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MutexLockFuture as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8528},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":642190,"byte_end":642203,"line_start":332,"line_end":332,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<MutexLockFuture as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8533},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":642360,"byte_end":642364,"line_start":340,"line_end":340,"column_start":8,"column_end":12},"name":"poll","qualname":"<MutexLockFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8536},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":643566,"byte_end":643570,"line_start":374,"line_end":374,"column_start":8,"column_end":12},"name":"drop","qualname":"<MutexLockFuture as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8537},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":644075,"byte_end":644085,"line_start":388,"line_end":388,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::lock::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":8540}],"decl_id":null,"docs":" An RAII guard returned by the `lock` and `try_lock` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock` and `try_lock` methods.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":643911,"byte_end":643975,"line_start":385,"line_end":385,"column_start":1,"column_end":65}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":643976,"byte_end":644049,"line_start":386,"line_end":386,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":644050,"byte_end":644063,"line_start":387,"line_end":387,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8544},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":644654,"byte_end":644657,"line_start":409,"line_end":409,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"fn map<U, F>(Self, F) -> MappedMutexGuard where U: ?Sized,\nF: for<'_> FnOnce(&'_ mut T) -> &'_ mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":644175,"byte_end":644235,"line_start":393,"line_end":393,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":644240,"byte_end":644243,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":644248,"byte_end":644261,"line_start":395,"line_end":395,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":644266,"byte_end":644269,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":644274,"byte_end":644281,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":644286,"byte_end":644327,"line_start":398,"line_end":398,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{Mutex, MutexGuard};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":644332,"byte_end":644375,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":644380,"byte_end":644383,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":644388,"byte_end":644441,"line_start":401,"line_end":401,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":644446,"byte_end":644451,"line_start":402,"line_end":402,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":644456,"byte_end":644545,"line_start":403,"line_end":403,"column_start":5,"column_end":94}},{"value":"/     assert_eq!(&*locked_str, \"value\");","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":644550,"byte_end":644592,"line_start":404,"line_end":404,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":644597,"byte_end":644602,"line_start":405,"line_end":405,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":644607,"byte_end":644616,"line_start":406,"line_end":406,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":644621,"byte_end":644628,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":644633,"byte_end":644642,"line_start":408,"line_end":408,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8549},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":645200,"byte_end":645203,"line_start":423,"line_end":423,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MutexGuard as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8552},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":645416,"byte_end":645420,"line_start":429,"line_end":429,"column_start":8,"column_end":12},"name":"drop","qualname":"<MutexGuard as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8556},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":645545,"byte_end":645550,"line_start":436,"line_end":436,"column_start":8,"column_end":13},"name":"deref","qualname":"<MutexGuard as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ T","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8559},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":645675,"byte_end":645684,"line_start":442,"line_end":442,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<MutexGuard as std::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":{"krate":2,"index":3499},"children":[],"decl_id":{"krate":2,"index":3500},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8560},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":645949,"byte_end":645965,"line_start":449,"line_end":449,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::lock::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":8564},{"krate":0,"index":8565},{"krate":0,"index":8566}],"decl_id":null,"docs":" An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.\n When this structure is dropped (falls out of scope), the lock will be unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":645765,"byte_end":645853,"line_start":447,"line_end":447,"column_start":1,"column_end":89}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":645854,"byte_end":645937,"line_start":448,"line_end":448,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":8571},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":646731,"byte_end":646734,"line_start":473,"line_end":473,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"fn map<V, F>(Self, F) -> MappedMutexGuard where V: ?Sized,\nF: for<'_> FnOnce(&'_ mut U) -> &'_ mut V","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":646142,"byte_end":646202,"line_start":456,"line_end":456,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":646207,"byte_end":646210,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":646215,"byte_end":646228,"line_start":458,"line_end":458,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":646233,"byte_end":646236,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":646241,"byte_end":646248,"line_start":460,"line_end":460,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":646253,"byte_end":646294,"line_start":461,"line_end":461,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{MappedMutexGuard, Mutex, MutexGuard};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":646299,"byte_end":646360,"line_start":462,"line_end":462,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":646365,"byte_end":646368,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":646373,"byte_end":646426,"line_start":464,"line_end":464,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":646431,"byte_end":646436,"line_start":465,"line_end":465,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":646441,"byte_end":646530,"line_start":466,"line_end":466,"column_start":5,"column_end":94}},{"value":"/     let locked_char = MappedMutexGuard::map(locked_str, |s| s.get_mut(0..1).unwrap());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":646535,"byte_end":646625,"line_start":467,"line_end":467,"column_start":5,"column_end":95}},{"value":"/     assert_eq!(&*locked_char, \"v\");","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":646630,"byte_end":646669,"line_start":468,"line_end":468,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":646674,"byte_end":646679,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":646684,"byte_end":646693,"line_start":470,"line_end":470,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":646698,"byte_end":646705,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":646710,"byte_end":646719,"line_start":472,"line_end":472,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8577},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":647291,"byte_end":647294,"line_start":487,"line_end":487,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MappedMutexGuard as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8581},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":647572,"byte_end":647576,"line_start":496,"line_end":496,"column_start":8,"column_end":12},"name":"drop","qualname":"<MappedMutexGuard as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8586},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":647721,"byte_end":647726,"line_start":503,"line_end":503,"column_start":8,"column_end":13},"name":"deref","qualname":"<MappedMutexGuard as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ U","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8590},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":647859,"byte_end":647868,"line_start":509,"line_end":509,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<MappedMutexGuard as std::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut U","parent":{"krate":2,"index":3499},"children":[],"decl_id":{"krate":2,"index":3500},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16124},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":650097,"byte_end":650106,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"Abortable","qualname":"::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":16126},{"krate":0,"index":16127}],"decl_id":null,"docs":" A future/stream which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"must_use = \"futures/streams do nothing unless you poll them\"","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12713388,"byte_end":12713397,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8655},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":651516,"byte_end":651519,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<T>>::new","value":"fn new(T, AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future/stream using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future/stream using an existing `AbortRegistration`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":650212,"byte_end":650294,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":650299,"byte_end":650367,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":650372,"byte_end":650375,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":650380,"byte_end":650452,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ already been called, the future/stream will complete immediately without making","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":650457,"byte_end":650540,"line_start":27,"line_end":27,"column_start":5,"column_end":88}},{"value":"/ any further progress.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":650545,"byte_end":650570,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":650575,"byte_end":650578,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":650583,"byte_end":650598,"line_start":30,"line_end":30,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":650603,"byte_end":650606,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Usage with futures:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":650611,"byte_end":650634,"line_start":32,"line_end":32,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":650639,"byte_end":650642,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":650647,"byte_end":650654,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":650659,"byte_end":650700,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":650705,"byte_end":650764,"line_start":36,"line_end":36,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":650769,"byte_end":650772,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":650777,"byte_end":650846,"line_start":38,"line_end":38,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":650851,"byte_end":650916,"line_start":39,"line_end":39,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":650921,"byte_end":650946,"line_start":40,"line_end":40,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":650951,"byte_end":650994,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":650999,"byte_end":651008,"line_start":42,"line_end":42,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":651013,"byte_end":651020,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":651025,"byte_end":651028,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Usage with streams:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":651033,"byte_end":651056,"line_start":45,"line_end":45,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":651061,"byte_end":651064,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":651069,"byte_end":651076,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":651081,"byte_end":651122,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ # use futures::future::{Abortable, AbortHandle};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":651127,"byte_end":651179,"line_start":49,"line_end":49,"column_start":5,"column_end":57}},{"value":"/ # use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":651184,"byte_end":651229,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":651234,"byte_end":651237,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":651242,"byte_end":651311,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/ let mut stream = Abortable::new(stream::iter(vec![1, 2, 3]), abort_registration);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":651316,"byte_end":651401,"line_start":53,"line_end":53,"column_start":5,"column_end":90}},{"value":"/ abort_handle.abort();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":651406,"byte_end":651431,"line_start":54,"line_end":54,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":651436,"byte_end":651478,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":651483,"byte_end":651492,"line_start":56,"line_end":56,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":651497,"byte_end":651504,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8656},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":652024,"byte_end":652034,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"is_aborted","qualname":"<Abortable<T>>::is_aborted","value":"fn is_aborted<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the task has been aborted. Note that all this\n method indicates is whether [`AbortHandle::abort`] was *called*.\n This means that it will return `true` even if:\n * `abort` was called after the task had completed.\n * `abort` was called while the task was being polled - the task may still be running and\n will not be stopped until `poll` returns.\n","sig":null,"attributes":[{"value":"/ Checks whether the task has been aborted. Note that all this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":651614,"byte_end":651678,"line_start":62,"line_end":62,"column_start":5,"column_end":69}},{"value":"/ method indicates is whether [`AbortHandle::abort`] was *called*.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":651683,"byte_end":651751,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/ This means that it will return `true` even if:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":651756,"byte_end":651806,"line_start":64,"line_end":64,"column_start":5,"column_end":55}},{"value":"/ * `abort` was called after the task had completed.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":651811,"byte_end":651865,"line_start":65,"line_end":65,"column_start":5,"column_end":59}},{"value":"/ * `abort` was called while the task was being polled - the task may still be running and","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":651870,"byte_end":651962,"line_start":66,"line_end":66,"column_start":5,"column_end":97}},{"value":"/ will not be stopped until `poll` returns.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":651967,"byte_end":652012,"line_start":67,"line_end":67,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":16167},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":652302,"byte_end":652319,"line_start":77,"line_end":77,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":16168}],"decl_id":null,"docs":" A registration handle for an `Abortable` task.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for an `Abortable` task.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":652112,"byte_end":652162,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":652163,"byte_end":652239,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":652240,"byte_end":652273,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":16171},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":652436,"byte_end":652447,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":16172}],"decl_id":null,"docs":" A handle to an `Abortable` task.\n","sig":null,"attributes":[{"value":"/ A handle to an `Abortable` task.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":652364,"byte_end":652400,"line_start":81,"line_end":81,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":8658},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":652718,"byte_end":652726,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"fn new_pair() -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future or stream.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":652504,"byte_end":652578,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ to abort a running future or stream.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":652583,"byte_end":652623,"line_start":89,"line_end":89,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":652628,"byte_end":652631,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to [`Abortable::new`].","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":652636,"byte_end":652706,"line_start":91,"line_end":91,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":16182},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":653281,"byte_end":653288,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` task was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` task was aborted.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":653172,"byte_end":653224,"line_start":108,"line_end":108,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":8660},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":653330,"byte_end":653333,"line_start":113,"line_end":113,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Aborted as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8670},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":654617,"byte_end":654621,"line_start":158,"line_end":158,"column_start":8,"column_end":12},"name":"poll","qualname":"<Abortable<Fut> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8675},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":654841,"byte_end":654850,"line_start":169,"line_end":169,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Abortable<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8678},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":655422,"byte_end":655427,"line_start":181,"line_end":181,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"fn abort<'_>(&'_ Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` stream/future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` stream/future associated with this handle.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":655055,"byte_end":655123,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":655128,"byte_end":655131,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable task associated with this handle that it","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":655136,"byte_end":655203,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"/ should abort. Note that if the task is currently being polled on","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":655208,"byte_end":655276,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":655281,"byte_end":655355,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":655360,"byte_end":655410,"line_start":180,"line_end":180,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":8690},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":655610,"byte_end":655617,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":8692},{"krate":0,"index":8693}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8692},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":655632,"byte_end":655638,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":8690},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8693},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":655647,"byte_end":655656,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":8690},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8699},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":655781,"byte_end":655790,"line_start":14,"line_end":14,"column_start":8,"column_end":17},"name":"call_once","qualname":"<T as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> R","parent":{"krate":0,"index":8690},"children":[],"decl_id":{"krate":0,"index":8693},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":8700},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":655849,"byte_end":655855,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":8702}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8702},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":655880,"byte_end":655888,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"fn call_mut<'_>(&'_ mut Self, A) -> Self::Output","parent":{"krate":0,"index":8700},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8707},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":655995,"byte_end":656003,"line_start":27,"line_end":27,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<T as fns::FnMut1>::call_mut","value":"fn call_mut<'_>(&'_ mut Self, A) -> R","parent":{"krate":0,"index":8700},"children":[],"decl_id":{"krate":0,"index":8702},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8717},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":657194,"byte_end":657198,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8723},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":657261,"byte_end":657268,"line_start":77,"line_end":77,"column_start":8,"column_end":15},"name":"default","qualname":"<OkFn<E> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8728},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":657391,"byte_end":657400,"line_start":84,"line_end":84,"column_start":8,"column_end":17},"name":"call_once","qualname":"<OkFn<E> as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":8690},"children":[],"decl_id":{"krate":0,"index":8693},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16213},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":657554,"byte_end":657561,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8734},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":657709,"byte_end":657718,"line_start":100,"line_end":100,"column_start":8,"column_end":17},"name":"call_once","qualname":"<ChainFn<F, G> as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":8690},"children":[],"decl_id":{"krate":0,"index":8693},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8739},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":657908,"byte_end":657916,"line_start":109,"line_end":109,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<ChainFn<F, G> as fns::FnMut1>::call_mut","value":"fn call_mut<'_>(&'_ mut Self, A) -> Self::Output","parent":{"krate":0,"index":8700},"children":[],"decl_id":{"krate":0,"index":8702},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16234},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":658295,"byte_end":658308,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8751},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":658389,"byte_end":658398,"line_start":131,"line_end":131,"column_start":8,"column_end":17},"name":"call_once","qualname":"<MergeResultFn as fns::FnOnce1>::call_once","value":"fn call_once(Self, Result<T, T>) -> Self::Output","parent":{"krate":0,"index":8690},"children":[],"decl_id":{"krate":0,"index":8693},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16250},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":658650,"byte_end":658659,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8757},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":658868,"byte_end":658877,"line_start":149,"line_end":149,"column_start":8,"column_end":17},"name":"call_once","qualname":"<InspectFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":8690},"children":[],"decl_id":{"krate":0,"index":8693},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8762},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":659139,"byte_end":659147,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<InspectFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut<'_>(&'_ mut Self, A) -> Self::Output","parent":{"krate":0,"index":8700},"children":[],"decl_id":{"krate":0,"index":8702},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16265},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":659614,"byte_end":659621,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8775},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":659755,"byte_end":659764,"line_start":186,"line_end":186,"column_start":8,"column_end":17},"name":"call_once","qualname":"<MapOkFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":8690},"children":[],"decl_id":{"krate":0,"index":8693},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8781},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":659940,"byte_end":659948,"line_start":194,"line_end":194,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<MapOkFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut<'_>(&'_ mut Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":8700},"children":[],"decl_id":{"krate":0,"index":8702},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16280},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":660332,"byte_end":660340,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8796},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":660475,"byte_end":660484,"line_start":218,"line_end":218,"column_start":8,"column_end":17},"name":"call_once","qualname":"<MapErrFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":8690},"children":[],"decl_id":{"krate":0,"index":8693},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8802},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":660665,"byte_end":660673,"line_start":226,"line_end":226,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<MapErrFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut<'_>(&'_ mut Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":8700},"children":[],"decl_id":{"krate":0,"index":8702},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16295},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":661060,"byte_end":661071,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8818},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":661216,"byte_end":661225,"line_start":250,"line_end":250,"column_start":8,"column_end":17},"name":"call_once","qualname":"<InspectOkFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, &'a Result<T, E>) -> Self::Output","parent":{"krate":0,"index":8690},"children":[],"decl_id":{"krate":0,"index":8693},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8824},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":661464,"byte_end":661472,"line_start":260,"line_end":260,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<InspectOkFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut<'_>(&'_ mut Self, &'a Result<T, E>) -> Self::Output","parent":{"krate":0,"index":8700},"children":[],"decl_id":{"krate":0,"index":8702},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16307},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":661956,"byte_end":661968,"line_start":281,"line_end":281,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8839},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":662114,"byte_end":662123,"line_start":288,"line_end":288,"column_start":8,"column_end":17},"name":"call_once","qualname":"<InspectErrFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, &'a Result<T, E>) -> Self::Output","parent":{"krate":0,"index":8690},"children":[],"decl_id":{"krate":0,"index":8693},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8845},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":662364,"byte_end":662372,"line_start":298,"line_end":298,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<InspectErrFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut<'_>(&'_ mut Self, &'a Result<T, E>) -> Self::Output","parent":{"krate":0,"index":8700},"children":[],"decl_id":{"krate":0,"index":8702},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16319},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":663116,"byte_end":663130,"line_start":324,"line_end":324,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8865},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":663264,"byte_end":663273,"line_start":331,"line_end":331,"column_start":8,"column_end":17},"name":"call_once","qualname":"<UnwrapOrElseFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":8690},"children":[],"decl_id":{"krate":0,"index":8693},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8871},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":663479,"byte_end":663487,"line_start":339,"line_end":339,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<UnwrapOrElseFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut<'_>(&'_ mut Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":8700},"children":[],"decl_id":{"krate":0,"index":8702},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8881},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":663895,"byte_end":663901,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8887},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":663970,"byte_end":663977,"line_start":358,"line_end":358,"column_start":8,"column_end":15},"name":"default","qualname":"<IntoFn<T> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8892},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":664112,"byte_end":664121,"line_start":367,"line_end":367,"column_start":8,"column_end":17},"name":"call_once","qualname":"<IntoFn<T> as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":8690},"children":[],"decl_id":{"krate":0,"index":8693},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35483,"byte_end":35490,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35620,"byte_end":35627,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35852,"byte_end":35859,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":36633,"byte_end":36640,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":36865,"byte_end":36872,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":39886,"byte_end":39890,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":39997,"byte_end":40001,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41730,"byte_end":41734,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41847,"byte_end":41851,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":42829,"byte_end":42832,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":43001,"byte_end":43004,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":43266,"byte_end":43269,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/catch_unwind.rs","byte_start":44475,"byte_end":44486,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/catch_unwind.rs","byte_start":44629,"byte_end":44640,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":45867,"byte_end":45877,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":46078,"byte_end":46084,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":46127,"byte_end":46133,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":46391,"byte_end":46396,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":46550,"byte_end":46560,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":46792,"byte_end":46797,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":46894,"byte_end":46899,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":47143,"byte_end":47149,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":47573,"byte_end":47579,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":49645,"byte_end":49650,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":51346,"byte_end":51352,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":51504,"byte_end":51510,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":53162,"byte_end":53167,"line_start":270,"line_end":270,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":54961,"byte_end":54967,"line_start":328,"line_end":328,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":55126,"byte_end":55132,"line_start":337,"line_end":337,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":55560,"byte_end":55568,"line_start":354,"line_end":354,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":55927,"byte_end":55937,"line_start":367,"line_end":367,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18634,"byte_end":18635,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":78511,"byte_end":78521,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":78672,"byte_end":78682,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":78805,"byte_end":78815,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":79524,"byte_end":79534,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":79664,"byte_end":79674,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":79917,"byte_end":79927,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":80880,"byte_end":80890,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":81133,"byte_end":81143,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":84467,"byte_end":84480,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":84610,"byte_end":84623,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":84866,"byte_end":84879,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60909,"byte_end":60912,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86188,"byte_end":86192,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86788,"byte_end":86792,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86936,"byte_end":86940,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":87543,"byte_end":87550,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":88153,"byte_end":88160,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":88305,"byte_end":88312,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":88338,"byte_end":88345,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89099,"byte_end":89108,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89711,"byte_end":89720,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":90818,"byte_end":90827,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":91028,"byte_end":91037,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":92357,"byte_end":92369,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":92595,"byte_end":92607,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":958},{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":93720,"byte_end":93732,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":93936,"byte_end":93948,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":965},{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":95598,"byte_end":95610,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":95708,"byte_end":95720,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":96034,"byte_end":96046,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":96233,"byte_end":96245,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":96683,"byte_end":96689,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":97383,"byte_end":97389,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":97531,"byte_end":97537,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1045},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":98265,"byte_end":98278,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1084},{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":98844,"byte_end":98857,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":99877,"byte_end":99890,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1092},{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102062,"byte_end":102067,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1127}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102246,"byte_end":102251,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102283,"byte_end":102288,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102385,"byte_end":102390,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1135},{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":110388,"byte_end":110395,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1298}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":112942,"byte_end":112949,"line_start":130,"line_end":130,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1303},{"krate":0,"index":1304}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":113937,"byte_end":113944,"line_start":162,"line_end":162,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":114440,"byte_end":114446,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":116882,"byte_end":116888,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1354},{"krate":0,"index":1355}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":117510,"byte_end":117516,"line_start":117,"line_end":117,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":118079,"byte_end":118088,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":119095,"byte_end":119104,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":119287,"byte_end":119296,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1405},{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":119951,"byte_end":119960,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":128565,"byte_end":128575,"line_start":47,"line_end":47,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":131353,"byte_end":131363,"line_start":136,"line_end":136,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1580},{"krate":0,"index":1581}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":132935,"byte_end":132945,"line_start":179,"line_end":179,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1585}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":133451,"byte_end":133460,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":135299,"byte_end":135308,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1628},{"krate":0,"index":1629}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":136670,"byte_end":136678,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":137756,"byte_end":137764,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1676},{"krate":0,"index":1677}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":139180,"byte_end":139188,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1681}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":140167,"byte_end":140173,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":140512,"byte_end":140518,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1723}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":140903,"byte_end":140909,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1728}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":141290,"byte_end":141296,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1731}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":141537,"byte_end":141543,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1735},{"krate":0,"index":1736}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":141882,"byte_end":141888,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1740}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":142164,"byte_end":142170,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":142705,"byte_end":142711,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1750}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":144383,"byte_end":144389,"line_start":191,"line_end":191,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1791},{"krate":0,"index":1792}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":145190,"byte_end":145196,"line_start":219,"line_end":219,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":146503,"byte_end":146509,"line_start":261,"line_end":261,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1803}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":146939,"byte_end":146945,"line_start":278,"line_end":278,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1807},{"krate":0,"index":1808}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":210523,"byte_end":210528,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1960}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":210754,"byte_end":210759,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1964}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":210968,"byte_end":210973,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1968},{"krate":0,"index":1969},{"krate":0,"index":1970}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":212569,"byte_end":212576,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2011},{"krate":0,"index":2012}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":212818,"byte_end":212825,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2016}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":213003,"byte_end":213010,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2020},{"krate":0,"index":2021}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":214036,"byte_end":214041,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2063},{"krate":0,"index":2064}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":214389,"byte_end":214394,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2071}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":214644,"byte_end":214649,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2078},{"krate":0,"index":2079}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":215774,"byte_end":215780,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2116}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":216000,"byte_end":216006,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2119},{"krate":0,"index":2120}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":216714,"byte_end":216720,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2123}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":217446,"byte_end":217451,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2163}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":217672,"byte_end":217677,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2166}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":217809,"byte_end":217814,"line_start":34,"line_end":34,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2169}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":217932,"byte_end":217937,"line_start":40,"line_end":40,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2172},{"krate":0,"index":2173}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":218743,"byte_end":218748,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2206}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":218904,"byte_end":218909,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2209},{"krate":0,"index":2210},{"krate":0,"index":2211}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":219658,"byte_end":219663,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2214}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":220411,"byte_end":220420,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2244},{"krate":0,"index":11680},{"krate":0,"index":11681},{"krate":0,"index":11682},{"krate":0,"index":11683}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":220606,"byte_end":220615,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2247}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":220733,"byte_end":220742,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2250},{"krate":0,"index":2251},{"krate":0,"index":2252}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":222183,"byte_end":222189,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2293}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":222662,"byte_end":222668,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2299},{"krate":0,"index":11745},{"krate":0,"index":11746},{"krate":0,"index":11747},{"krate":0,"index":11748}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":222991,"byte_end":222997,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2304}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":223334,"byte_end":223340,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2310},{"krate":0,"index":2311},{"krate":0,"index":2312}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":225505,"byte_end":225514,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2353}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":225811,"byte_end":225820,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2358},{"krate":0,"index":11806},{"krate":0,"index":11807},{"krate":0,"index":11808},{"krate":0,"index":11809}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":226087,"byte_end":226096,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2364}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":226363,"byte_end":226372,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":2372}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":228467,"byte_end":228474,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2403},{"krate":0,"index":11859},{"krate":0,"index":11860},{"krate":0,"index":11861},{"krate":0,"index":11862}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":228643,"byte_end":228650,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2406}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":228842,"byte_end":228849,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2409},{"krate":0,"index":2410}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":230363,"byte_end":230367,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2446}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":230723,"byte_end":230727,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2452}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":230988,"byte_end":230992,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2458}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":231227,"byte_end":231231,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2464},{"krate":0,"index":2465}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":232820,"byte_end":232823,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2503}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":233153,"byte_end":233156,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2508}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":233409,"byte_end":233412,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2513}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":233641,"byte_end":233644,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2518},{"krate":0,"index":2519}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":235396,"byte_end":235399,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2557}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":235729,"byte_end":235732,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2562}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":235984,"byte_end":235987,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2567}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":236216,"byte_end":236219,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2572},{"krate":0,"index":2573}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":237973,"byte_end":237980,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2615}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":238273,"byte_end":238280,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2620}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":238511,"byte_end":238518,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2625}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":238757,"byte_end":238764,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2630},{"krate":0,"index":2631}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":239865,"byte_end":239869,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":12206},{"krate":0,"index":12207},{"krate":0,"index":12208},{"krate":0,"index":12209}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":240366,"byte_end":240370,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2665}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":240468,"byte_end":240472,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2668},{"krate":0,"index":2669},{"krate":0,"index":2670}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":241674,"byte_end":241686,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2703},{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2706},{"krate":0,"index":2707}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":244176,"byte_end":244188,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2710}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":244308,"byte_end":244320,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2713},{"krate":0,"index":2714}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":245205,"byte_end":245208,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2751}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":245397,"byte_end":245400,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2755},{"krate":0,"index":12330},{"krate":0,"index":12331},{"krate":0,"index":12332},{"krate":0,"index":12333}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":245569,"byte_end":245572,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2759}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":245740,"byte_end":245743,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2763},{"krate":0,"index":2764},{"krate":0,"index":2766}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":246855,"byte_end":246859,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":246910,"byte_end":246914,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2803}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":247065,"byte_end":247069,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2806}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":247208,"byte_end":247212,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2809},{"krate":0,"index":2810}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":247863,"byte_end":247877,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2844}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":248028,"byte_end":248042,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2847}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":248186,"byte_end":248200,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2850},{"krate":0,"index":2851}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":249511,"byte_end":249519,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2904},{"krate":0,"index":12473},{"krate":0,"index":12474},{"krate":0,"index":12475},{"krate":0,"index":12476},{"krate":0,"index":2905},{"krate":0,"index":2906},{"krate":0,"index":2907},{"krate":0,"index":2908},{"krate":0,"index":2909},{"krate":0,"index":2911}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":255016,"byte_end":255024,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2916}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":255166,"byte_end":255174,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2919},{"krate":0,"index":2920},{"krate":0,"index":2921}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":256326,"byte_end":256330,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2924}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":256575,"byte_end":256579,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2927}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":256690,"byte_end":256694,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2931},{"krate":0,"index":2932}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":257391,"byte_end":257398,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2935}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":257646,"byte_end":257653,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2938}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":257764,"byte_end":257771,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2942},{"krate":0,"index":2943}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":258491,"byte_end":258497,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2947}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":258849,"byte_end":258855,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2953}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":259124,"byte_end":259130,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2958},{"krate":0,"index":2959}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":260391,"byte_end":260399,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2963}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":260719,"byte_end":260727,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2968}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":260911,"byte_end":260919,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2972},{"krate":0,"index":2973}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":261290,"byte_end":261300,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2983},{"krate":0,"index":2984}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":261965,"byte_end":261969,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3027},{"krate":0,"index":12697},{"krate":0,"index":12698},{"krate":0,"index":12699},{"krate":0,"index":12700}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":262160,"byte_end":262164,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3030}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":262282,"byte_end":262286,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3033},{"krate":0,"index":3034},{"krate":0,"index":3035}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":263883,"byte_end":263892,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3074}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":264344,"byte_end":264353,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3079},{"krate":0,"index":12766},{"krate":0,"index":12767},{"krate":0,"index":12768},{"krate":0,"index":12769}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":264679,"byte_end":264688,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3084}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":264936,"byte_end":264945,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3089},{"krate":0,"index":3090},{"krate":0,"index":3091}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":267238,"byte_end":267242,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3124},{"krate":0,"index":12810},{"krate":0,"index":12811},{"krate":0,"index":12812},{"krate":0,"index":12813}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":267415,"byte_end":267419,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3129}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":268364,"byte_end":268368,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3132}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":269391,"byte_end":269400,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3170}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":269848,"byte_end":269857,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3175},{"krate":0,"index":12879},{"krate":0,"index":12880},{"krate":0,"index":12881},{"krate":0,"index":12882}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":270176,"byte_end":270185,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3180},{"krate":0,"index":3181},{"krate":0,"index":3182}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":271697,"byte_end":271706,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3187}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":273090,"byte_end":273099,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3224}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":273387,"byte_end":273396,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3228},{"krate":0,"index":12936},{"krate":0,"index":12937},{"krate":0,"index":12938},{"krate":0,"index":12939},{"krate":0,"index":3229},{"krate":0,"index":3230},{"krate":0,"index":3231}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":275513,"byte_end":275522,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3235},{"krate":0,"index":3236},{"krate":0,"index":3237}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":276554,"byte_end":276563,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3241}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":277505,"byte_end":277509,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3279}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":277760,"byte_end":277764,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3284},{"krate":0,"index":12997},{"krate":0,"index":12998},{"krate":0,"index":12999},{"krate":0,"index":13000}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":278010,"byte_end":278014,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3289}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":278240,"byte_end":278244,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3294},{"krate":0,"index":3295},{"krate":0,"index":3296}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":280119,"byte_end":280122,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3334},{"krate":0,"index":3335},{"krate":0,"index":3336},{"krate":0,"index":3337},{"krate":0,"index":3338}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":281708,"byte_end":281711,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3342}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":281906,"byte_end":281909,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3346},{"krate":0,"index":3347},{"krate":0,"index":3348}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":284590,"byte_end":284596,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3387},{"krate":0,"index":3388},{"krate":0,"index":13102},{"krate":0,"index":13103},{"krate":0,"index":13104},{"krate":0,"index":13105}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":285082,"byte_end":285088,"line_start":43,"line_end":43,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3393}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":286696,"byte_end":286702,"line_start":88,"line_end":88,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3396}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":287674,"byte_end":287685,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3432},{"krate":0,"index":13150},{"krate":0,"index":13151},{"krate":0,"index":13152},{"krate":0,"index":13153}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":288015,"byte_end":288026,"line_start":37,"line_end":37,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3435},{"krate":0,"index":3436},{"krate":0,"index":3437}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":290187,"byte_end":290198,"line_start":96,"line_end":96,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3440}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":291196,"byte_end":291200,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3484}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":291686,"byte_end":291690,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3491}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":291854,"byte_end":291858,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3498},{"krate":0,"index":13219},{"krate":0,"index":13220},{"krate":0,"index":13221},{"krate":0,"index":13222}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":292220,"byte_end":292224,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3505},{"krate":0,"index":3506},{"krate":0,"index":3507}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":293451,"byte_end":293455,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3514}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":294636,"byte_end":294651,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3557}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":294983,"byte_end":294998,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3560},{"krate":0,"index":13264},{"krate":0,"index":13265},{"krate":0,"index":13266},{"krate":0,"index":13267}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":295325,"byte_end":295340,"line_start":55,"line_end":55,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3563},{"krate":0,"index":3564},{"krate":0,"index":3565}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":296794,"byte_end":296809,"line_start":100,"line_end":100,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3568}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":297919,"byte_end":297927,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3610}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":298274,"byte_end":298282,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3613},{"krate":0,"index":13309},{"krate":0,"index":13310},{"krate":0,"index":13311},{"krate":0,"index":13312}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":298562,"byte_end":298570,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3616},{"krate":0,"index":3617},{"krate":0,"index":3618}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":301719,"byte_end":301734,"line_start":60,"line_end":60,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3696},{"krate":0,"index":3697},{"krate":0,"index":3700},{"krate":0,"index":3704},{"krate":0,"index":3706},{"krate":0,"index":3708}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":305853,"byte_end":305866,"line_start":177,"line_end":177,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3717},{"krate":0,"index":3718},{"krate":0,"index":3719}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":306386,"byte_end":306399,"line_start":194,"line_end":194,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3723}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":306797,"byte_end":306807,"line_start":210,"line_end":210,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":306832,"byte_end":306842,"line_start":211,"line_end":211,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":306852,"byte_end":306862,"line_start":213,"line_end":213,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3731},{"krate":0,"index":3732},{"krate":0,"index":3734}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":307913,"byte_end":307923,"line_start":239,"line_end":239,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3736}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":309524,"byte_end":309537,"line_start":279,"line_end":279,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3739}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":309741,"byte_end":309754,"line_start":286,"line_end":286,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3743},{"krate":0,"index":3744}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":310869,"byte_end":310885,"line_start":322,"line_end":322,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3748}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":311359,"byte_end":311375,"line_start":338,"line_end":338,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3751},{"krate":0,"index":13409},{"krate":0,"index":13410},{"krate":0,"index":13411},{"krate":0,"index":13412}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":312314,"byte_end":312334,"line_start":368,"line_end":368,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3754}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":312601,"byte_end":312617,"line_start":378,"line_end":378,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3758}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":312822,"byte_end":312838,"line_start":388,"line_end":388,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3761},{"krate":0,"index":3762}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":318267,"byte_end":318284,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3807}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":318630,"byte_end":318647,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3812}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":319080,"byte_end":319097,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3817}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":319327,"byte_end":319344,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3822},{"krate":0,"index":3823}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/catch_unwind.rs","byte_start":321704,"byte_end":321715,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3864},{"krate":0,"index":13597},{"krate":0,"index":13598},{"krate":0,"index":13599},{"krate":0,"index":13600}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/catch_unwind.rs","byte_start":321907,"byte_end":321918,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3867},{"krate":0,"index":3868},{"krate":0,"index":3871}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/catch_unwind.rs","byte_start":322770,"byte_end":322781,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3874}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159898,"byte_end":159899,"line_start":245,"line_end":245,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":361785,"byte_end":361792,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4195}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":362085,"byte_end":362092,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4200},{"krate":0,"index":13658},{"krate":0,"index":13659},{"krate":0,"index":13660},{"krate":0,"index":13661}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":362373,"byte_end":362380,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4205},{"krate":0,"index":4206},{"krate":0,"index":4207}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":363516,"byte_end":363523,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4212}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":364441,"byte_end":364451,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4242},{"krate":0,"index":13905},{"krate":0,"index":13906},{"krate":0,"index":13907},{"krate":0,"index":13908}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":364644,"byte_end":364654,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4245}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":364775,"byte_end":364785,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4248},{"krate":0,"index":4249},{"krate":0,"index":4250}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":365884,"byte_end":365890,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4291}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":366182,"byte_end":366188,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4296},{"krate":0,"index":14104},{"krate":0,"index":14105},{"krate":0,"index":14106},{"krate":0,"index":14107}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":366466,"byte_end":366472,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4301},{"krate":0,"index":4302},{"krate":0,"index":4303}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":367742,"byte_end":367748,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4308}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":368652,"byte_end":368659,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":368713,"byte_end":368720,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4345}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":368883,"byte_end":368890,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":4348}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":369032,"byte_end":369039,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4351},{"krate":0,"index":4352}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":369815,"byte_end":369825,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4390}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":370121,"byte_end":370131,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4395}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":370376,"byte_end":370386,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4400},{"krate":0,"index":4401}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":371785,"byte_end":371794,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4442}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":372190,"byte_end":372199,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4447},{"krate":0,"index":14234},{"krate":0,"index":14235},{"krate":0,"index":14236},{"krate":0,"index":14237}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":372442,"byte_end":372451,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4452}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":372708,"byte_end":372717,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4457},{"krate":0,"index":4458},{"krate":0,"index":4459}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":374851,"byte_end":374863,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4500}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":375163,"byte_end":375175,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4505},{"krate":0,"index":14295},{"krate":0,"index":14296},{"krate":0,"index":14297},{"krate":0,"index":14298}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":375372,"byte_end":375384,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4511}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":375662,"byte_end":375674,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4517},{"krate":0,"index":4518},{"krate":0,"index":4519}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":377851,"byte_end":377861,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4552},{"krate":0,"index":14339},{"krate":0,"index":14340},{"krate":0,"index":14341},{"krate":0,"index":14342}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":378126,"byte_end":378136,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4555}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":378382,"byte_end":378392,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4558},{"krate":0,"index":4559}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":380001,"byte_end":380011,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4600}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":380151,"byte_end":380161,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4604}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":380349,"byte_end":380359,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4608},{"krate":0,"index":4609}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_concat.rs","byte_start":381334,"byte_end":381343,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4638}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_concat.rs","byte_start":381562,"byte_end":381571,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4641},{"krate":0,"index":4642}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":382955,"byte_end":382964,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4695},{"krate":0,"index":4696},{"krate":0,"index":14476},{"krate":0,"index":14477},{"krate":0,"index":14478},{"krate":0,"index":14479}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":383459,"byte_end":383468,"line_start":44,"line_end":44,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4699},{"krate":0,"index":4700},{"krate":0,"index":4701}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":385408,"byte_end":385417,"line_start":95,"line_end":95,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4704}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":386076,"byte_end":386090,"line_start":118,"line_end":118,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4708}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":386235,"byte_end":386249,"line_start":124,"line_end":124,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4712}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":386436,"byte_end":386450,"line_start":131,"line_end":131,"column_start":61,"column_end":75},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":387060,"byte_end":387067,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4761}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":387426,"byte_end":387433,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4767}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":387713,"byte_end":387720,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4773}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":387974,"byte_end":387981,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4779},{"krate":0,"index":4780}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":391844,"byte_end":391853,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4822}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":392115,"byte_end":392124,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4828},{"krate":0,"index":4829}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":393870,"byte_end":393882,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4874}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":394338,"byte_end":394350,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4879},{"krate":0,"index":14692},{"krate":0,"index":14693},{"krate":0,"index":14694},{"krate":0,"index":14695}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":394690,"byte_end":394702,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4884},{"krate":0,"index":4885},{"krate":0,"index":4886}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":396194,"byte_end":396206,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4891}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":397434,"byte_end":397446,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4932}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":397898,"byte_end":397910,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4937},{"krate":0,"index":14761},{"krate":0,"index":14762},{"krate":0,"index":14763},{"krate":0,"index":14764}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":398248,"byte_end":398260,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4942},{"krate":0,"index":4943},{"krate":0,"index":4944}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":399860,"byte_end":399872,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4949}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffer_unordered.rs","byte_start":401160,"byte_end":401178,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4999},{"krate":0,"index":14809},{"krate":0,"index":14810},{"krate":0,"index":14811},{"krate":0,"index":14812}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffer_unordered.rs","byte_start":401517,"byte_end":401535,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5002},{"krate":0,"index":5003}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffered.rs","byte_start":403741,"byte_end":403752,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5053},{"krate":0,"index":14857},{"krate":0,"index":14858},{"krate":0,"index":14859},{"krate":0,"index":14860}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffered.rs","byte_start":404089,"byte_end":404100,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5056},{"krate":0,"index":5057}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":406263,"byte_end":406283,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5105}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":406648,"byte_end":406668,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5110}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":406907,"byte_end":406927,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5115}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":407375,"byte_end":407395,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5120},{"krate":0,"index":5121}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":410684,"byte_end":410697,"line_start":33,"line_end":33,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5168}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":410901,"byte_end":410914,"line_start":43,"line_end":43,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5171}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":412565,"byte_end":412578,"line_start":93,"line_end":93,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5174},{"krate":0,"index":5175},{"krate":0,"index":5176}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":413194,"byte_end":413207,"line_start":114,"line_end":114,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5179},{"krate":0,"index":5180}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328181,"byte_end":328182,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":415289,"byte_end":415293,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":415915,"byte_end":415919,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5347},{"krate":0,"index":5348},{"krate":0,"index":5349}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":417110,"byte_end":417116,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":417143,"byte_end":417149,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5384},{"krate":0,"index":5385},{"krate":0,"index":5386}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":417457,"byte_end":417463,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5389}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":418060,"byte_end":418070,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":418114,"byte_end":418124,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5424},{"krate":0,"index":5425},{"krate":0,"index":5426}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":418438,"byte_end":418448,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5430}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":420968,"byte_end":420973,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":421005,"byte_end":421010,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5471}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":421095,"byte_end":421100,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5474},{"krate":0,"index":5475},{"krate":0,"index":5476}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":421349,"byte_end":421354,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5479}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":422293,"byte_end":422297,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5521}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":422426,"byte_end":422430,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5524},{"krate":0,"index":5525},{"krate":0,"index":5526}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":423035,"byte_end":423039,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5529}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":423698,"byte_end":423705,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":423737,"byte_end":423744,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5567}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":423829,"byte_end":423836,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5570},{"krate":0,"index":5571},{"krate":0,"index":5572}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":424081,"byte_end":424088,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5575}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":424475,"byte_end":424481,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":424512,"byte_end":424518,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5610}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":425283,"byte_end":425289,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5617},{"krate":0,"index":5618}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":425985,"byte_end":425998,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5646},{"krate":0,"index":5647},{"krate":0,"index":5648}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":426911,"byte_end":426924,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5651}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":429811,"byte_end":429817,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5702},{"krate":0,"index":5703},{"krate":0,"index":5704},{"krate":0,"index":5705}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":431121,"byte_end":431127,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5709}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":431306,"byte_end":431312,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5713},{"krate":0,"index":5714}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":431987,"byte_end":431995,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5751},{"krate":0,"index":5752}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":432345,"byte_end":432353,"line_start":32,"line_end":32,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5754}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":432510,"byte_end":432523,"line_start":45,"line_end":45,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5765}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":436120,"byte_end":436138,"line_start":159,"line_end":159,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5776},{"krate":0,"index":5777},{"krate":0,"index":5778},{"krate":0,"index":5779}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":437505,"byte_end":437523,"line_start":194,"line_end":194,"column_start":45,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5785}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":439093,"byte_end":439111,"line_start":256,"line_end":256,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5801},{"krate":0,"index":5802}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":440285,"byte_end":440303,"line_start":291,"line_end":291,"column_start":44,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5808}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":442874,"byte_end":442880,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5864}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":443120,"byte_end":443126,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5870}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":443406,"byte_end":443412,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5876},{"krate":0,"index":5877}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":444960,"byte_end":444972,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5941}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":445077,"byte_end":445089,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":445120,"byte_end":445132,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5946}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":445255,"byte_end":445267,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5949}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":445448,"byte_end":445460,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5952},{"krate":0,"index":5953}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":448042,"byte_end":448056,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":448082,"byte_end":448096,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5965},{"krate":0,"index":5966},{"krate":0,"index":5967},{"krate":0,"index":5968},{"krate":0,"index":5969},{"krate":0,"index":5970}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":450865,"byte_end":450879,"line_start":173,"line_end":173,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5973}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":450972,"byte_end":450986,"line_start":179,"line_end":179,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5976},{"krate":0,"index":5977},{"krate":0,"index":5978}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":452148,"byte_end":452162,"line_start":214,"line_end":214,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5981}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":452328,"byte_end":452342,"line_start":220,"line_end":220,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5984}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":452627,"byte_end":452641,"line_start":233,"line_end":233,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5989}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":452811,"byte_end":452825,"line_start":239,"line_end":239,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5992}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/abort.rs","byte_start":479872,"byte_end":479883,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6094}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":481257,"byte_end":481265,"line_start":40,"line_end":40,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6116},{"krate":0,"index":6117},{"krate":0,"index":6118}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":482446,"byte_end":482454,"line_start":75,"line_end":75,"column_start":40,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":482491,"byte_end":482501,"line_start":77,"line_end":77,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6124},{"krate":0,"index":6125},{"krate":0,"index":6126}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":483353,"byte_end":483363,"line_start":104,"line_end":104,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":483411,"byte_end":483418,"line_start":106,"line_end":106,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6132},{"krate":0,"index":6133},{"krate":0,"index":6134}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":483681,"byte_end":483688,"line_start":118,"line_end":118,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":483729,"byte_end":483739,"line_start":120,"line_end":120,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6140},{"krate":0,"index":6141},{"krate":0,"index":6142}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":484608,"byte_end":484618,"line_start":147,"line_end":147,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":484666,"byte_end":484670,"line_start":149,"line_end":149,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6148},{"krate":0,"index":6149},{"krate":0,"index":6150}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":484929,"byte_end":484933,"line_start":161,"line_end":161,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":485102,"byte_end":485112,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":485157,"byte_end":485167,"line_start":166,"line_end":166,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":485213,"byte_end":485223,"line_start":168,"line_end":168,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":485268,"byte_end":485278,"line_start":169,"line_end":169,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":485332,"byte_end":485340,"line_start":171,"line_end":171,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":485389,"byte_end":485397,"line_start":172,"line_end":172,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":487082,"byte_end":487086,"line_start":46,"line_end":46,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":487121,"byte_end":487125,"line_start":47,"line_end":47,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":487157,"byte_end":487161,"line_start":49,"line_end":49,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6241}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":488294,"byte_end":488298,"line_start":78,"line_end":78,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6244},{"krate":0,"index":6245}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":489298,"byte_end":489302,"line_start":109,"line_end":109,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6248}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":490752,"byte_end":490767,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6304},{"krate":0,"index":6305},{"krate":0,"index":6306},{"krate":0,"index":6307}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":493435,"byte_end":493450,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6310}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":455294,"byte_end":455310,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":455351,"byte_end":455367,"line_start":62,"line_end":62,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":455396,"byte_end":455412,"line_start":63,"line_end":63,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":455437,"byte_end":455453,"line_start":65,"line_end":65,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6330}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":455638,"byte_end":455654,"line_start":72,"line_end":72,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6332}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":457361,"byte_end":457377,"line_start":104,"line_end":104,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6335}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":457451,"byte_end":457467,"line_start":110,"line_end":110,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6338},{"krate":0,"index":6339},{"krate":0,"index":6340},{"krate":0,"index":6341},{"krate":0,"index":6342},{"krate":0,"index":6343},{"krate":0,"index":6344},{"krate":0,"index":6345},{"krate":0,"index":6346},{"krate":0,"index":6347},{"krate":0,"index":6348},{"krate":0,"index":6349},{"krate":0,"index":6350}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":469076,"byte_end":469092,"line_start":385,"line_end":385,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6353},{"krate":0,"index":6354},{"krate":0,"index":6363}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":473468,"byte_end":473472,"line_start":483,"line_end":483,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6362}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":476281,"byte_end":476297,"line_start":549,"line_end":549,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6366}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":476435,"byte_end":476451,"line_start":555,"line_end":555,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6369},{"krate":0,"index":6370}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":477022,"byte_end":477038,"line_start":575,"line_end":575,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6373}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":478688,"byte_end":478704,"line_start":616,"line_end":616,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6388},{"krate":0,"index":6389},{"krate":0,"index":6390}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":479174,"byte_end":479190,"line_start":630,"line_end":630,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6393}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":479466,"byte_end":479482,"line_start":643,"line_end":643,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6398}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":479604,"byte_end":479620,"line_start":649,"line_end":649,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6401}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":495045,"byte_end":495054,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6458}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":495199,"byte_end":495208,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6461},{"krate":0,"index":6462},{"krate":0,"index":6463},{"krate":0,"index":6464},{"krate":0,"index":6465},{"krate":0,"index":6466},{"krate":0,"index":6467}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":496681,"byte_end":496690,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6470}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":496789,"byte_end":496798,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6473},{"krate":0,"index":6474}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":497582,"byte_end":497591,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6477}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":498609,"byte_end":498618,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6482}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":498763,"byte_end":498772,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6486}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":498955,"byte_end":498964,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6490},{"krate":0,"index":6491},{"krate":0,"index":6492}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":500047,"byte_end":500051,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6508},{"krate":0,"index":6509},{"krate":0,"index":6510}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":500484,"byte_end":500488,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":500543,"byte_end":500550,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6516},{"krate":0,"index":6517},{"krate":0,"index":6518}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":500987,"byte_end":500994,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":501045,"byte_end":501053,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6523},{"krate":0,"index":6524},{"krate":0,"index":6525}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":501481,"byte_end":501489,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":503737,"byte_end":503739,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":503794,"byte_end":503796,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":538390,"byte_end":538400,"line_start":19,"line_end":19,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":538838,"byte_end":538848,"line_start":39,"line_end":39,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6778},{"krate":0,"index":6779},{"krate":0,"index":6780},{"krate":0,"index":6781}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":539359,"byte_end":539369,"line_start":61,"line_end":61,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6784},{"krate":0,"index":6785},{"krate":0,"index":6786},{"krate":0,"index":6787},{"krate":0,"index":6788}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":539914,"byte_end":539924,"line_start":82,"line_end":82,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6791},{"krate":0,"index":6792},{"krate":0,"index":6793},{"krate":0,"index":6794}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":540716,"byte_end":540726,"line_start":112,"line_end":112,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6797},{"krate":0,"index":6798},{"krate":0,"index":6799},{"krate":0,"index":6800},{"krate":0,"index":6801}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":541325,"byte_end":541335,"line_start":133,"line_end":133,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6804},{"krate":0,"index":6805}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":541839,"byte_end":541849,"line_start":154,"line_end":154,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6808}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":541993,"byte_end":542003,"line_start":163,"line_end":163,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6811}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":542265,"byte_end":542275,"line_start":176,"line_end":176,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6814},{"krate":0,"index":6815}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":542491,"byte_end":542501,"line_start":188,"line_end":188,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6818},{"krate":0,"index":6819}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":544308,"byte_end":544317,"line_start":40,"line_end":40,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6881},{"krate":0,"index":6882},{"krate":0,"index":15500},{"krate":0,"index":15501},{"krate":0,"index":15502},{"krate":0,"index":15503},{"krate":0,"index":6883},{"krate":0,"index":6884}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":545460,"byte_end":545469,"line_start":75,"line_end":75,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6887},{"krate":0,"index":6888}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":547030,"byte_end":547039,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6893},{"krate":0,"index":6894}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":548441,"byte_end":548450,"line_start":147,"line_end":147,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6898},{"krate":0,"index":6899}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":549280,"byte_end":549289,"line_start":168,"line_end":168,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":15504},{"krate":0,"index":15505},{"krate":0,"index":15506},{"krate":0,"index":15507}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":549367,"byte_end":549376,"line_start":172,"line_end":172,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6904}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":549692,"byte_end":549701,"line_start":181,"line_end":181,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6907}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":552621,"byte_end":552633,"line_start":244,"line_end":244,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6910},{"krate":0,"index":6911}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":554715,"byte_end":554724,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6975},{"krate":0,"index":6976},{"krate":0,"index":6977},{"krate":0,"index":15559},{"krate":0,"index":15560},{"krate":0,"index":15561},{"krate":0,"index":15562},{"krate":0,"index":6978},{"krate":0,"index":6979},{"krate":0,"index":6980},{"krate":0,"index":6981},{"krate":0,"index":6982},{"krate":0,"index":6983},{"krate":0,"index":6984}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":558323,"byte_end":558332,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6987},{"krate":0,"index":6988},{"krate":0,"index":6990},{"krate":0,"index":6991}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":559755,"byte_end":559764,"line_start":194,"line_end":194,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":15563},{"krate":0,"index":15564}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":559845,"byte_end":559854,"line_start":198,"line_end":198,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":15565},{"krate":0,"index":15566}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":559935,"byte_end":559944,"line_start":202,"line_end":202,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6998}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":560303,"byte_end":560312,"line_start":212,"line_end":212,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":7001}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":561366,"byte_end":561376,"line_start":25,"line_end":25,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7036},{"krate":0,"index":7037},{"krate":0,"index":7038},{"krate":0,"index":7039},{"krate":0,"index":7040}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":562578,"byte_end":562588,"line_start":58,"line_end":58,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7043},{"krate":0,"index":7044},{"krate":0,"index":7051},{"krate":0,"index":7052}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":566448,"byte_end":566453,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7092},{"krate":0,"index":7093},{"krate":0,"index":7094},{"krate":0,"index":7095},{"krate":0,"index":7096}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":567709,"byte_end":567714,"line_start":60,"line_end":60,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7100}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":568044,"byte_end":568049,"line_start":74,"line_end":74,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7104},{"krate":0,"index":7105}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":569118,"byte_end":569123,"line_start":114,"line_end":114,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7110},{"krate":0,"index":7111}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/close.rs","byte_start":570234,"byte_end":570239,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/close.rs","byte_start":570292,"byte_end":570297,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7140}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/close.rs","byte_start":570439,"byte_end":570444,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7143},{"krate":0,"index":7144}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":572214,"byte_end":572218,"line_start":52,"line_end":52,"column_start":63,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":7191},{"krate":0,"index":7192}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":573941,"byte_end":573948,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7236},{"krate":0,"index":7237}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":577114,"byte_end":577130,"line_start":81,"line_end":81,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7295},{"krate":0,"index":7296}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":579896,"byte_end":579902,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7342},{"krate":0,"index":7343},{"krate":0,"index":7344},{"krate":0,"index":7345},{"krate":0,"index":7346},{"krate":0,"index":7347}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":583102,"byte_end":583108,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7350}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":583395,"byte_end":583401,"line_start":161,"line_end":161,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7353},{"krate":0,"index":7354}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":584033,"byte_end":584039,"line_start":185,"line_end":185,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7357},{"krate":0,"index":7358}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":585243,"byte_end":585249,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":15854},{"krate":0,"index":15855},{"krate":0,"index":15856},{"krate":0,"index":15857}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":585324,"byte_end":585330,"line_start":230,"line_end":230,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":15858},{"krate":0,"index":15859},{"krate":0,"index":15860},{"krate":0,"index":15861}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":585408,"byte_end":585414,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":15862},{"krate":0,"index":15863},{"krate":0,"index":15864},{"krate":0,"index":15865}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":585487,"byte_end":585493,"line_start":238,"line_end":238,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":15866},{"krate":0,"index":15867},{"krate":0,"index":15868},{"krate":0,"index":15869}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":586410,"byte_end":586415,"line_start":35,"line_end":35,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7395}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":586624,"byte_end":586629,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7397},{"krate":0,"index":7398}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":586861,"byte_end":586866,"line_start":55,"line_end":55,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7400}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/fill_buf.rs","byte_start":587364,"byte_end":587371,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/fill_buf.rs","byte_start":587426,"byte_end":587433,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7433}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/fill_buf.rs","byte_start":587564,"byte_end":587571,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7437},{"krate":0,"index":7438}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/flush.rs","byte_start":589141,"byte_end":589146,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/flush.rs","byte_start":589199,"byte_end":589204,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7467}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/flush.rs","byte_start":589317,"byte_end":589322,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7470},{"krate":0,"index":7471}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/lines.rs","byte_start":590125,"byte_end":590130,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7509}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/lines.rs","byte_start":590293,"byte_end":590298,"line_start":30,"line_end":30,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7512},{"krate":0,"index":7513}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read.rs","byte_start":591275,"byte_end":591279,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read.rs","byte_start":591331,"byte_end":591335,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7542}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read.rs","byte_start":591500,"byte_end":591504,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7545},{"krate":0,"index":7546}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_vectored.rs","byte_start":592192,"byte_end":592204,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_vectored.rs","byte_start":592256,"byte_end":592268,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7579}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_vectored.rs","byte_start":592447,"byte_end":592459,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7582},{"krate":0,"index":7583}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_exact.rs","byte_start":593154,"byte_end":593163,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_exact.rs","byte_start":593215,"byte_end":593224,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7618}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_exact.rs","byte_start":593389,"byte_end":593398,"line_start":25,"line_end":25,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":7621},{"krate":0,"index":7622}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_line.rs","byte_start":594529,"byte_end":594537,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_line.rs","byte_start":594592,"byte_end":594600,"line_start":23,"line_end":23,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7663}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_line.rs","byte_start":595551,"byte_end":595559,"line_start":50,"line_end":50,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":7669},{"krate":0,"index":7670}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_end.rs","byte_start":596314,"byte_end":596323,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_end.rs","byte_start":596375,"byte_end":596384,"line_start":20,"line_end":20,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7705}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_end.rs","byte_start":596629,"byte_end":596634,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7711}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_end.rs","byte_start":598469,"byte_end":598478,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7716},{"krate":0,"index":7717}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_string.rs","byte_start":599351,"byte_end":599363,"line_start":20,"line_end":20,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_string.rs","byte_start":599415,"byte_end":599427,"line_start":22,"line_end":22,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7762}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_string.rs","byte_start":600338,"byte_end":600350,"line_start":49,"line_end":49,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7768},{"krate":0,"index":7769}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_until.rs","byte_start":601170,"byte_end":601179,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_until.rs","byte_start":601234,"byte_end":601243,"line_start":21,"line_end":21,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7804}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_until.rs","byte_start":602215,"byte_end":602224,"line_start":53,"line_end":53,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7809},{"krate":0,"index":7810}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":603382,"byte_end":603388,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7845},{"krate":0,"index":7846}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":604029,"byte_end":604035,"line_start":62,"line_end":62,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7848}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/seek.rs","byte_start":604549,"byte_end":604553,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/seek.rs","byte_start":604605,"byte_end":604609,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7885}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/seek.rs","byte_start":604766,"byte_end":604770,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7888},{"krate":0,"index":7889}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":605899,"byte_end":605903,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7921},{"krate":0,"index":7922},{"krate":0,"index":7924},{"krate":0,"index":7925}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":606621,"byte_end":606625,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7927}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":607642,"byte_end":607650,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7980}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":608150,"byte_end":608159,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7984}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":608551,"byte_end":608559,"line_start":54,"line_end":54,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7987},{"krate":0,"index":7989}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":609062,"byte_end":609071,"line_start":72,"line_end":72,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7993},{"krate":0,"index":7995},{"krate":0,"index":7997},{"krate":0,"index":7999}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":610086,"byte_end":610098,"line_start":102,"line_end":102,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8008}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":610262,"byte_end":610274,"line_start":108,"line_end":108,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8011}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":610508,"byte_end":610520,"line_start":115,"line_end":115,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":610993,"byte_end":610997,"line_start":19,"line_end":19,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8057},{"krate":0,"index":8058},{"krate":0,"index":8059},{"krate":0,"index":16065},{"krate":0,"index":16066},{"krate":0,"index":16067},{"krate":0,"index":16068}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612914,"byte_end":612918,"line_start":84,"line_end":84,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8062}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":613428,"byte_end":613432,"line_start":103,"line_end":103,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8065},{"krate":0,"index":8066}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":615275,"byte_end":615281,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8083},{"krate":0,"index":8084},{"krate":0,"index":8085},{"krate":0,"index":8086},{"krate":0,"index":8087},{"krate":0,"index":8088},{"krate":0,"index":8089}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":617351,"byte_end":617357,"line_start":94,"line_end":94,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8093}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":617504,"byte_end":617510,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8096}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write.rs","byte_start":618031,"byte_end":618036,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write.rs","byte_start":618089,"byte_end":618094,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8125}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write.rs","byte_start":618256,"byte_end":618261,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8128},{"krate":0,"index":8129}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_vectored.rs","byte_start":618945,"byte_end":618958,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_vectored.rs","byte_start":619011,"byte_end":619024,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8162}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_vectored.rs","byte_start":619197,"byte_end":619210,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":8165},{"krate":0,"index":8166}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_all.rs","byte_start":619902,"byte_end":619910,"line_start":17,"line_end":17,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_all.rs","byte_start":619963,"byte_end":619971,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8201}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_all.rs","byte_start":620133,"byte_end":620141,"line_start":25,"line_end":25,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":8204},{"krate":0,"index":8205}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":522321,"byte_end":522322,"line_start":398,"line_end":398,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":528777,"byte_end":528778,"line_start":592,"line_end":592,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":529665,"byte_end":529666,"line_start":620,"line_end":620,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":537145,"byte_end":537146,"line_start":824,"line_end":824,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":623456,"byte_end":623461,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":623498,"byte_end":623503,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":623519,"byte_end":623525,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8349},{"krate":0,"index":8350},{"krate":0,"index":8352},{"krate":0,"index":8353}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":629145,"byte_end":629150,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8356}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":629272,"byte_end":629277,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8359}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":629605,"byte_end":629617,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8367}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":629781,"byte_end":629793,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8370}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":630014,"byte_end":630026,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":630506,"byte_end":630517,"line_start":228,"line_end":228,"column_start":38,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":630547,"byte_end":630558,"line_start":230,"line_end":230,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8377},{"krate":0,"index":8378}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":630721,"byte_end":630732,"line_start":237,"line_end":237,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8381}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":630870,"byte_end":630881,"line_start":243,"line_end":243,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8384}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":631233,"byte_end":631244,"line_start":252,"line_end":252,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8387}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":632779,"byte_end":632784,"line_start":28,"line_end":28,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8453}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":633117,"byte_end":633122,"line_start":38,"line_end":38,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8456}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":633215,"byte_end":633220,"line_start":44,"line_end":44,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8459}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":633353,"byte_end":633359,"line_start":55,"line_end":55,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8467},{"krate":0,"index":8468}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":633805,"byte_end":633810,"line_start":74,"line_end":74,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8473},{"krate":0,"index":8474}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":634381,"byte_end":634386,"line_start":99,"line_end":99,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":8477},{"krate":0,"index":8478},{"krate":0,"index":8479},{"krate":0,"index":8480},{"krate":0,"index":8481},{"krate":0,"index":8482},{"krate":0,"index":8483}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":638242,"byte_end":638262,"line_start":207,"line_end":207,"column_start":32,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":8491}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":638694,"byte_end":638714,"line_start":220,"line_end":220,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":8494}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":638823,"byte_end":638843,"line_start":226,"line_end":226,"column_start":28,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8497},{"krate":0,"index":8498}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":640127,"byte_end":640147,"line_start":264,"line_end":264,"column_start":26,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8501}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":640792,"byte_end":640807,"line_start":283,"line_end":283,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8507}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":641053,"byte_end":641068,"line_start":292,"line_end":292,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8510}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":641162,"byte_end":641177,"line_start":298,"line_end":298,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8513},{"krate":0,"index":8514}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":641314,"byte_end":641329,"line_start":305,"line_end":305,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8517}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":641712,"byte_end":641727,"line_start":318,"line_end":318,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8525}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":642158,"byte_end":642173,"line_start":331,"line_end":331,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8528}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":642290,"byte_end":642305,"line_start":337,"line_end":337,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8532},{"krate":0,"index":8533}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":643534,"byte_end":643549,"line_start":373,"line_end":373,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8536}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":644151,"byte_end":644161,"line_start":392,"line_end":392,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8544}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":645173,"byte_end":645183,"line_start":422,"line_end":422,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8549}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":645389,"byte_end":645399,"line_start":428,"line_end":428,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8552}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":645497,"byte_end":645507,"line_start":434,"line_end":434,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8555},{"krate":0,"index":8556}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":645648,"byte_end":645658,"line_start":441,"line_end":441,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8559}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":646109,"byte_end":646125,"line_start":455,"line_end":455,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8571}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":647255,"byte_end":647271,"line_start":486,"line_end":486,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":8577}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":647536,"byte_end":647552,"line_start":495,"line_end":495,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":8581}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":647664,"byte_end":647680,"line_start":501,"line_end":501,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8585},{"krate":0,"index":8586}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":647823,"byte_end":647839,"line_start":508,"line_end":508,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":8590}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":648116,"byte_end":648121,"line_start":516,"line_end":516,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":648167,"byte_end":648172,"line_start":517,"line_end":517,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":648339,"byte_end":648354,"line_start":521,"line_end":521,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":648459,"byte_end":648474,"line_start":524,"line_end":524,"column_start":33,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":648645,"byte_end":648665,"line_start":528,"line_end":528,"column_start":40,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":648766,"byte_end":648786,"line_start":531,"line_end":531,"column_start":33,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":648986,"byte_end":648996,"line_start":535,"line_end":535,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":649046,"byte_end":649056,"line_start":536,"line_end":536,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":649107,"byte_end":649122,"line_start":538,"line_end":538,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":649168,"byte_end":649183,"line_start":539,"line_end":539,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":649248,"byte_end":649264,"line_start":541,"line_end":541,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":649335,"byte_end":649351,"line_start":542,"line_end":542,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":650193,"byte_end":650202,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8655},{"krate":0,"index":8656}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":652486,"byte_end":652497,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8658}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":653313,"byte_end":653320,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8660}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":653503,"byte_end":653510,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":653523,"byte_end":653532,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8664}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":654521,"byte_end":654530,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8669},{"krate":0,"index":8670}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":654769,"byte_end":654778,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8674},{"krate":0,"index":8675}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":655037,"byte_end":655048,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8678}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":655720,"byte_end":655721,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8698},{"krate":0,"index":8699}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":655956,"byte_end":655957,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8707}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":656227,"byte_end":656228,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8715}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":657244,"byte_end":657248,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8723}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":657342,"byte_end":657346,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8727},{"krate":0,"index":8728}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":657605,"byte_end":657612,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8733},{"krate":0,"index":8734}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":657835,"byte_end":657842,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8739}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":658033,"byte_end":658040,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8744}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":658345,"byte_end":658358,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8750},{"krate":0,"index":8751}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":658775,"byte_end":658784,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8756},{"krate":0,"index":8757}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":659068,"byte_end":659077,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8762}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":659339,"byte_end":659348,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8767}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":659670,"byte_end":659677,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8774},{"krate":0,"index":8775}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":659896,"byte_end":659903,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8781}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":660081,"byte_end":660088,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8787}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":660389,"byte_end":660397,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":8795},{"krate":0,"index":8796}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":660620,"byte_end":660628,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8802}],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":660810,"byte_end":660818,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8808}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":661128,"byte_end":661139,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8817},{"krate":0,"index":8818}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":661399,"byte_end":661410,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":8824}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":661647,"byte_end":661658,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":8830}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":662025,"byte_end":662037,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":8838},{"krate":0,"index":8839}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":662298,"byte_end":662310,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8845}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":662548,"byte_end":662560,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":8851}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":663179,"byte_end":663193,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8864},{"krate":0,"index":8865}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":663416,"byte_end":663430,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8871}],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":663631,"byte_end":663645,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8877}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":663951,"byte_end":663957,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8887}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":664050,"byte_end":664056,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8891},{"krate":0,"index":8892}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/unfold_state.rs","byte_start":664661,"byte_end":664672,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8903},{"krate":0,"index":8904}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10623,"byte_end":10629,"line_start":294,"line_end":294,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":17}},{"kind":"Mod","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10727,"byte_end":10733,"line_start":298,"line_end":298,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1863}},{"kind":"Mod","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":151420,"byte_end":151437,"line_start":112,"line_end":112,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":5997}},{"kind":"Mod","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":151636,"byte_end":151646,"line_start":120,"line_end":120,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":6406}},{"kind":"Mod","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11000,"byte_end":11004,"line_start":309,"line_end":309,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":6583}},{"kind":"Mod","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11015,"byte_end":11020,"line_start":311,"line_end":311,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":6682}},{"kind":"Mod","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11218,"byte_end":11220,"line_start":320,"line_end":320,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":6684}},{"kind":"Mod","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11462,"byte_end":11466,"line_start":330,"line_end":330,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":8281}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35483,"byte_end":35490,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":8905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35620,"byte_end":35627,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":8905},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35852,"byte_end":35859,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":8905},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":36633,"byte_end":36640,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":8905},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":36865,"byte_end":36872,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":8905},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":39886,"byte_end":39890,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":8952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":39997,"byte_end":40001,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":8952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41730,"byte_end":41734,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":8952},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41847,"byte_end":41851,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":8952},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":42829,"byte_end":42832,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":8988},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":43001,"byte_end":43004,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":8988},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":43266,"byte_end":43269,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":8988},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/catch_unwind.rs","byte_start":44475,"byte_end":44486,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":9540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/catch_unwind.rs","byte_start":44629,"byte_end":44640,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":9540},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":45867,"byte_end":45877,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":348},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":46078,"byte_end":46084,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":46127,"byte_end":46133,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":46391,"byte_end":46396,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":341},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":46550,"byte_end":46560,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":348},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":46792,"byte_end":46797,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":341},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":46894,"byte_end":46899,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":341},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":47143,"byte_end":47149,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":47573,"byte_end":47579,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":49645,"byte_end":49650,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":51346,"byte_end":51352,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":337},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":51504,"byte_end":51510,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":53162,"byte_end":53167,"line_start":270,"line_end":270,"column_start":23,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":407},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":54961,"byte_end":54967,"line_start":328,"line_end":328,"column_start":21,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":55126,"byte_end":55132,"line_start":337,"line_end":337,"column_start":20,"column_end":26},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":55560,"byte_end":55568,"line_start":354,"line_end":354,"column_start":18,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":345},"to":{"krate":22,"index":94}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":55927,"byte_end":55937,"line_start":367,"line_end":367,"column_start":19,"column_end":29},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18634,"byte_end":18635,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":432},"to":{"krate":0,"index":433}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18766,"byte_end":18772,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":13770},"to":{"krate":0,"index":433}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":78511,"byte_end":78521,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":9576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":78672,"byte_end":78682,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":9576},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":78805,"byte_end":78815,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":9576},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":79524,"byte_end":79534,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":9612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":79664,"byte_end":79674,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":9612},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":79917,"byte_end":79927,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":9612},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":80880,"byte_end":80890,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":9612},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":81133,"byte_end":81143,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":9612},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":84467,"byte_end":84480,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":9659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":84610,"byte_end":84623,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":9659},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":84866,"byte_end":84879,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":9659},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60909,"byte_end":60912,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":711},"to":{"krate":0,"index":712}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60995,"byte_end":61004,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":20,"index":44},"to":{"krate":0,"index":712}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86188,"byte_end":86192,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":10526},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86788,"byte_end":86792,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":10526},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":86936,"byte_end":86940,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":10526},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":87543,"byte_end":87550,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":10532},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":88153,"byte_end":88160,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":10532},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":88305,"byte_end":88312,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":10532},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":88338,"byte_end":88345,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":10532},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89099,"byte_end":89108,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":10538},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":89711,"byte_end":89720,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":10538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":90818,"byte_end":90827,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":10538},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":91028,"byte_end":91037,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":10538},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":92357,"byte_end":92369,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":10551},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":92595,"byte_end":92607,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":10551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":93720,"byte_end":93732,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":10551},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":93936,"byte_end":93948,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":10551},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":95598,"byte_end":95610,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":10564},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":95708,"byte_end":95720,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":10564},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":96034,"byte_end":96046,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":10564},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":96233,"byte_end":96245,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":10564},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":96683,"byte_end":96689,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1031},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":97383,"byte_end":97389,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1031},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":97531,"byte_end":97537,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1031},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":98265,"byte_end":98278,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":10603},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":98844,"byte_end":98857,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":10603},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":99877,"byte_end":99890,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":10603},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102062,"byte_end":102067,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":10642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102246,"byte_end":102251,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":10642},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102283,"byte_end":102288,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":10642},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":102385,"byte_end":102390,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":10642},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":110388,"byte_end":110395,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1286},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":112942,"byte_end":112949,"line_start":130,"line_end":130,"column_start":20,"column_end":27},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1286},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":113937,"byte_end":113944,"line_start":162,"line_end":162,"column_start":37,"column_end":44},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1286},"to":{"krate":2,"index":8401}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":114440,"byte_end":114446,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":10996},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":116882,"byte_end":116888,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":10996},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":117510,"byte_end":117516,"line_start":117,"line_end":117,"column_start":28,"column_end":34},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":10996},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":118079,"byte_end":118088,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":11004},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":119095,"byte_end":119104,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":11004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":119287,"byte_end":119296,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":11004},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":119951,"byte_end":119960,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":11004},"to":{"krate":2,"index":8401}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":128565,"byte_end":128575,"line_start":47,"line_end":47,"column_start":24,"column_end":34},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1564},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":131353,"byte_end":131363,"line_start":136,"line_end":136,"column_start":20,"column_end":30},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1564},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":132935,"byte_end":132945,"line_start":179,"line_end":179,"column_start":29,"column_end":39},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1564},"to":{"krate":2,"index":8401}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":133451,"byte_end":133460,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":11332},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":135299,"byte_end":135308,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":11332},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":136670,"byte_end":136678,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":11340},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":137756,"byte_end":137764,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":11340},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":139180,"byte_end":139188,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":11340},"to":{"krate":2,"index":8401}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":140167,"byte_end":140173,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":11346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":140512,"byte_end":140518,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":11346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":140903,"byte_end":140909,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":11346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":141290,"byte_end":141296,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":11346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":141537,"byte_end":141543,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":11346},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":141882,"byte_end":141888,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":11346},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":142164,"byte_end":142170,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":11346},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":142705,"byte_end":142711,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":11346},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":144383,"byte_end":144389,"line_start":191,"line_end":191,"column_start":30,"column_end":36},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":11346},"to":{"krate":25,"index":39}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":145190,"byte_end":145196,"line_start":219,"line_end":219,"column_start":31,"column_end":37},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":11346},"to":{"krate":25,"index":42}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":146503,"byte_end":146509,"line_start":261,"line_end":261,"column_start":30,"column_end":36},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":11346},"to":{"krate":25,"index":47}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":146939,"byte_end":146945,"line_start":278,"line_end":278,"column_start":33,"column_end":39},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":11346},"to":{"krate":25,"index":49}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":210523,"byte_end":210528,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":11363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":210754,"byte_end":210759,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":11363},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":210968,"byte_end":210973,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":11363},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":212569,"byte_end":212576,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":11412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":212818,"byte_end":212825,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":11412},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":213003,"byte_end":213010,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":11412},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":214036,"byte_end":214041,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":11461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":214389,"byte_end":214394,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":11461},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":214644,"byte_end":214649,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":11461},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":215774,"byte_end":215780,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":11523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":216000,"byte_end":216006,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":11523},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":216714,"byte_end":216720,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":11523},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":217446,"byte_end":217451,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":11563},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":217672,"byte_end":217677,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":11563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":217809,"byte_end":217814,"line_start":34,"line_end":34,"column_start":39,"column_end":44},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":11563},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":217932,"byte_end":217937,"line_start":40,"line_end":40,"column_start":29,"column_end":34},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":11563},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":218743,"byte_end":218748,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":11600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":218904,"byte_end":218909,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":11600},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":219658,"byte_end":219663,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":11600},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":220411,"byte_end":220420,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":11640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":220606,"byte_end":220615,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":11640},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":220733,"byte_end":220742,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":11640},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":222183,"byte_end":222189,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":11684},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":222662,"byte_end":222668,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":11684},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":222991,"byte_end":222997,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":11684},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":223334,"byte_end":223340,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":11684},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":225505,"byte_end":225514,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":11749},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":225811,"byte_end":225820,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":11749},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":226087,"byte_end":226096,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":11749},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":226363,"byte_end":226372,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":11749},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":228467,"byte_end":228474,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":11810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":228643,"byte_end":228650,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":11810},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":228842,"byte_end":228849,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":11810},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":230363,"byte_end":230367,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":11918},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":230723,"byte_end":230727,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":11918},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":230988,"byte_end":230992,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":11918},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":231227,"byte_end":231231,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":11918},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":232820,"byte_end":232823,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":11987},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":233153,"byte_end":233156,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":11987},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":233409,"byte_end":233412,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":11987},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":233641,"byte_end":233644,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":11987},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":235396,"byte_end":235399,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":12048},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":235729,"byte_end":235732,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":12048},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":235984,"byte_end":235987,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":12048},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":236216,"byte_end":236219,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":12048},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":237973,"byte_end":237980,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":12109},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":238273,"byte_end":238280,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":12109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":238511,"byte_end":238518,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":12109},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":238757,"byte_end":238764,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":12109},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":239865,"byte_end":239869,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":12166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":240366,"byte_end":240370,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":12166},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":240468,"byte_end":240472,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":12166},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":241674,"byte_end":241686,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":12210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":244176,"byte_end":244188,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":12210},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":244308,"byte_end":244320,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":12210},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":245205,"byte_end":245208,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":12285},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":245397,"byte_end":245400,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":12285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":245569,"byte_end":245572,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":12285},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":245740,"byte_end":245743,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":12285},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":246855,"byte_end":246859,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":12417},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":246910,"byte_end":246914,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":12417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":247065,"byte_end":247069,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":12417},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":247208,"byte_end":247212,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":12417},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":247863,"byte_end":247877,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":12425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":248028,"byte_end":248042,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":12425},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":248186,"byte_end":248200,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":12425},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":249511,"byte_end":249519,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":12433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":255016,"byte_end":255024,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":12433},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":255166,"byte_end":255174,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":12433},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":256326,"byte_end":256330,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":12477},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":256575,"byte_end":256579,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":12477},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":256690,"byte_end":256694,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":12477},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":257391,"byte_end":257398,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":12518},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":257646,"byte_end":257653,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":12518},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":257764,"byte_end":257771,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":12518},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":258491,"byte_end":258497,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":12559},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":258849,"byte_end":258855,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":12559},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":259124,"byte_end":259130,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":12559},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":260391,"byte_end":260399,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":12608},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":260719,"byte_end":260727,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":12608},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":260911,"byte_end":260919,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":12608},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":261290,"byte_end":261300,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2974},"to":{"krate":0,"index":8690}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":261965,"byte_end":261969,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":12657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":262160,"byte_end":262164,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":12657},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":262282,"byte_end":262286,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":12657},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":263883,"byte_end":263892,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":12701},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":264344,"byte_end":264353,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":12701},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":264679,"byte_end":264688,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":12701},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":264936,"byte_end":264945,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":12701},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":267238,"byte_end":267242,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":12770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":267415,"byte_end":267419,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":12770},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":268364,"byte_end":268368,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":12770},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":269391,"byte_end":269400,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":12814},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":269848,"byte_end":269857,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":12814},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":270176,"byte_end":270185,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":12814},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":271697,"byte_end":271706,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":12814},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":273090,"byte_end":273099,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":12883},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":273387,"byte_end":273396,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":12883},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":275513,"byte_end":275522,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":12883},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":276554,"byte_end":276563,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":12883},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":277505,"byte_end":277509,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":12940},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":277760,"byte_end":277764,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":12940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":278010,"byte_end":278014,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":12940},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":278240,"byte_end":278244,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":12940},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":280119,"byte_end":280122,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":13001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":281708,"byte_end":281711,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":13001},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":281906,"byte_end":281909,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":13001},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":284590,"byte_end":284596,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":13058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":285082,"byte_end":285088,"line_start":43,"line_end":43,"column_start":29,"column_end":35},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":13058},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":286696,"byte_end":286702,"line_start":88,"line_end":88,"column_start":39,"column_end":45},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":13058},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":287674,"byte_end":287685,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":13106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":288015,"byte_end":288026,"line_start":37,"line_end":37,"column_start":29,"column_end":40},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":13106},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":290187,"byte_end":290198,"line_start":96,"line_end":96,"column_start":39,"column_end":50},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":13106},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":291196,"byte_end":291200,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":13154},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":291686,"byte_end":291690,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":13154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":291854,"byte_end":291858,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":13154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":292220,"byte_end":292224,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":13154},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":293451,"byte_end":293455,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":13154},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":294636,"byte_end":294651,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":13223},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":294983,"byte_end":294998,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":13223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":295325,"byte_end":295340,"line_start":55,"line_end":55,"column_start":21,"column_end":36},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":13223},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":296794,"byte_end":296809,"line_start":100,"line_end":100,"column_start":26,"column_end":41},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":13223},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":297919,"byte_end":297927,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":13268},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":298274,"byte_end":298282,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":13268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":298562,"byte_end":298570,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":13268},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":301719,"byte_end":301734,"line_start":60,"line_end":60,"column_start":6,"column_end":21},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":13313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":305853,"byte_end":305866,"line_start":177,"line_end":177,"column_start":45,"column_end":58},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":306386,"byte_end":306399,"line_start":194,"line_end":194,"column_start":50,"column_end":63},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3709},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":306797,"byte_end":306807,"line_start":210,"line_end":210,"column_start":22,"column_end":32},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3724},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":306832,"byte_end":306842,"line_start":211,"line_end":211,"column_start":22,"column_end":32},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3724},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":306852,"byte_end":306862,"line_start":213,"line_end":213,"column_start":6,"column_end":16},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":307913,"byte_end":307923,"line_start":239,"line_end":239,"column_start":18,"column_end":28},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3724},"to":{"krate":22,"index":94}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":309524,"byte_end":309537,"line_start":279,"line_end":279,"column_start":10,"column_end":23},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":13319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":309741,"byte_end":309754,"line_start":286,"line_end":286,"column_start":37,"column_end":50},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":13319},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":310869,"byte_end":310885,"line_start":322,"line_end":322,"column_start":25,"column_end":41},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":13352},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":311359,"byte_end":311375,"line_start":338,"line_end":338,"column_start":10,"column_end":26},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":13352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":312314,"byte_end":312334,"line_start":368,"line_end":368,"column_start":10,"column_end":30},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":13361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":312601,"byte_end":312617,"line_start":378,"line_end":378,"column_start":26,"column_end":42},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":13352},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":312822,"byte_end":312838,"line_start":388,"line_end":388,"column_start":21,"column_end":37},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":13352},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":318267,"byte_end":318284,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":13496},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":318630,"byte_end":318647,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":13496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":319080,"byte_end":319097,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":13496},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":319327,"byte_end":319344,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":13496},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/catch_unwind.rs","byte_start":321704,"byte_end":321715,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":13557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/catch_unwind.rs","byte_start":321907,"byte_end":321918,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":13557},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/catch_unwind.rs","byte_start":322770,"byte_end":322781,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":13557},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159898,"byte_end":159899,"line_start":245,"line_end":245,"column_start":31,"column_end":32},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3879},"to":{"krate":0,"index":3880}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160042,"byte_end":160048,"line_start":249,"line_end":249,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":20,"index":96},"to":{"krate":0,"index":3880}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":361785,"byte_end":361792,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":13601},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":362085,"byte_end":362092,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":13601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":362373,"byte_end":362380,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":13601},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":363516,"byte_end":363523,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":13601},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":364441,"byte_end":364451,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":13869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":364644,"byte_end":364654,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":13869},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":364775,"byte_end":364785,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":13869},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":365884,"byte_end":365890,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":14047},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":366182,"byte_end":366188,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":14047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":366466,"byte_end":366472,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":14047},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":367742,"byte_end":367748,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":14047},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":368652,"byte_end":368659,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":14108},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":368713,"byte_end":368720,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":14108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":368883,"byte_end":368890,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":14108},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":369032,"byte_end":369039,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":14108},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":369815,"byte_end":369825,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":14116},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":370121,"byte_end":370131,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":14116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":370376,"byte_end":370386,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":14116},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":371785,"byte_end":371794,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":14173},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":372190,"byte_end":372199,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":14173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":372442,"byte_end":372451,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":14173},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":372708,"byte_end":372717,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":14173},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":374851,"byte_end":374863,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":14238},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":375163,"byte_end":375175,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":14238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":375372,"byte_end":375384,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":14238},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":375662,"byte_end":375674,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":14238},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":377851,"byte_end":377861,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":14299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":378126,"byte_end":378136,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":14299},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":378382,"byte_end":378392,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":14299},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":380001,"byte_end":380011,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":14343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":380151,"byte_end":380161,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":14343},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":380349,"byte_end":380359,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":14343},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_concat.rs","byte_start":381334,"byte_end":381343,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":14392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_concat.rs","byte_start":381562,"byte_end":381571,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":14392},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":382955,"byte_end":382964,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":14432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":383459,"byte_end":383468,"line_start":44,"line_end":44,"column_start":32,"column_end":41},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":14432},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":385408,"byte_end":385417,"line_start":95,"line_end":95,"column_start":51,"column_end":60},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":14432},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":386076,"byte_end":386090,"line_start":118,"line_end":118,"column_start":39,"column_end":53},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":14480},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":386235,"byte_end":386249,"line_start":124,"line_end":124,"column_start":43,"column_end":57},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":14480},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":386436,"byte_end":386450,"line_start":131,"line_end":131,"column_start":61,"column_end":75},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":14480},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":387060,"byte_end":387067,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":14501},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":387426,"byte_end":387433,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":14501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":387713,"byte_end":387720,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":14501},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":387974,"byte_end":387981,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":14501},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":391844,"byte_end":391853,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":14570},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":392115,"byte_end":392124,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":14570},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":393870,"byte_end":393882,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":14627},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":394338,"byte_end":394350,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":14627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":394690,"byte_end":394702,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":14627},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":396194,"byte_end":396206,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":14627},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":397434,"byte_end":397446,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":14696},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":397898,"byte_end":397910,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":14696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":398248,"byte_end":398260,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":14696},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":399860,"byte_end":399872,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":14696},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffer_unordered.rs","byte_start":401160,"byte_end":401178,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":14765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffer_unordered.rs","byte_start":401517,"byte_end":401535,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":14765},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffered.rs","byte_start":403741,"byte_end":403752,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":14813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffered.rs","byte_start":404089,"byte_end":404100,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":14813},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":406263,"byte_end":406283,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":14861},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":406648,"byte_end":406668,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":14861},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":406907,"byte_end":406927,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":14861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":407375,"byte_end":407395,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":14861},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":410684,"byte_end":410697,"line_start":33,"line_end":33,"column_start":10,"column_end":23},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":14922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":410901,"byte_end":410914,"line_start":43,"line_end":43,"column_start":24,"column_end":37},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":14922},"to":{"krate":25,"index":39}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":412565,"byte_end":412578,"line_start":93,"line_end":93,"column_start":25,"column_end":38},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":14922},"to":{"krate":25,"index":42}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":413194,"byte_end":413207,"line_start":114,"line_end":114,"column_start":27,"column_end":40},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":14922},"to":{"krate":25,"index":49}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328181,"byte_end":328182,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":5185},"to":{"krate":0,"index":5186}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328263,"byte_end":328272,"line_start":157,"line_end":157,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":20,"index":127},"to":{"krate":0,"index":5186}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":415289,"byte_end":415293,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":14974},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":415915,"byte_end":415919,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":14974},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":417110,"byte_end":417116,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":14983},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":417143,"byte_end":417149,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":14983},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":417457,"byte_end":417463,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":14983},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":418060,"byte_end":418070,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":14992},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":418114,"byte_end":418124,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":14992},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":418438,"byte_end":418448,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":14992},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":420968,"byte_end":420973,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":15001},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":421005,"byte_end":421010,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":15001},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":421095,"byte_end":421100,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":15001},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":421349,"byte_end":421354,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":15001},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":422293,"byte_end":422297,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":15007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":422426,"byte_end":422430,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":15007},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":423035,"byte_end":423039,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":15007},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":423698,"byte_end":423705,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":15043},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":423737,"byte_end":423744,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":15043},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":423829,"byte_end":423836,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":15043},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":424081,"byte_end":424088,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":15043},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":424475,"byte_end":424481,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":5603},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":424512,"byte_end":424518,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":5603},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":425283,"byte_end":425289,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":5603},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":425985,"byte_end":425998,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":15049},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":426911,"byte_end":426924,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":15049},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":429811,"byte_end":429817,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":15088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":431121,"byte_end":431127,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":15088},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":431306,"byte_end":431312,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":15088},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":431987,"byte_end":431995,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":15133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":432345,"byte_end":432353,"line_start":32,"line_end":32,"column_start":18,"column_end":26},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":15133},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":432510,"byte_end":432523,"line_start":45,"line_end":45,"column_start":6,"column_end":19},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":5755},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":436120,"byte_end":436138,"line_start":159,"line_end":159,"column_start":29,"column_end":47},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":15152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":437505,"byte_end":437523,"line_start":194,"line_end":194,"column_start":45,"column_end":63},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":15152},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":439093,"byte_end":439111,"line_start":256,"line_end":256,"column_start":40,"column_end":58},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":15152},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":440285,"byte_end":440303,"line_start":291,"line_end":291,"column_start":44,"column_end":62},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":15152},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":442874,"byte_end":442880,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":15225},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":443120,"byte_end":443126,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":15225},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":443406,"byte_end":443412,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":15225},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":444960,"byte_end":444972,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":15278},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":445077,"byte_end":445089,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":15278},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":445120,"byte_end":445132,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":15278},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":445255,"byte_end":445267,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":15278},"to":{"krate":2,"index":2951}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":445448,"byte_end":445460,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":15278},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":448042,"byte_end":448056,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":5955},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":448082,"byte_end":448096,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":5955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":450865,"byte_end":450879,"line_start":173,"line_end":173,"column_start":31,"column_end":45},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":5955},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":450972,"byte_end":450986,"line_start":179,"line_end":179,"column_start":30,"column_end":44},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":5955},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":452148,"byte_end":452162,"line_start":214,"line_end":214,"column_start":29,"column_end":43},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":5955},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":452328,"byte_end":452342,"line_start":220,"line_end":220,"column_start":41,"column_end":55},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":5955},"to":{"krate":2,"index":8401}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":452627,"byte_end":452641,"line_start":233,"line_end":233,"column_start":35,"column_end":49},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":5955},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":452811,"byte_end":452825,"line_start":239,"line_end":239,"column_start":35,"column_end":49},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":5955},"to":{"krate":2,"index":8414}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/abort.rs","byte_start":479872,"byte_end":479883,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":6091},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":481257,"byte_end":481265,"line_start":40,"line_end":40,"column_start":31,"column_end":39},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":15357},"to":{"krate":2,"index":8603}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":482446,"byte_end":482454,"line_start":75,"line_end":75,"column_start":40,"column_end":48},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":15357},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":482491,"byte_end":482501,"line_start":77,"line_end":77,"column_start":28,"column_end":38},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":15318},"to":{"krate":2,"index":8603}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":483353,"byte_end":483363,"line_start":104,"line_end":104,"column_start":33,"column_end":43},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":15318},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":483411,"byte_end":483418,"line_start":106,"line_end":106,"column_start":35,"column_end":42},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":15328},"to":{"krate":2,"index":8603}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":483681,"byte_end":483688,"line_start":118,"line_end":118,"column_start":40,"column_end":47},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":15328},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":483729,"byte_end":483739,"line_start":120,"line_end":120,"column_start":28,"column_end":38},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":15337},"to":{"krate":2,"index":8603}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":484608,"byte_end":484618,"line_start":147,"line_end":147,"column_start":33,"column_end":43},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":15337},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":484666,"byte_end":484670,"line_start":149,"line_end":149,"column_start":35,"column_end":39},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":15348},"to":{"krate":2,"index":8603}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":484929,"byte_end":484933,"line_start":161,"line_end":161,"column_start":40,"column_end":44},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":15348},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":485102,"byte_end":485112,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":15337},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":485157,"byte_end":485167,"line_start":166,"line_end":166,"column_start":33,"column_end":43},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":15337},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":485213,"byte_end":485223,"line_start":168,"line_end":168,"column_start":33,"column_end":43},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":15318},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":485268,"byte_end":485278,"line_start":169,"line_end":169,"column_start":33,"column_end":43},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":15318},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":485332,"byte_end":485340,"line_start":171,"line_end":171,"column_start":41,"column_end":49},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":15357},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":485389,"byte_end":485397,"line_start":172,"line_end":172,"column_start":41,"column_end":49},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":15357},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":487082,"byte_end":487086,"line_start":46,"line_end":46,"column_start":27,"column_end":31},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":6225},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":487121,"byte_end":487125,"line_start":47,"line_end":47,"column_start":27,"column_end":31},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":6225},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":487157,"byte_end":487161,"line_start":49,"line_end":49,"column_start":23,"column_end":27},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":6225},"to":{"krate":22,"index":94}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":488294,"byte_end":488298,"line_start":78,"line_end":78,"column_start":11,"column_end":15},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":6225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":489298,"byte_end":489302,"line_start":109,"line_end":109,"column_start":20,"column_end":24},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":6225},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":490752,"byte_end":490767,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":6296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":493435,"byte_end":493450,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":6296},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":455294,"byte_end":455310,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":6318},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":455351,"byte_end":455367,"line_start":62,"line_end":62,"column_start":33,"column_end":49},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":6318},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":455396,"byte_end":455412,"line_start":63,"line_end":63,"column_start":21,"column_end":37},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":6318},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":455437,"byte_end":455453,"line_start":65,"line_end":65,"column_start":16,"column_end":32},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":6318},"to":{"krate":22,"index":15}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":455638,"byte_end":455654,"line_start":72,"line_end":72,"column_start":21,"column_end":37},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":6318},"to":{"krate":22,"index":18}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":457361,"byte_end":457377,"line_start":104,"line_end":104,"column_start":23,"column_end":39},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":6318},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":457451,"byte_end":457467,"line_start":110,"line_end":110,"column_start":11,"column_end":27},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":6318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":469076,"byte_end":469092,"line_start":385,"line_end":385,"column_start":30,"column_end":46},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":6318},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":473468,"byte_end":473472,"line_start":483,"line_end":483,"column_start":32,"column_end":36},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":6355},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":476281,"byte_end":476297,"line_start":549,"line_end":549,"column_start":21,"column_end":37},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":6318},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":476435,"byte_end":476451,"line_start":555,"line_end":555,"column_start":11,"column_end":27},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":6318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":477022,"byte_end":477038,"line_start":575,"line_end":575,"column_start":20,"column_end":36},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":6318},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":478688,"byte_end":478704,"line_start":616,"line_end":616,"column_start":35,"column_end":51},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":6318},"to":{"krate":2,"index":8405}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":479174,"byte_end":479190,"line_start":630,"line_end":630,"column_start":33,"column_end":49},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":6318},"to":{"krate":2,"index":8401}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":479466,"byte_end":479482,"line_start":643,"line_end":643,"column_start":35,"column_end":51},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":6318},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":479604,"byte_end":479620,"line_start":649,"line_end":649,"column_start":27,"column_end":43},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":6318},"to":{"krate":2,"index":8414}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":495045,"byte_end":495054,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":15364},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":495199,"byte_end":495208,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":15364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":496681,"byte_end":496690,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":15364},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":496789,"byte_end":496798,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":15364},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":497582,"byte_end":497591,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":15364},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":498609,"byte_end":498618,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":15364},"to":{"krate":2,"index":8401}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":498763,"byte_end":498772,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":15364},"to":{"krate":2,"index":8414}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":498955,"byte_end":498964,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":15364},"to":{"krate":2,"index":8405}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":500047,"byte_end":500051,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":15397},"to":{"krate":2,"index":8603}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":500484,"byte_end":500488,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":15397},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":500543,"byte_end":500550,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":15406},"to":{"krate":2,"index":8603}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":500987,"byte_end":500994,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":15406},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":501045,"byte_end":501053,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":15415},"to":{"krate":2,"index":8603}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":501481,"byte_end":501489,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":15415},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":503737,"byte_end":503739,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":6666},"to":{"krate":0,"index":6669}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":503794,"byte_end":503796,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":6668},"to":{"krate":0,"index":6672}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":503875,"byte_end":503880,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":22,"index":15},"to":{"krate":0,"index":6669}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":507000,"byte_end":507010,"line_start":103,"line_end":103,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":22,"index":18},"to":{"krate":0,"index":6672}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":538390,"byte_end":538400,"line_start":19,"line_end":19,"column_start":19,"column_end":29},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":15422},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":538838,"byte_end":538848,"line_start":39,"line_end":39,"column_start":9,"column_end":19},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":15422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":539359,"byte_end":539369,"line_start":61,"line_end":61,"column_start":23,"column_end":33},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":15422},"to":{"krate":1,"index":4724}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":539914,"byte_end":539924,"line_start":82,"line_end":82,"column_start":24,"column_end":34},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":15422},"to":{"krate":25,"index":42}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":540716,"byte_end":540726,"line_start":112,"line_end":112,"column_start":22,"column_end":32},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":15422},"to":{"krate":1,"index":4667}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":541325,"byte_end":541335,"line_start":133,"line_end":133,"column_start":23,"column_end":33},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":15422},"to":{"krate":25,"index":39}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":541839,"byte_end":541849,"line_start":154,"line_end":154,"column_start":22,"column_end":32},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":15422},"to":{"krate":1,"index":4742}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":541993,"byte_end":542003,"line_start":163,"line_end":163,"column_start":23,"column_end":33},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":15422},"to":{"krate":25,"index":47}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":542265,"byte_end":542275,"line_start":176,"line_end":176,"column_start":25,"column_end":35},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":15422},"to":{"krate":1,"index":4749}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":542491,"byte_end":542501,"line_start":188,"line_end":188,"column_start":26,"column_end":36},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":15422},"to":{"krate":25,"index":49}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":544308,"byte_end":544317,"line_start":40,"line_end":40,"column_start":20,"column_end":29},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":15455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":545460,"byte_end":545469,"line_start":75,"line_end":75,"column_start":32,"column_end":41},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":15455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":547030,"byte_end":547039,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":15455},"to":{"krate":25,"index":39}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":548441,"byte_end":548450,"line_start":147,"line_end":147,"column_start":37,"column_end":46},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":15455},"to":{"krate":25,"index":49}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":549280,"byte_end":549289,"line_start":168,"line_end":168,"column_start":36,"column_end":45},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":15455},"to":{"krate":25,"index":42}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":549367,"byte_end":549376,"line_start":172,"line_end":172,"column_start":36,"column_end":45},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":15455},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":549692,"byte_end":549701,"line_start":181,"line_end":181,"column_start":46,"column_end":55},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":15455},"to":{"krate":25,"index":47}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":552621,"byte_end":552633,"line_start":244,"line_end":244,"column_start":20,"column_end":32},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":15508},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":554715,"byte_end":554724,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":15518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":558323,"byte_end":558332,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":15518},"to":{"krate":25,"index":42}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":559755,"byte_end":559764,"line_start":194,"line_end":194,"column_start":34,"column_end":43},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":15518},"to":{"krate":25,"index":39}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":559845,"byte_end":559854,"line_start":198,"line_end":198,"column_start":40,"column_end":49},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":15518},"to":{"krate":25,"index":49}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":559935,"byte_end":559944,"line_start":202,"line_end":202,"column_start":36,"column_end":45},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":15518},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":560303,"byte_end":560312,"line_start":212,"line_end":212,"column_start":47,"column_end":56},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":15518},"to":{"krate":25,"index":47}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":561366,"byte_end":561376,"line_start":25,"line_end":25,"column_start":21,"column_end":31},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":15567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":562578,"byte_end":562588,"line_start":58,"line_end":58,"column_start":36,"column_end":46},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":15567},"to":{"krate":25,"index":42}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":566448,"byte_end":566453,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":15603},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":567709,"byte_end":567714,"line_start":60,"line_end":60,"column_start":27,"column_end":32},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":15603},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":568044,"byte_end":568049,"line_start":74,"line_end":74,"column_start":26,"column_end":31},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":15603},"to":{"krate":25,"index":39}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":569118,"byte_end":569123,"line_start":114,"line_end":114,"column_start":29,"column_end":34},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":15603},"to":{"krate":25,"index":49}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/close.rs","byte_start":570234,"byte_end":570239,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":15652},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/close.rs","byte_start":570292,"byte_end":570297,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":15652},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/close.rs","byte_start":570439,"byte_end":570444,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":15652},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":572214,"byte_end":572218,"line_start":52,"line_end":52,"column_start":63,"column_end":67},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":15660},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":573941,"byte_end":573948,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":15714},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":577114,"byte_end":577130,"line_start":81,"line_end":81,"column_start":23,"column_end":39},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":15776},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":579896,"byte_end":579902,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":15842},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":583102,"byte_end":583108,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":15842},"to":{"krate":25,"index":47}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":583395,"byte_end":583401,"line_start":161,"line_end":161,"column_start":44,"column_end":50},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":15842},"to":{"krate":25,"index":39}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":584033,"byte_end":584039,"line_start":185,"line_end":185,"column_start":26,"column_end":32},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":15842},"to":{"krate":25,"index":49}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":585243,"byte_end":585249,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":15842},"to":{"krate":25,"index":42}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":585324,"byte_end":585330,"line_start":230,"line_end":230,"column_start":21,"column_end":27},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":15842},"to":{"krate":25,"index":42}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":585408,"byte_end":585414,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":15842},"to":{"krate":25,"index":42}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":585487,"byte_end":585493,"line_start":238,"line_end":238,"column_start":21,"column_end":27},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":15842},"to":{"krate":25,"index":42}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":586410,"byte_end":586415,"line_start":35,"line_end":35,"column_start":20,"column_end":25},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":7391},"to":{"krate":25,"index":39}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":586624,"byte_end":586629,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":7391},"to":{"krate":25,"index":49}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":586861,"byte_end":586866,"line_start":55,"line_end":55,"column_start":21,"column_end":26},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":7391},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/fill_buf.rs","byte_start":587364,"byte_end":587371,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":15870},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/fill_buf.rs","byte_start":587426,"byte_end":587433,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":15870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/fill_buf.rs","byte_start":587564,"byte_end":587571,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":15870},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/flush.rs","byte_start":589141,"byte_end":589146,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":15878},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/flush.rs","byte_start":589199,"byte_end":589204,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":15878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/flush.rs","byte_start":589317,"byte_end":589322,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":15878},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/lines.rs","byte_start":590125,"byte_end":590130,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":15886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/lines.rs","byte_start":590293,"byte_end":590298,"line_start":30,"line_end":30,"column_start":34,"column_end":39},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":15886},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read.rs","byte_start":591275,"byte_end":591279,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":15934},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read.rs","byte_start":591331,"byte_end":591335,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":15934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read.rs","byte_start":591500,"byte_end":591504,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":15934},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_vectored.rs","byte_start":592192,"byte_end":592204,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":15943},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_vectored.rs","byte_start":592256,"byte_end":592268,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":15943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_vectored.rs","byte_start":592447,"byte_end":592459,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":15943},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_exact.rs","byte_start":593154,"byte_end":593163,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":15952},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_exact.rs","byte_start":593215,"byte_end":593224,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":15952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_exact.rs","byte_start":593389,"byte_end":593398,"line_start":25,"line_end":25,"column_start":48,"column_end":57},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":15952},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_line.rs","byte_start":594529,"byte_end":594537,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":15961},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_line.rs","byte_start":594592,"byte_end":594600,"line_start":23,"line_end":23,"column_start":44,"column_end":52},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":15961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_line.rs","byte_start":595551,"byte_end":595559,"line_start":50,"line_end":50,"column_start":51,"column_end":59},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":15961},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_end.rs","byte_start":596314,"byte_end":596323,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":15972},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_end.rs","byte_start":596375,"byte_end":596384,"line_start":20,"line_end":20,"column_start":41,"column_end":50},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":15972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_end.rs","byte_start":596629,"byte_end":596634,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":7706},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_end.rs","byte_start":598469,"byte_end":598478,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":15972},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_string.rs","byte_start":599351,"byte_end":599363,"line_start":20,"line_end":20,"column_start":35,"column_end":47},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":15982},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_string.rs","byte_start":599415,"byte_end":599427,"line_start":22,"line_end":22,"column_start":41,"column_end":53},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":15982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_string.rs","byte_start":600338,"byte_end":600350,"line_start":49,"line_end":49,"column_start":20,"column_end":32},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":15982},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_until.rs","byte_start":601170,"byte_end":601179,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":15993},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_until.rs","byte_start":601234,"byte_end":601243,"line_start":21,"line_end":21,"column_start":44,"column_end":53},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":15993},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_until.rs","byte_start":602215,"byte_end":602224,"line_start":53,"line_end":53,"column_start":51,"column_end":60},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":15993},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":603382,"byte_end":603388,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":7841},"to":{"krate":25,"index":39}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":604029,"byte_end":604035,"line_start":62,"line_end":62,"column_start":21,"column_end":27},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":7841},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/seek.rs","byte_start":604549,"byte_end":604553,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":16004},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/seek.rs","byte_start":604605,"byte_end":604609,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":16004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/seek.rs","byte_start":604766,"byte_end":604770,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":16004},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":605899,"byte_end":605903,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":7917},"to":{"krate":25,"index":42}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":606621,"byte_end":606625,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":7917},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":607642,"byte_end":607650,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":16013},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":608150,"byte_end":608159,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":16019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":608551,"byte_end":608559,"line_start":54,"line_end":54,"column_start":34,"column_end":42},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":16013},"to":{"krate":25,"index":39}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":609062,"byte_end":609071,"line_start":72,"line_end":72,"column_start":36,"column_end":45},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":16019},"to":{"krate":25,"index":42}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":610086,"byte_end":610098,"line_start":102,"line_end":102,"column_start":24,"column_end":36},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":8001},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":610262,"byte_end":610274,"line_start":108,"line_end":108,"column_start":26,"column_end":38},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":8001},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":610508,"byte_end":610520,"line_start":115,"line_end":115,"column_start":47,"column_end":59},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":8001},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":610993,"byte_end":610997,"line_start":19,"line_end":19,"column_start":20,"column_end":24},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":16025},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":612914,"byte_end":612918,"line_start":84,"line_end":84,"column_start":34,"column_end":38},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":16025},"to":{"krate":25,"index":39}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":613428,"byte_end":613432,"line_start":103,"line_end":103,"column_start":40,"column_end":44},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":16025},"to":{"krate":25,"index":49}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":615275,"byte_end":615281,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":16069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":617351,"byte_end":617357,"line_start":94,"line_end":94,"column_start":38,"column_end":44},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":16069},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":617504,"byte_end":617510,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":16069},"to":{"krate":2,"index":3163}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write.rs","byte_start":618031,"byte_end":618036,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":16076},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write.rs","byte_start":618089,"byte_end":618094,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":16076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write.rs","byte_start":618256,"byte_end":618261,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":16076},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_vectored.rs","byte_start":618945,"byte_end":618958,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":16085},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_vectored.rs","byte_start":619011,"byte_end":619024,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":16085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_vectored.rs","byte_start":619197,"byte_end":619210,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":16085},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_all.rs","byte_start":619902,"byte_end":619910,"line_start":17,"line_end":17,"column_start":35,"column_end":43},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":16094},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_all.rs","byte_start":619963,"byte_end":619971,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":16094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_all.rs","byte_start":620133,"byte_end":620141,"line_start":25,"line_end":25,"column_start":49,"column_end":57},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":16094},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":514064,"byte_end":514073,"line_start":148,"line_end":148,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":25,"index":39},"to":{"krate":0,"index":8209}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":522321,"byte_end":522322,"line_start":398,"line_end":398,"column_start":46,"column_end":47},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":8225},"to":{"krate":0,"index":8209}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":522425,"byte_end":522435,"line_start":401,"line_end":401,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":25,"index":42},"to":{"krate":0,"index":8226}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":528777,"byte_end":528778,"line_start":592,"line_end":592,"column_start":48,"column_end":49},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":8236},"to":{"krate":0,"index":8226}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":528879,"byte_end":528888,"line_start":595,"line_end":595,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":25,"index":47},"to":{"krate":0,"index":8237}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":529665,"byte_end":529666,"line_start":620,"line_end":620,"column_start":46,"column_end":47},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":8241},"to":{"krate":0,"index":8237}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":529773,"byte_end":529785,"line_start":623,"line_end":623,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":25,"index":49},"to":{"krate":0,"index":8242}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":537145,"byte_end":537146,"line_start":824,"line_end":824,"column_start":52,"column_end":53},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":8251},"to":{"krate":0,"index":8242}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":623456,"byte_end":623461,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":16109},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":623498,"byte_end":623503,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":16109},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":623519,"byte_end":623525,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":16103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":629145,"byte_end":629150,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":16109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":629272,"byte_end":629277,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":16109},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":629605,"byte_end":629617,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":8360},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":629781,"byte_end":629793,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":8360},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":630014,"byte_end":630026,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":8360},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":630506,"byte_end":630517,"line_start":228,"line_end":228,"column_start":38,"column_end":49},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":16116},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":630547,"byte_end":630558,"line_start":230,"line_end":230,"column_start":19,"column_end":30},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":16116},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":630721,"byte_end":630732,"line_start":237,"line_end":237,"column_start":29,"column_end":40},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":16116},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":630870,"byte_end":630881,"line_start":243,"line_end":243,"column_start":9,"column_end":20},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":16116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":631233,"byte_end":631244,"line_start":252,"line_end":252,"column_start":18,"column_end":29},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":16116},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":632779,"byte_end":632784,"line_start":28,"line_end":28,"column_start":32,"column_end":37},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":8446},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":633117,"byte_end":633122,"line_start":38,"line_end":38,"column_start":21,"column_end":26},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":8446},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":633215,"byte_end":633220,"line_start":44,"line_end":44,"column_start":30,"column_end":35},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":8446},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":633353,"byte_end":633359,"line_start":55,"line_end":55,"column_start":6,"column_end":12},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":8460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":633805,"byte_end":633810,"line_start":74,"line_end":74,"column_start":9,"column_end":14},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":8446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":634381,"byte_end":634386,"line_start":99,"line_end":99,"column_start":17,"column_end":22},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":8446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":638242,"byte_end":638262,"line_start":207,"line_end":207,"column_start":32,"column_end":52},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":8485},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":638694,"byte_end":638714,"line_start":220,"line_end":220,"column_start":33,"column_end":53},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":8485},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":638823,"byte_end":638843,"line_start":226,"line_end":226,"column_start":28,"column_end":48},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":8485},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":640127,"byte_end":640147,"line_start":264,"line_end":264,"column_start":26,"column_end":46},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":8485},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":640792,"byte_end":640807,"line_start":283,"line_end":283,"column_start":45,"column_end":60},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":8502},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":641053,"byte_end":641068,"line_start":292,"line_end":292,"column_start":26,"column_end":41},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":8502},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":641162,"byte_end":641177,"line_start":298,"line_end":298,"column_start":27,"column_end":42},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":8502},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":641314,"byte_end":641329,"line_start":305,"line_end":305,"column_start":30,"column_end":45},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":8502},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":641712,"byte_end":641727,"line_start":318,"line_end":318,"column_start":32,"column_end":47},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":8518},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":642158,"byte_end":642173,"line_start":331,"line_end":331,"column_start":33,"column_end":48},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":8518},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":642290,"byte_end":642305,"line_start":337,"line_end":337,"column_start":32,"column_end":47},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":8518},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":643534,"byte_end":643549,"line_start":373,"line_end":373,"column_start":26,"column_end":41},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":8518},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":644151,"byte_end":644161,"line_start":392,"line_end":392,"column_start":21,"column_end":31},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":8537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":645173,"byte_end":645183,"line_start":422,"line_end":422,"column_start":45,"column_end":55},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":8537},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":645389,"byte_end":645399,"line_start":428,"line_end":428,"column_start":26,"column_end":36},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":8537},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":645497,"byte_end":645507,"line_start":434,"line_end":434,"column_start":27,"column_end":37},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":8537},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":645648,"byte_end":645658,"line_start":441,"line_end":441,"column_start":30,"column_end":40},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":8537},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":646109,"byte_end":646125,"line_start":455,"line_end":455,"column_start":32,"column_end":48},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":8560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":647255,"byte_end":647271,"line_start":486,"line_end":486,"column_start":56,"column_end":72},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":8560},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":647536,"byte_end":647552,"line_start":495,"line_end":495,"column_start":37,"column_end":53},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":8560},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":647664,"byte_end":647680,"line_start":501,"line_end":501,"column_start":38,"column_end":54},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":8560},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":647823,"byte_end":647839,"line_start":508,"line_end":508,"column_start":41,"column_end":57},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":8560},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":648116,"byte_end":648121,"line_start":516,"line_end":516,"column_start":40,"column_end":45},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":8446},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":648167,"byte_end":648172,"line_start":517,"line_end":517,"column_start":40,"column_end":45},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":8446},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":648339,"byte_end":648354,"line_start":521,"line_end":521,"column_start":40,"column_end":55},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":8518},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":648459,"byte_end":648474,"line_start":524,"line_end":524,"column_start":33,"column_end":48},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":8518},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":648645,"byte_end":648665,"line_start":528,"line_end":528,"column_start":40,"column_end":60},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":8485},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":648766,"byte_end":648786,"line_start":531,"line_end":531,"column_start":33,"column_end":53},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":8485},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":648986,"byte_end":648996,"line_start":535,"line_end":535,"column_start":40,"column_end":50},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":8537},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":649046,"byte_end":649056,"line_start":536,"line_end":536,"column_start":40,"column_end":50},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":8537},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":649107,"byte_end":649122,"line_start":538,"line_end":538,"column_start":40,"column_end":55},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":8502},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":649168,"byte_end":649183,"line_start":539,"line_end":539,"column_start":40,"column_end":55},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":8502},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":649248,"byte_end":649264,"line_start":541,"line_end":541,"column_start":58,"column_end":74},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":8560},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":649335,"byte_end":649351,"line_start":542,"line_end":542,"column_start":58,"column_end":74},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":8560},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":650193,"byte_end":650202,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":16124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":652486,"byte_end":652497,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":16171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":653313,"byte_end":653320,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":16182},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":653503,"byte_end":653510,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":16182},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":653523,"byte_end":653532,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":16124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":654521,"byte_end":654530,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":16124},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":654769,"byte_end":654778,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":16124},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":655037,"byte_end":655048,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":16171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":655720,"byte_end":655721,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":8695},"to":{"krate":0,"index":8690}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":655860,"byte_end":655867,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":8690},"to":{"krate":0,"index":8700}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":655956,"byte_end":655957,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":8704},"to":{"krate":0,"index":8700}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":656143,"byte_end":656149,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":8700},"to":{"krate":0,"index":8708}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":656227,"byte_end":656228,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":8712},"to":{"krate":0,"index":8708}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":657244,"byte_end":657248,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":8717},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":657342,"byte_end":657346,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":8717},"to":{"krate":0,"index":8690}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":657605,"byte_end":657612,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":16213},"to":{"krate":0,"index":8690}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":657835,"byte_end":657842,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":16213},"to":{"krate":0,"index":8700}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":658033,"byte_end":658040,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":16213},"to":{"krate":0,"index":8708}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":658345,"byte_end":658358,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":16234},"to":{"krate":0,"index":8690}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":658775,"byte_end":658784,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":16250},"to":{"krate":0,"index":8690}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":659068,"byte_end":659077,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":16250},"to":{"krate":0,"index":8700}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":659339,"byte_end":659348,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":16250},"to":{"krate":0,"index":8708}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":659670,"byte_end":659677,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":16265},"to":{"krate":0,"index":8690}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":659896,"byte_end":659903,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":16265},"to":{"krate":0,"index":8700}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":660081,"byte_end":660088,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":16265},"to":{"krate":0,"index":8708}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":660389,"byte_end":660397,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":16280},"to":{"krate":0,"index":8690}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":660620,"byte_end":660628,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":16280},"to":{"krate":0,"index":8700}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":660810,"byte_end":660818,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":16280},"to":{"krate":0,"index":8708}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":661128,"byte_end":661139,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":16295},"to":{"krate":0,"index":8690}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":661399,"byte_end":661410,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":16295},"to":{"krate":0,"index":8700}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":661647,"byte_end":661658,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":16295},"to":{"krate":0,"index":8708}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":662025,"byte_end":662037,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":16307},"to":{"krate":0,"index":8690}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":662298,"byte_end":662310,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":16307},"to":{"krate":0,"index":8700}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":662548,"byte_end":662560,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":16307},"to":{"krate":0,"index":8708}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":663179,"byte_end":663193,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":16319},"to":{"krate":0,"index":8690}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":663416,"byte_end":663430,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":16319},"to":{"krate":0,"index":8700}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":663631,"byte_end":663645,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":16319},"to":{"krate":0,"index":8708}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":663951,"byte_end":663957,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":8881},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":664050,"byte_end":664056,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":8881},"to":{"krate":0,"index":8690}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/unfold_state.rs","byte_start":664661,"byte_end":664672,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":16352},"to":{"krate":4294967295,"index":4294967295}}]}