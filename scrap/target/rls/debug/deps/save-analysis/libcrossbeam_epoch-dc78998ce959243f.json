{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13","program":"/Users/itayeshkar/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","crossbeam_epoch","--edition=2018","/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"std\"","-C","metadata=dc78998ce959243f","-C","extra-filename=-dc78998ce959243f","--out-dir","/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/deps","-L","dependency=/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/deps","--extern","cfg_if=/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/deps/libcfg_if-4ab8b19f6ac198be.rmeta","--extern","crossbeam_utils=/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/deps/libcrossbeam_utils-dac639b2891bda35.rmeta","--extern","memoffset=/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/deps/libmemoffset-4c60e142ac442a04.rmeta","--extern","scopeguard=/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/deps/libscopeguard-e5c40c6693aa5b8a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/itayeshkar/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/itayeshkar/Documents/GitHub/project/scrap/target/rls/debug/deps/libcrossbeam_epoch-dc78998ce959243f.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[15866789895907334456,0]},"crate_root":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src","external_crates":[{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16128539464339909492,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5119190964148522055,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10836880961308110442,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9122960886372739080,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16262469955255852816,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6458319553461162962,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12001007181761242293,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17631836945948346775,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[14397519445266417684,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8668729914222175237,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6081650140881955662,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5498968616666872476,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2537156866219993108,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[16178185567501436822,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[3784531562979233881,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[17755498883195052578,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11111166150786070161,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[518337477295170700,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[6962753159787162907,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":20,"id":{"name":"cfg_if","disambiguator":[8037730387315135600,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","num":21,"id":{"name":"crossbeam_utils","disambiguator":[5902994512127120970,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","num":22,"id":{"name":"scopeguard","disambiguator":[1531914224791952192,0]}},{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","num":23,"id":{"name":"memoffset","disambiguator":[4867609618617775903,0]}}],"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":0,"byte_end":6330,"line_start":1,"line_end":169,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":127},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":5879,"byte_end":5888,"line_start":153,"line_end":153,"column_start":13,"column_end":22},"alias_span":null,"name":"Pointable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":161},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":5890,"byte_end":5896,"line_start":153,"line_end":153,"column_start":24,"column_end":30},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":5898,"byte_end":5918,"line_start":153,"line_end":153,"column_start":32,"column_end":52},"alias_span":null,"name":"CompareExchangeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":247},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":5932,"byte_end":5937,"line_start":154,"line_end":154,"column_start":13,"column_end":18},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":243},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":5939,"byte_end":5946,"line_start":154,"line_end":154,"column_start":20,"column_end":27},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":301},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":5948,"byte_end":5954,"line_start":154,"line_end":154,"column_start":29,"column_end":35},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":373},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":6001,"byte_end":6010,"line_start":156,"line_end":156,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":389},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":6012,"byte_end":6023,"line_start":156,"line_end":156,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":503},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":6056,"byte_end":6067,"line_start":157,"line_end":157,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":479},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":6069,"byte_end":6074,"line_start":157,"line_end":157,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":96},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":6138,"byte_end":6156,"line_start":160,"line_end":160,"column_start":32,"column_end":50},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":110},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":6158,"byte_end":6179,"line_start":160,"line_end":160,"column_start":52,"column_end":73},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":937},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":6287,"byte_end":6304,"line_start":167,"line_end":167,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":935},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":6306,"byte_end":6315,"line_start":167,"line_end":167,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":933},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":6317,"byte_end":6320,"line_start":167,"line_end":167,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":0,"byte_end":6330,"line_start":1,"line_end":169,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":356},{"krate":0,"index":399},{"krate":0,"index":438},{"krate":0,"index":457},{"krate":0,"index":509},{"krate":0,"index":655},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":821},{"krate":0,"index":824},{"krate":0,"index":827},{"krate":0,"index":830},{"krate":0,"index":833},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":840},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":847},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":914},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":950}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`](Guard::defer) the execution of an","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":2244,"byte_end":2351,"line_start":42,"line_end":42,"column_start":1,"column_end":108}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":2352,"byte_end":2447,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":2448,"byte_end":2503,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":2504,"byte_end":2507,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":2508,"byte_end":2518,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":2519,"byte_end":2522,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":2523,"byte_end":2620,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":2621,"byte_end":2694,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":2855,"byte_end":2961,"line_start":58,"line_end":63,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":96},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11980855,"byte_end":11980873,"line_start":31,"line_end":31,"column_start":10,"column_end":28},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareExchangeError","parent":null,"children":[],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11980684,"byte_end":11980743,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"deprecated(note = \"Use `CompareExchangeError` instead\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11980787,"byte_end":11980845,"line_start":30,"line_end":30,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":100},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11980991,"byte_end":11981011,"line_start":34,"line_end":34,"column_start":12,"column_end":32},"name":"CompareExchangeError","qualname":"::atomic::CompareExchangeError","value":"CompareExchangeError { current, new }","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105}],"decl_id":null,"docs":" The error returned on failed compare-and-swap operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-swap operation.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11980919,"byte_end":11980979,"line_start":33,"line_end":33,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":104},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11981141,"byte_end":11981148,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareExchangeError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11981060,"byte_end":11981132,"line_start":35,"line_end":35,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":105},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11981234,"byte_end":11981237,"line_start":39,"line_end":39,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareExchangeError::new","value":"P","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11981170,"byte_end":11981225,"line_start":38,"line_end":38,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11981336,"byte_end":11981339,"line_start":43,"line_end":43,"column_start":8,"column_end":11},"name":"fmt","qualname":"<CompareExchangeError as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":110},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11982348,"byte_end":11982369,"line_start":67,"line_end":67,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11981552,"byte_end":11981604,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11981605,"byte_end":11981608,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11981609,"byte_end":11981700,"line_start":53,"line_end":53,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11981701,"byte_end":11981793,"line_start":54,"line_end":54,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11981794,"byte_end":11981797,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11981798,"byte_end":11981863,"line_start":56,"line_end":56,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11981864,"byte_end":11981867,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11981868,"byte_end":11981962,"line_start":58,"line_end":58,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11981963,"byte_end":11981989,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11981990,"byte_end":11982082,"line_start":60,"line_end":60,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11982083,"byte_end":11982111,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"deprecated(note =\n\"`compare_and_set` and `compare_and_set_weak` that use this trait are deprecated, \\\n            use `compare_exchange` or `compare_exchange_weak instead`\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11982155,"byte_end":11982337,"line_start":63,"line_end":66,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11982435,"byte_end":11982442,"line_start":69,"line_end":69,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"fn success<'_>(&'_ Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11982376,"byte_end":11982427,"line_start":68,"line_end":68,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11982660,"byte_end":11982667,"line_start":75,"line_end":75,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"fn failure<'_>(&'_ Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11982468,"byte_end":11982516,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11982521,"byte_end":11982524,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11982529,"byte_end":11982622,"line_start":73,"line_end":73,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11982627,"byte_end":11982652,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11982775,"byte_end":11982782,"line_start":81,"line_end":81,"column_start":8,"column_end":15},"name":"success","qualname":"<Ordering as atomic::CompareAndSetOrdering>::success","value":"fn success<'_>(&'_ Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":{"krate":0,"index":111},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11982758,"byte_end":11982767,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11982846,"byte_end":11982853,"line_start":86,"line_end":86,"column_start":8,"column_end":15},"name":"failure","qualname":"<Ordering as atomic::CompareAndSetOrdering>::failure","value":"fn failure<'_>(&'_ Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":{"krate":0,"index":112},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11982829,"byte_end":11982838,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11983022,"byte_end":11983029,"line_start":94,"line_end":94,"column_start":8,"column_end":15},"name":"success","qualname":"<(Ordering, Ordering) as atomic::CompareAndSetOrdering>::success","value":"fn success<'_>(&'_ Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":{"krate":0,"index":111},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11983005,"byte_end":11983014,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11983094,"byte_end":11983101,"line_start":99,"line_end":99,"column_start":8,"column_end":15},"name":"failure","qualname":"<(Ordering, Ordering) as atomic::CompareAndSetOrdering>::failure","value":"fn failure<'_>(&'_ Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":{"krate":0,"index":112},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11983077,"byte_end":11983086,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":127},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11985017,"byte_end":11985026,"line_start":150,"line_end":150,"column_start":11,"column_end":20},"name":"Pointable","qualname":"::atomic::Pointable","value":"Pointable","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":135}],"decl_id":null,"docs":" Types that are pointed to by a single word.","sig":null,"attributes":[{"value":"/ Types that are pointed to by a single word.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11984044,"byte_end":11984091,"line_start":130,"line_end":130,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11984092,"byte_end":11984095,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, it is necessary to represent an object within a word because atomic","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11984096,"byte_end":11984194,"line_start":132,"line_end":132,"column_start":1,"column_end":99}},{"value":"/ operations (e.g., reads, writes, read-modify-writes) support only single words.  This trait","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11984195,"byte_end":11984290,"line_start":133,"line_end":133,"column_start":1,"column_end":96}},{"value":"/ qualifies such types that are pointed to by a single word.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11984291,"byte_end":11984353,"line_start":134,"line_end":134,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11984354,"byte_end":11984357,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The trait generalizes `Box<T>` for a sized type `T`.  In a box, an object of type `T` is","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11984358,"byte_end":11984450,"line_start":136,"line_end":136,"column_start":1,"column_end":93}},{"value":"/ allocated in heap and it is owned by a single-word pointer.  This trait is also implemented for","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11984451,"byte_end":11984550,"line_start":137,"line_end":137,"column_start":1,"column_end":100}},{"value":"/ `[MaybeUninit<T>]` by storing its size along with its elements and pointing to the pair of array","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11984551,"byte_end":11984651,"line_start":138,"line_end":138,"column_start":1,"column_end":101}},{"value":"/ size and elements.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11984652,"byte_end":11984674,"line_start":139,"line_end":139,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11984675,"byte_end":11984678,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Pointers to `Pointable` types can be stored in [`Atomic`], [`Owned`], and [`Shared`].  In","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11984679,"byte_end":11984772,"line_start":141,"line_end":141,"column_start":1,"column_end":94}},{"value":"/ particular, Crossbeam supports dynamically sized slices as follows.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11984773,"byte_end":11984844,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11984845,"byte_end":11984848,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11984849,"byte_end":11984856,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11984857,"byte_end":11984887,"line_start":145,"line_end":145,"column_start":1,"column_end":31}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11984888,"byte_end":11984919,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11984920,"byte_end":11984923,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ let o = Owned::<[MaybeUninit<i32>]>::init(10); // allocating [i32; 10]","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11984924,"byte_end":11984998,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11984999,"byte_end":11985006,"line_start":149,"line_end":149,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":128},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11985073,"byte_end":11985078,"line_start":152,"line_end":152,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::atomic::Pointable::ALIGN","value":"usize","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The alignment of pointer.\n","sig":null,"attributes":[{"value":"/ The alignment of pointer.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11985033,"byte_end":11985062,"line_start":151,"line_end":151,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":129},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11985132,"byte_end":11985136,"line_start":155,"line_end":155,"column_start":10,"column_end":14},"name":"Init","qualname":"::atomic::Pointable::Init","value":"type Init;","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The type for initializers.\n","sig":null,"attributes":[{"value":"/ The type for initializers.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11985092,"byte_end":11985122,"line_start":154,"line_end":154,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11985288,"byte_end":11985292,"line_start":162,"line_end":162,"column_start":15,"column_end":19},"name":"init","qualname":"::atomic::Pointable::init","value":"unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Initializes a with the given initializer.","sig":null,"attributes":[{"value":"/ Initializes a with the given initializer.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11985143,"byte_end":11985188,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11985193,"byte_end":11985196,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11985201,"byte_end":11985213,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11985218,"byte_end":11985221,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The result should be a multiple of `ALIGN`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11985226,"byte_end":11985273,"line_start":161,"line_end":161,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11985656,"byte_end":11985661,"line_start":171,"line_end":171,"column_start":15,"column_end":20},"name":"deref","qualname":"::atomic::Pointable::deref","value":"unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Dereferences the given pointer.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11985326,"byte_end":11985361,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11985366,"byte_end":11985369,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11985374,"byte_end":11985386,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11985391,"byte_end":11985394,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11985399,"byte_end":11985475,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11985480,"byte_end":11985548,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be mutably dereferenced by [`Pointable::deref_mut`] concurrently.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11985553,"byte_end":11985641,"line_start":170,"line_end":170,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11986060,"byte_end":11986069,"line_start":181,"line_end":181,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"::atomic::Pointable::deref_mut","value":"unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Mutably dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Mutably dereferences the given pointer.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11985696,"byte_end":11985739,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11985744,"byte_end":11985747,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11985752,"byte_end":11985764,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11985769,"byte_end":11985772,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11985777,"byte_end":11985853,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11985858,"byte_end":11985926,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11985931,"byte_end":11986021,"line_start":179,"line_end":179,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11986026,"byte_end":11986045,"line_start":180,"line_end":180,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11986482,"byte_end":11986486,"line_start":191,"line_end":191,"column_start":15,"column_end":19},"name":"drop","qualname":"::atomic::Pointable::drop","value":"unsafe fn drop(usize)","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Drops the object pointed to by the given pointer.","sig":null,"attributes":[{"value":"/ Drops the object pointed to by the given pointer.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11986108,"byte_end":11986161,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11986166,"byte_end":11986169,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11986174,"byte_end":11986186,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11986191,"byte_end":11986194,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11986199,"byte_end":11986275,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11986280,"byte_end":11986348,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11986353,"byte_end":11986443,"line_start":189,"line_end":189,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11986448,"byte_end":11986467,"line_start":190,"line_end":190,"column_start":5,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":138},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11986539,"byte_end":11986544,"line_start":195,"line_end":195,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::<T as atomic::Pointable>::ALIGN","value":"usize","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11986611,"byte_end":11986615,"line_start":199,"line_end":199,"column_start":15,"column_end":19},"name":"init","qualname":"<T as atomic::Pointable>::init","value":"unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":130},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11986713,"byte_end":11986718,"line_start":203,"line_end":203,"column_start":15,"column_end":20},"name":"deref","qualname":"<T as atomic::Pointable>::deref","value":"unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":131},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11986798,"byte_end":11986807,"line_start":207,"line_end":207,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"<T as atomic::Pointable>::deref_mut","value":"unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":133},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11986893,"byte_end":11986897,"line_start":211,"line_end":211,"column_start":15,"column_end":19},"name":"drop","qualname":"<T as atomic::Pointable>::drop","value":"unsafe fn drop(usize)","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":135},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":153},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11987826,"byte_end":11987831,"line_start":247,"line_end":247,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::<[std::mem::MaybeUninit<T>] as atomic::Pointable>::ALIGN","value":"usize","parent":{"krate":0,"index":151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11987909,"byte_end":11987913,"line_start":251,"line_end":251,"column_start":15,"column_end":19},"name":"init","qualname":"<[MaybeUninit<T>] as atomic::Pointable>::init","value":"unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":130},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11988365,"byte_end":11988370,"line_start":263,"line_end":263,"column_start":15,"column_end":20},"name":"deref","qualname":"<[MaybeUninit<T>] as atomic::Pointable>::deref","value":"unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":131},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11988548,"byte_end":11988557,"line_start":268,"line_end":268,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"<[MaybeUninit<T>] as atomic::Pointable>::deref_mut","value":"unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":133},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11988739,"byte_end":11988743,"line_start":273,"line_end":273,"column_start":15,"column_end":19},"name":"drop","qualname":"<[MaybeUninit<T>] as atomic::Pointable>::drop","value":"unsafe fn drop(usize)","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":135},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":161},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11989597,"byte_end":11989603,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11989079,"byte_end":11989143,"line_start":282,"line_end":282,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11989144,"byte_end":11989147,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11989148,"byte_end":11989246,"line_start":284,"line_end":284,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address. For example, the tag for a pointer to a sized type `T`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11989247,"byte_end":11989344,"line_start":285,"line_end":285,"column_start":1,"column_end":98}},{"value":"/ should be less than `(1 << mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11989345,"byte_end":11989416,"line_start":286,"line_end":286,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11989417,"byte_end":11989420,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11989421,"byte_end":11989501,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11989502,"byte_end":11989505,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ Crossbeam supports dynamically sized types.  See [`Pointable`] for details.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11989506,"byte_end":11989585,"line_start":290,"line_end":290,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11990146,"byte_end":11990149,"line_start":310,"line_end":310,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11989856,"byte_end":11989938,"line_start":300,"line_end":300,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11989943,"byte_end":11989946,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11989951,"byte_end":11989965,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11989970,"byte_end":11989973,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11989978,"byte_end":11989985,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11989990,"byte_end":11990022,"line_start":305,"line_end":305,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11990027,"byte_end":11990030,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11990035,"byte_end":11990065,"line_start":307,"line_end":307,"column_start":5,"column_end":35}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11990070,"byte_end":11990122,"line_start":308,"line_end":308,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11990127,"byte_end":11990134,"line_start":309,"line_end":309,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11990550,"byte_end":11990554,"line_start":326,"line_end":326,"column_start":12,"column_end":16},"name":"init","qualname":"<Atomic<T>>::init","value":"fn init(T::Init) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11990252,"byte_end":11990334,"line_start":316,"line_end":316,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11990339,"byte_end":11990342,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11990347,"byte_end":11990361,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11990366,"byte_end":11990369,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11990374,"byte_end":11990381,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11990386,"byte_end":11990418,"line_start":321,"line_end":321,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11990423,"byte_end":11990426,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::init(1234);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11990431,"byte_end":11990469,"line_start":323,"line_end":323,"column_start":5,"column_end":43}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11990474,"byte_end":11990526,"line_start":324,"line_end":324,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11990531,"byte_end":11990538,"line_start":325,"line_end":325,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11991135,"byte_end":11991139,"line_start":348,"line_end":348,"column_start":18,"column_end":22},"name":"null","qualname":"<Atomic<T>>::null","value":"const fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"/ Returns a new null atomic pointer.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11990859,"byte_end":11990897,"line_start":338,"line_end":338,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11990902,"byte_end":11990905,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11990910,"byte_end":11990924,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11990929,"byte_end":11990932,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11990937,"byte_end":11990944,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11990949,"byte_end":11990981,"line_start":343,"line_end":343,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11990986,"byte_end":11990989,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::null();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11990994,"byte_end":11991028,"line_start":345,"line_end":345,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11991033,"byte_end":11991040,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"cfg(all(not(crossbeam_no_const_fn_trait_bound), not(crossbeam_loom)))","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11991045,"byte_end":11991117,"line_start":347,"line_end":347,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11992044,"byte_end":11992048,"line_start":380,"line_end":380,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"fn load<'g, '_>(&'_ Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11991529,"byte_end":11991574,"line_start":364,"line_end":364,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11991579,"byte_end":11991582,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11991587,"byte_end":11991677,"line_start":366,"line_end":366,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11991682,"byte_end":11991696,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11991701,"byte_end":11991704,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11991709,"byte_end":11991723,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11991728,"byte_end":11991731,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11991736,"byte_end":11991743,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11991748,"byte_end":11991797,"line_start":372,"line_end":372,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11991802,"byte_end":11991846,"line_start":373,"line_end":373,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11991851,"byte_end":11991854,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11991859,"byte_end":11991889,"line_start":375,"line_end":375,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11991894,"byte_end":11991924,"line_start":376,"line_end":376,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11991929,"byte_end":11991963,"line_start":377,"line_end":377,"column_start":5,"column_end":39}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11991968,"byte_end":11992020,"line_start":378,"line_end":378,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11992025,"byte_end":11992032,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11993112,"byte_end":11993124,"line_start":406,"line_end":406,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"fn load_consume<'g, '_>(&'_ Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11992178,"byte_end":11992257,"line_start":384,"line_end":384,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11992262,"byte_end":11992265,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11992270,"byte_end":11992343,"line_start":386,"line_end":386,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11992348,"byte_end":11992424,"line_start":387,"line_end":387,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11992429,"byte_end":11992500,"line_start":388,"line_end":388,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11992505,"byte_end":11992579,"line_start":389,"line_end":389,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11992584,"byte_end":11992607,"line_start":390,"line_end":390,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11992612,"byte_end":11992615,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11992620,"byte_end":11992695,"line_start":392,"line_end":392,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11992700,"byte_end":11992774,"line_start":393,"line_end":393,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11992779,"byte_end":11992813,"line_start":394,"line_end":394,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11992818,"byte_end":11992821,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11992826,"byte_end":11992840,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11992845,"byte_end":11992848,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11992853,"byte_end":11992860,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11992865,"byte_end":11992914,"line_start":399,"line_end":399,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11992919,"byte_end":11992922,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11992927,"byte_end":11992957,"line_start":401,"line_end":401,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11992962,"byte_end":11992992,"line_start":402,"line_end":402,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11992997,"byte_end":11993031,"line_start":403,"line_end":403,"column_start":5,"column_end":39}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11993036,"byte_end":11993088,"line_start":404,"line_end":404,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11993093,"byte_end":11993100,"line_start":405,"line_end":405,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11993884,"byte_end":11993889,"line_start":427,"line_end":427,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"fn store<P, '_>(&'_ Self, P, Ordering) where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11993244,"byte_end":11993309,"line_start":410,"line_end":410,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11993314,"byte_end":11993317,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11993322,"byte_end":11993412,"line_start":412,"line_end":412,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11993417,"byte_end":11993431,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11993436,"byte_end":11993439,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11993444,"byte_end":11993458,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11993463,"byte_end":11993466,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11993471,"byte_end":11993478,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned, Shared};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11993483,"byte_end":11993532,"line_start":418,"line_end":418,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11993537,"byte_end":11993581,"line_start":419,"line_end":419,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11993586,"byte_end":11993589,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11993594,"byte_end":11993624,"line_start":421,"line_end":421,"column_start":5,"column_end":35}},{"value":"/ # unsafe { drop(a.load(SeqCst, &crossbeam_epoch::pin()).into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11993629,"byte_end":11993719,"line_start":422,"line_end":422,"column_start":5,"column_end":95}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11993724,"byte_end":11993760,"line_start":423,"line_end":423,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11993765,"byte_end":11993803,"line_start":424,"line_end":424,"column_start":5,"column_end":43}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11993808,"byte_end":11993860,"line_start":425,"line_end":425,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11993865,"byte_end":11993872,"line_start":426,"line_end":426,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11994596,"byte_end":11994600,"line_start":448,"line_end":448,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"fn swap<'g, P, '_>(&'_ Self, P, Ordering, &'g Guard) -> Shared where\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11993996,"byte_end":11994084,"line_start":431,"line_end":431,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11994089,"byte_end":11994102,"line_start":432,"line_end":432,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11994107,"byte_end":11994110,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11994115,"byte_end":11994205,"line_start":434,"line_end":434,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11994210,"byte_end":11994224,"line_start":435,"line_end":435,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11994229,"byte_end":11994232,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11994237,"byte_end":11994251,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11994256,"byte_end":11994259,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11994264,"byte_end":11994271,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11994276,"byte_end":11994333,"line_start":440,"line_end":440,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11994338,"byte_end":11994382,"line_start":441,"line_end":441,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11994387,"byte_end":11994390,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11994395,"byte_end":11994425,"line_start":443,"line_end":443,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11994430,"byte_end":11994460,"line_start":444,"line_end":444,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11994465,"byte_end":11994515,"line_start":445,"line_end":445,"column_start":5,"column_end":55}},{"value":"/ # unsafe { drop(p.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11994520,"byte_end":11994572,"line_start":446,"line_end":446,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11994577,"byte_end":11994584,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11996496,"byte_end":11996512,"line_start":483,"line_end":483,"column_start":12,"column_end":28},"name":"compare_exchange","qualname":"<Atomic<T>>::compare_exchange","value":"fn compare_exchange<'g, P, '_,\n'_>(&'_ Self, Shared, P, Ordering, Ordering, &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11994771,"byte_end":11994867,"line_start":452,"line_end":452,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11994872,"byte_end":11994966,"line_start":453,"line_end":453,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11994971,"byte_end":11995042,"line_start":454,"line_end":454,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11995047,"byte_end":11995050,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11995055,"byte_end":11995150,"line_start":456,"line_end":456,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11995155,"byte_end":11995246,"line_start":457,"line_end":457,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11995251,"byte_end":11995264,"line_start":458,"line_end":458,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11995269,"byte_end":11995272,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11995277,"byte_end":11995346,"line_start":460,"line_end":460,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11995351,"byte_end":11995432,"line_start":461,"line_end":461,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11995437,"byte_end":11995528,"line_start":462,"line_end":462,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11995533,"byte_end":11995623,"line_start":463,"line_end":463,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11995628,"byte_end":11995710,"line_start":464,"line_end":464,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11995715,"byte_end":11995793,"line_start":465,"line_end":465,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11995798,"byte_end":11995878,"line_start":466,"line_end":466,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11995883,"byte_end":11995949,"line_start":467,"line_end":467,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11995954,"byte_end":11995957,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11995962,"byte_end":11995976,"line_start":469,"line_end":469,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11995981,"byte_end":11995984,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11995989,"byte_end":11995996,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11996001,"byte_end":11996065,"line_start":472,"line_end":472,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11996070,"byte_end":11996114,"line_start":473,"line_end":473,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11996119,"byte_end":11996122,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11996127,"byte_end":11996157,"line_start":475,"line_end":475,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11996162,"byte_end":11996165,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11996170,"byte_end":11996200,"line_start":477,"line_end":477,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11996205,"byte_end":11996242,"line_start":478,"line_end":478,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_exchange(curr, Shared::null(), SeqCst, SeqCst, guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11996247,"byte_end":11996326,"line_start":479,"line_end":479,"column_start":5,"column_end":84}},{"value":"/ let res2 = a.compare_exchange(curr, Owned::new(5678), SeqCst, SeqCst, guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11996331,"byte_end":11996412,"line_start":480,"line_end":480,"column_start":5,"column_end":86}},{"value":"/ # unsafe { drop(curr.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11996417,"byte_end":11996472,"line_start":481,"line_end":481,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11996477,"byte_end":11996484,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11999683,"byte_end":11999704,"line_start":560,"line_end":560,"column_start":12,"column_end":33},"name":"compare_exchange_weak","qualname":"<Atomic<T>>::compare_exchange_weak","value":"fn compare_exchange_weak<'g, P, '_,\n'_>(&'_ Self, Shared, P, Ordering, Ordering, &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11997174,"byte_end":11997270,"line_start":506,"line_end":506,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11997275,"byte_end":11997369,"line_start":507,"line_end":507,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11997374,"byte_end":11997445,"line_start":508,"line_end":508,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11997450,"byte_end":11997453,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_exchange`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11997458,"byte_end":11997553,"line_start":510,"line_end":510,"column_start":5,"column_end":100}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11997558,"byte_end":11997653,"line_start":511,"line_end":511,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11997658,"byte_end":11997748,"line_start":512,"line_end":512,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11997753,"byte_end":11997837,"line_start":513,"line_end":513,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11997842,"byte_end":11997845,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11997850,"byte_end":11997919,"line_start":515,"line_end":515,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11997924,"byte_end":11998005,"line_start":516,"line_end":516,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11998010,"byte_end":11998101,"line_start":517,"line_end":517,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11998106,"byte_end":11998196,"line_start":518,"line_end":518,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11998201,"byte_end":11998283,"line_start":519,"line_end":519,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11998288,"byte_end":11998366,"line_start":520,"line_end":520,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11998371,"byte_end":11998451,"line_start":521,"line_end":521,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11998456,"byte_end":11998522,"line_start":522,"line_end":522,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11998527,"byte_end":11998530,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ [`compare_exchange`]: Atomic::compare_exchange","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11998535,"byte_end":11998585,"line_start":524,"line_end":524,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11998590,"byte_end":11998593,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11998598,"byte_end":11998612,"line_start":526,"line_end":526,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11998617,"byte_end":11998620,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11998625,"byte_end":11998632,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11998637,"byte_end":11998701,"line_start":529,"line_end":529,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11998706,"byte_end":11998750,"line_start":530,"line_end":530,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11998755,"byte_end":11998758,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11998763,"byte_end":11998793,"line_start":532,"line_end":532,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11998798,"byte_end":11998828,"line_start":533,"line_end":533,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11998833,"byte_end":11998836,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11998841,"byte_end":11998876,"line_start":535,"line_end":535,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11998881,"byte_end":11998921,"line_start":536,"line_end":536,"column_start":5,"column_end":45}},{"value":"/ # unsafe { drop(a.load(SeqCst, guard).into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11998926,"byte_end":11998998,"line_start":537,"line_end":537,"column_start":5,"column_end":77}},{"value":"/ loop {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11999003,"byte_end":11999013,"line_start":538,"line_end":538,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(ptr, new, SeqCst, SeqCst, guard) {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11999018,"byte_end":11999090,"line_start":539,"line_end":539,"column_start":5,"column_end":77}},{"value":"/         Ok(p) => {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11999095,"byte_end":11999117,"line_start":540,"line_end":540,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11999122,"byte_end":11999146,"line_start":541,"line_end":541,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11999151,"byte_end":11999173,"line_start":542,"line_end":542,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11999178,"byte_end":11999191,"line_start":543,"line_end":543,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11999196,"byte_end":11999221,"line_start":544,"line_end":544,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11999226,"byte_end":11999260,"line_start":545,"line_end":545,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11999265,"byte_end":11999295,"line_start":546,"line_end":546,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11999300,"byte_end":11999313,"line_start":547,"line_end":547,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11999318,"byte_end":11999327,"line_start":548,"line_end":548,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11999332,"byte_end":11999337,"line_start":549,"line_end":549,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11999342,"byte_end":11999345,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11999350,"byte_end":11999391,"line_start":551,"line_end":551,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11999396,"byte_end":11999406,"line_start":552,"line_end":552,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(curr, Shared::null(), SeqCst, SeqCst, guard) {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11999411,"byte_end":11999495,"line_start":553,"line_end":553,"column_start":5,"column_end":89}},{"value":"/         Ok(_) => break,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11999500,"byte_end":11999527,"line_start":554,"line_end":554,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11999532,"byte_end":11999575,"line_start":555,"line_end":555,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11999580,"byte_end":11999589,"line_start":556,"line_end":556,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11999594,"byte_end":11999599,"line_start":557,"line_end":557,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(curr.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11999604,"byte_end":11999659,"line_start":558,"line_end":558,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11999664,"byte_end":11999671,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12002258,"byte_end":12002270,"line_start":623,"line_end":623,"column_start":12,"column_end":24},"name":"fetch_update","qualname":"<Atomic<T>>::fetch_update","value":"fn fetch_update<'g, F, '_>(&'_ Self, Ordering, Ordering, &'g Guard, F)\n-> Result<Shared, Shared> where F: FnMut(Shared) -> Option<Shared>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the pointer, and then applies a function to it that returns a new value.\n Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","sig":null,"attributes":[{"value":"/ Fetches the pointer, and then applies a function to it that returns a new value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12000371,"byte_end":12000455,"line_start":583,"line_end":583,"column_start":5,"column_end":89}},{"value":"/ Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12000460,"byte_end":12000554,"line_start":584,"line_end":584,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12000559,"byte_end":12000562,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ Note that the given function may be called multiple times if the value has been changed by","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12000567,"byte_end":12000661,"line_start":586,"line_end":586,"column_start":5,"column_end":99}},{"value":"/ other threads in the meantime, as long as the function returns `Some(_)`, but the function","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12000666,"byte_end":12000760,"line_start":587,"line_end":587,"column_start":5,"column_end":99}},{"value":"/ will have been applied only once to the stored value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12000765,"byte_end":12000822,"line_start":588,"line_end":588,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12000827,"byte_end":12000830,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ `fetch_update` takes two [`Ordering`] arguments to describe the memory","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12000835,"byte_end":12000909,"line_start":590,"line_end":590,"column_start":5,"column_end":79}},{"value":"/ ordering of this operation. The first describes the required ordering for","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12000914,"byte_end":12000991,"line_start":591,"line_end":591,"column_start":5,"column_end":82}},{"value":"/ when the operation finally succeeds while the second describes the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12000996,"byte_end":12001066,"line_start":592,"line_end":592,"column_start":5,"column_end":75}},{"value":"/ required ordering for loads. These correspond to the success and failure","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12001071,"byte_end":12001147,"line_start":593,"line_end":593,"column_start":5,"column_end":81}},{"value":"/ orderings of [`Atomic::compare_exchange`] respectively.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12001152,"byte_end":12001211,"line_start":594,"line_end":594,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12001216,"byte_end":12001219,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ Using [`Acquire`] as success ordering makes the store part of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12001224,"byte_end":12001294,"line_start":596,"line_end":596,"column_start":5,"column_end":75}},{"value":"/ operation [`Relaxed`], and using [`Release`] makes the final successful","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12001299,"byte_end":12001374,"line_start":597,"line_end":597,"column_start":5,"column_end":80}},{"value":"/ load [`Relaxed`]. The (failed) load ordering can only be [`SeqCst`],","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12001379,"byte_end":12001451,"line_start":598,"line_end":598,"column_start":5,"column_end":77}},{"value":"/ [`Acquire`] or [`Relaxed`] and must be equivalent to or weaker than the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12001456,"byte_end":12001531,"line_start":599,"line_end":599,"column_start":5,"column_end":80}},{"value":"/ success ordering.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12001536,"byte_end":12001557,"line_start":600,"line_end":600,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12001562,"byte_end":12001565,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ [`Relaxed`]: Ordering::Relaxed","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12001570,"byte_end":12001604,"line_start":602,"line_end":602,"column_start":5,"column_end":39}},{"value":"/ [`Acquire`]: Ordering::Acquire","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12001609,"byte_end":12001643,"line_start":603,"line_end":603,"column_start":5,"column_end":39}},{"value":"/ [`Release`]: Ordering::Release","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12001648,"byte_end":12001682,"line_start":604,"line_end":604,"column_start":5,"column_end":39}},{"value":"/ [`SeqCst`]: Ordering::SeqCst","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12001687,"byte_end":12001719,"line_start":605,"line_end":605,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12001724,"byte_end":12001727,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12001732,"byte_end":12001746,"line_start":607,"line_end":607,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12001751,"byte_end":12001754,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12001759,"byte_end":12001766,"line_start":609,"line_end":609,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12001771,"byte_end":12001820,"line_start":610,"line_end":610,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12001825,"byte_end":12001869,"line_start":611,"line_end":611,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12001874,"byte_end":12001877,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12001882,"byte_end":12001912,"line_start":613,"line_end":613,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12001917,"byte_end":12001947,"line_start":614,"line_end":614,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12001952,"byte_end":12001955,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ let res1 = a.fetch_update(SeqCst, SeqCst, guard, |x| Some(x.with_tag(1)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12001960,"byte_end":12002038,"line_start":616,"line_end":616,"column_start":5,"column_end":83}},{"value":"/ assert!(res1.is_ok());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12002043,"byte_end":12002069,"line_start":617,"line_end":617,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12002074,"byte_end":12002077,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ let res2 = a.fetch_update(SeqCst, SeqCst, guard, |x| None);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12002082,"byte_end":12002145,"line_start":619,"line_end":619,"column_start":5,"column_end":68}},{"value":"/ assert!(res2.is_err());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12002150,"byte_end":12002177,"line_start":620,"line_end":620,"column_start":5,"column_end":32}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12002182,"byte_end":12002234,"line_start":621,"line_end":621,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12002239,"byte_end":12002246,"line_start":622,"line_end":622,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12004630,"byte_end":12004645,"line_start":685,"line_end":685,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"fn compare_and_set<'g, O, P, '_, '_>(&'_ Self, Shared, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12002868,"byte_end":12002964,"line_start":643,"line_end":643,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12002969,"byte_end":12003063,"line_start":644,"line_end":644,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12003068,"byte_end":12003139,"line_start":645,"line_end":645,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12003144,"byte_end":12003147,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12003152,"byte_end":12003247,"line_start":647,"line_end":647,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12003252,"byte_end":12003343,"line_start":648,"line_end":648,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12003348,"byte_end":12003361,"line_start":649,"line_end":649,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12003366,"byte_end":12003369,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12003374,"byte_end":12003459,"line_start":651,"line_end":651,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12003464,"byte_end":12003495,"line_start":652,"line_end":652,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12003500,"byte_end":12003503,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12003508,"byte_end":12003545,"line_start":654,"line_end":654,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12003550,"byte_end":12003553,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set` is equivalent to `compare_exchange` with the following mapping for","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12003558,"byte_end":12003646,"line_start":656,"line_end":656,"column_start":5,"column_end":93}},{"value":"/ memory orderings:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12003651,"byte_end":12003672,"line_start":657,"line_end":657,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12003677,"byte_end":12003680,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12003685,"byte_end":12003717,"line_start":659,"line_end":659,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12003722,"byte_end":12003754,"line_start":660,"line_end":660,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12003759,"byte_end":12003791,"line_start":661,"line_end":661,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12003796,"byte_end":12003828,"line_start":662,"line_end":662,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12003833,"byte_end":12003865,"line_start":663,"line_end":663,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12003870,"byte_end":12003902,"line_start":664,"line_end":664,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12003907,"byte_end":12003938,"line_start":665,"line_end":665,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12003943,"byte_end":12003946,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12003951,"byte_end":12003965,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12003970,"byte_end":12003973,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12003978,"byte_end":12003985,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12003990,"byte_end":12004017,"line_start":670,"line_end":670,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12004022,"byte_end":12004086,"line_start":671,"line_end":671,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12004091,"byte_end":12004135,"line_start":672,"line_end":672,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12004140,"byte_end":12004143,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12004148,"byte_end":12004178,"line_start":674,"line_end":674,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12004183,"byte_end":12004186,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12004191,"byte_end":12004221,"line_start":676,"line_end":676,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12004226,"byte_end":12004263,"line_start":677,"line_end":677,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12004268,"byte_end":12004338,"line_start":678,"line_end":678,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12004343,"byte_end":12004415,"line_start":679,"line_end":679,"column_start":5,"column_end":77}},{"value":"/ # unsafe { drop(curr.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12004420,"byte_end":12004475,"line_start":680,"line_end":680,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12004480,"byte_end":12004487,"line_start":681,"line_end":681,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12004539,"byte_end":12004559,"line_start":683,"line_end":683,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange` instead\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12004564,"byte_end":12004618,"line_start":684,"line_end":684,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12007551,"byte_end":12007571,"line_start":764,"line_end":764,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"fn compare_and_set_weak<'g, O, P, '_, '_>(&'_ Self, Shared, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12004988,"byte_end":12005084,"line_start":699,"line_end":699,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12005089,"byte_end":12005183,"line_start":700,"line_end":700,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12005188,"byte_end":12005259,"line_start":701,"line_end":701,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12005264,"byte_end":12005267,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12005272,"byte_end":12005366,"line_start":703,"line_end":703,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12005371,"byte_end":12005466,"line_start":704,"line_end":704,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12005471,"byte_end":12005561,"line_start":705,"line_end":705,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12005566,"byte_end":12005650,"line_start":706,"line_end":706,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12005655,"byte_end":12005658,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12005663,"byte_end":12005748,"line_start":708,"line_end":708,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12005753,"byte_end":12005784,"line_start":709,"line_end":709,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12005789,"byte_end":12005792,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: Atomic::compare_and_set","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12005797,"byte_end":12005845,"line_start":711,"line_end":711,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12005850,"byte_end":12005853,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange_weak`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12005858,"byte_end":12005900,"line_start":713,"line_end":713,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12005905,"byte_end":12005908,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set_weak` is equivalent to `compare_exchange_weak` with the following mapping for","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12005913,"byte_end":12006011,"line_start":715,"line_end":715,"column_start":5,"column_end":103}},{"value":"/ memory orderings:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006016,"byte_end":12006037,"line_start":716,"line_end":716,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006042,"byte_end":12006045,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006050,"byte_end":12006082,"line_start":718,"line_end":718,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006087,"byte_end":12006119,"line_start":719,"line_end":719,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006124,"byte_end":12006156,"line_start":720,"line_end":720,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006161,"byte_end":12006193,"line_start":721,"line_end":721,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006198,"byte_end":12006230,"line_start":722,"line_end":722,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006235,"byte_end":12006267,"line_start":723,"line_end":723,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006272,"byte_end":12006303,"line_start":724,"line_end":724,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006308,"byte_end":12006311,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006316,"byte_end":12006330,"line_start":726,"line_end":726,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006335,"byte_end":12006338,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006343,"byte_end":12006350,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006355,"byte_end":12006382,"line_start":729,"line_end":729,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006387,"byte_end":12006451,"line_start":730,"line_end":730,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006456,"byte_end":12006500,"line_start":731,"line_end":731,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006505,"byte_end":12006508,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006513,"byte_end":12006543,"line_start":733,"line_end":733,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006548,"byte_end":12006578,"line_start":734,"line_end":734,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006583,"byte_end":12006586,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006591,"byte_end":12006626,"line_start":736,"line_end":736,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006631,"byte_end":12006671,"line_start":737,"line_end":737,"column_start":5,"column_end":45}},{"value":"/ # unsafe { drop(a.load(SeqCst, guard).into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006676,"byte_end":12006748,"line_start":738,"line_end":738,"column_start":5,"column_end":77}},{"value":"/ loop {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006753,"byte_end":12006763,"line_start":739,"line_end":739,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006768,"byte_end":12006831,"line_start":740,"line_end":740,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006836,"byte_end":12006858,"line_start":741,"line_end":741,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006863,"byte_end":12006887,"line_start":742,"line_end":742,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006892,"byte_end":12006914,"line_start":743,"line_end":743,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006919,"byte_end":12006932,"line_start":744,"line_end":744,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006937,"byte_end":12006962,"line_start":745,"line_end":745,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12006967,"byte_end":12007001,"line_start":746,"line_end":746,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12007006,"byte_end":12007036,"line_start":747,"line_end":747,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12007041,"byte_end":12007054,"line_start":748,"line_end":748,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12007059,"byte_end":12007068,"line_start":749,"line_end":749,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12007073,"byte_end":12007078,"line_start":750,"line_end":750,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12007083,"byte_end":12007086,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12007091,"byte_end":12007132,"line_start":752,"line_end":752,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12007137,"byte_end":12007147,"line_start":753,"line_end":753,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12007152,"byte_end":12007227,"line_start":754,"line_end":754,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12007232,"byte_end":12007259,"line_start":755,"line_end":755,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12007264,"byte_end":12007307,"line_start":756,"line_end":756,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12007312,"byte_end":12007321,"line_start":757,"line_end":757,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12007326,"byte_end":12007331,"line_start":758,"line_end":758,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(curr.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12007336,"byte_end":12007391,"line_start":759,"line_end":759,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12007396,"byte_end":12007403,"line_start":760,"line_end":760,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12007455,"byte_end":12007475,"line_start":762,"line_end":762,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange_weak` instead\")","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12007480,"byte_end":12007539,"line_start":763,"line_end":763,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12008650,"byte_end":12008659,"line_start":797,"line_end":797,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"fn fetch_and<'g, '_>(&'_ Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12007919,"byte_end":12007958,"line_start":778,"line_end":778,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12007963,"byte_end":12007966,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12007971,"byte_end":12008065,"line_start":780,"line_end":780,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12008070,"byte_end":12008126,"line_start":781,"line_end":781,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12008131,"byte_end":12008134,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12008139,"byte_end":12008229,"line_start":783,"line_end":783,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12008234,"byte_end":12008248,"line_start":784,"line_end":784,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12008253,"byte_end":12008256,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12008261,"byte_end":12008275,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12008280,"byte_end":12008283,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12008288,"byte_end":12008295,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12008300,"byte_end":12008357,"line_start":789,"line_end":789,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12008362,"byte_end":12008406,"line_start":790,"line_end":790,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12008411,"byte_end":12008414,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12008419,"byte_end":12008479,"line_start":792,"line_end":792,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12008484,"byte_end":12008514,"line_start":793,"line_end":793,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12008519,"byte_end":12008574,"line_start":794,"line_end":794,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12008579,"byte_end":12008626,"line_start":795,"line_end":795,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12008631,"byte_end":12008638,"line_start":796,"line_end":796,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12009558,"byte_end":12009566,"line_start":820,"line_end":820,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"fn fetch_or<'g, '_>(&'_ Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12008830,"byte_end":12008868,"line_start":801,"line_end":801,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12008873,"byte_end":12008876,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12008881,"byte_end":12008974,"line_start":803,"line_end":803,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12008979,"byte_end":12009035,"line_start":804,"line_end":804,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12009040,"byte_end":12009043,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12009048,"byte_end":12009138,"line_start":806,"line_end":806,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12009143,"byte_end":12009157,"line_start":807,"line_end":807,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12009162,"byte_end":12009165,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12009170,"byte_end":12009184,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12009189,"byte_end":12009192,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12009197,"byte_end":12009204,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12009209,"byte_end":12009266,"line_start":812,"line_end":812,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12009271,"byte_end":12009315,"line_start":813,"line_end":813,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12009320,"byte_end":12009323,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12009328,"byte_end":12009388,"line_start":815,"line_end":815,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12009393,"byte_end":12009423,"line_start":816,"line_end":816,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12009428,"byte_end":12009482,"line_start":817,"line_end":817,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12009487,"byte_end":12009534,"line_start":818,"line_end":818,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12009539,"byte_end":12009546,"line_start":819,"line_end":819,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12010466,"byte_end":12010475,"line_start":843,"line_end":843,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"fn fetch_xor<'g, '_>(&'_ Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12009735,"byte_end":12009774,"line_start":824,"line_end":824,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12009779,"byte_end":12009782,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12009787,"byte_end":12009881,"line_start":826,"line_end":826,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12009886,"byte_end":12009942,"line_start":827,"line_end":827,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12009947,"byte_end":12009950,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12009955,"byte_end":12010045,"line_start":829,"line_end":829,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12010050,"byte_end":12010064,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12010069,"byte_end":12010072,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12010077,"byte_end":12010091,"line_start":832,"line_end":832,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12010096,"byte_end":12010099,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12010104,"byte_end":12010111,"line_start":834,"line_end":834,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12010116,"byte_end":12010173,"line_start":835,"line_end":835,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12010178,"byte_end":12010222,"line_start":836,"line_end":836,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12010227,"byte_end":12010230,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12010235,"byte_end":12010295,"line_start":838,"line_end":838,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12010300,"byte_end":12010330,"line_start":839,"line_end":839,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12010335,"byte_end":12010390,"line_start":840,"line_end":840,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12010395,"byte_end":12010442,"line_start":841,"line_end":841,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12010447,"byte_end":12010454,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12011772,"byte_end":12011782,"line_start":881,"line_end":881,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12010645,"byte_end":12010680,"line_start":847,"line_end":847,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12010685,"byte_end":12010688,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12010693,"byte_end":12010782,"line_start":849,"line_end":849,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12010787,"byte_end":12010873,"line_start":850,"line_end":850,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12010878,"byte_end":12010913,"line_start":851,"line_end":851,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12010918,"byte_end":12010921,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12010926,"byte_end":12010938,"line_start":853,"line_end":853,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12010943,"byte_end":12010946,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12010951,"byte_end":12011010,"line_start":855,"line_end":855,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12011015,"byte_end":12011018,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12011023,"byte_end":12011035,"line_start":857,"line_end":857,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12011040,"byte_end":12011043,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12011048,"byte_end":12011135,"line_start":859,"line_end":859,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12011140,"byte_end":12011173,"line_start":860,"line_end":860,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12011178,"byte_end":12011181,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12011186,"byte_end":12011200,"line_start":862,"line_end":862,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12011205,"byte_end":12011208,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12011213,"byte_end":12011224,"line_start":864,"line_end":864,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12011229,"byte_end":12011248,"line_start":865,"line_end":865,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12011253,"byte_end":12011287,"line_start":866,"line_end":866,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12011292,"byte_end":12011318,"line_start":867,"line_end":867,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12011323,"byte_end":12011350,"line_start":868,"line_end":868,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12011355,"byte_end":12011360,"line_start":869,"line_end":869,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12011365,"byte_end":12011368,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12011373,"byte_end":12011406,"line_start":871,"line_end":871,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12011411,"byte_end":12011439,"line_start":872,"line_end":872,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12011444,"byte_end":12011538,"line_start":873,"line_end":873,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12011543,"byte_end":12011590,"line_start":874,"line_end":874,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12011595,"byte_end":12011615,"line_start":875,"line_end":875,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12011620,"byte_end":12011699,"line_start":876,"line_end":876,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12011704,"byte_end":12011717,"line_start":877,"line_end":877,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12011722,"byte_end":12011731,"line_start":878,"line_end":878,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12011736,"byte_end":12011741,"line_start":879,"line_end":879,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12011746,"byte_end":12011753,"line_start":880,"line_end":880,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12013469,"byte_end":12013483,"line_start":928,"line_end":928,"column_start":19,"column_end":33},"name":"try_into_owned","qualname":"<Atomic<T>>::try_into_owned","value":"unsafe fn try_into_owned(Self) -> Option<Owned<T>>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee if it is non-null.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee if it is non-null.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12012250,"byte_end":12012303,"line_start":895,"line_end":895,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12012308,"byte_end":12012311,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12012316,"byte_end":12012405,"line_start":897,"line_end":897,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12012410,"byte_end":12012496,"line_start":898,"line_end":898,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12012501,"byte_end":12012536,"line_start":899,"line_end":899,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12012541,"byte_end":12012544,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12012549,"byte_end":12012561,"line_start":901,"line_end":901,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12012566,"byte_end":12012569,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12012574,"byte_end":12012661,"line_start":903,"line_end":903,"column_start":5,"column_end":92}},{"value":"/ reference to the same object, or the pointer is null.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12012666,"byte_end":12012723,"line_start":904,"line_end":904,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12012728,"byte_end":12012731,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12012736,"byte_end":12012750,"line_start":906,"line_end":906,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12012755,"byte_end":12012758,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12012763,"byte_end":12012774,"line_start":908,"line_end":908,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12012779,"byte_end":12012798,"line_start":909,"line_end":909,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12012803,"byte_end":12012837,"line_start":910,"line_end":910,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12012842,"byte_end":12012868,"line_start":911,"line_end":911,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12012873,"byte_end":12012900,"line_start":912,"line_end":912,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12012905,"byte_end":12012910,"line_start":913,"line_end":913,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12012915,"byte_end":12012918,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12012923,"byte_end":12012956,"line_start":915,"line_end":915,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12012961,"byte_end":12012989,"line_start":916,"line_end":916,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12012994,"byte_end":12013088,"line_start":917,"line_end":917,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves, but it may be null, so we have to be careful.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12013093,"byte_end":12013186,"line_start":918,"line_end":918,"column_start":5,"column_end":98}},{"value":"/         let old = mem::replace(&mut self.ptr, Atomic::null());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12013191,"byte_end":12013257,"line_start":919,"line_end":919,"column_start":5,"column_end":71}},{"value":"/         unsafe {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12013262,"byte_end":12013282,"line_start":920,"line_end":920,"column_start":5,"column_end":25}},{"value":"/             if let Some(x) = old.try_into_owned() {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12013287,"byte_end":12013342,"line_start":921,"line_end":921,"column_start":5,"column_end":60}},{"value":"/                 drop(x)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12013347,"byte_end":12013374,"line_start":922,"line_end":922,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12013379,"byte_end":12013396,"line_start":923,"line_end":923,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12013401,"byte_end":12013414,"line_start":924,"line_end":924,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12013419,"byte_end":12013428,"line_start":925,"line_end":925,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12013433,"byte_end":12013438,"line_start":926,"line_end":926,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12013443,"byte_end":12013450,"line_start":927,"line_end":927,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12013908,"byte_end":12013911,"line_start":943,"line_end":943,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Atomic<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12014261,"byte_end":12014264,"line_start":955,"line_end":955,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Atomic<T> as std::fmt::Pointer>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10312},"children":[],"decl_id":{"krate":2,"index":10313},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12014730,"byte_end":12014735,"line_start":967,"line_end":967,"column_start":8,"column_end":13},"name":"clone","qualname":"<Atomic<T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":" Returns a copy of the atomic value.","sig":null,"attributes":[{"value":"/ Returns a copy of the atomic value.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12014552,"byte_end":12014591,"line_start":963,"line_end":963,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12014596,"byte_end":12014599,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ Note that a `Relaxed` load is used here. If you need synchronization, use it with other","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12014604,"byte_end":12014695,"line_start":965,"line_end":965,"column_start":5,"column_end":96}},{"value":"/ atomics or fences.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12014700,"byte_end":12014722,"line_start":966,"line_end":966,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12014908,"byte_end":12014915,"line_start":974,"line_end":974,"column_start":8,"column_end":15},"name":"default","qualname":"<Atomic<T> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015309,"byte_end":12015313,"line_start":990,"line_end":990,"column_start":8,"column_end":12},"name":"from","qualname":"<Atomic<T> as std::convert::From>::from","value":"fn from(Owned<T>) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":" Returns a new atomic pointer pointing to `owned`.","sig":null,"attributes":[{"value":"/ Returns a new atomic pointer pointing to `owned`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015023,"byte_end":12015076,"line_start":980,"line_end":980,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015081,"byte_end":12015084,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015089,"byte_end":12015103,"line_start":982,"line_end":982,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015108,"byte_end":12015111,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015116,"byte_end":12015123,"line_start":984,"line_end":984,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015128,"byte_end":12015169,"line_start":985,"line_end":985,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015174,"byte_end":12015177,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Owned::new(1234));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015182,"byte_end":12015232,"line_start":987,"line_end":987,"column_start":5,"column_end":55}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015237,"byte_end":12015289,"line_start":988,"line_end":988,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015294,"byte_end":12015301,"line_start":989,"line_end":989,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015484,"byte_end":12015488,"line_start":998,"line_end":998,"column_start":8,"column_end":12},"name":"from","qualname":"<Atomic<T> as std::convert::From>::from","value":"fn from(Box<T>) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015593,"byte_end":12015597,"line_start":1004,"line_end":1004,"column_start":8,"column_end":12},"name":"from","qualname":"<Atomic<T> as std::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015949,"byte_end":12015953,"line_start":1019,"line_end":1019,"column_start":8,"column_end":12},"name":"from","qualname":"<Atomic<T> as std::convert::From>::from","value":"fn from(Shared) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":" Returns a new atomic pointer pointing to `ptr`.","sig":null,"attributes":[{"value":"/ Returns a new atomic pointer pointing to `ptr`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015716,"byte_end":12015767,"line_start":1010,"line_end":1010,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015772,"byte_end":12015775,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015780,"byte_end":12015794,"line_start":1012,"line_end":1012,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015799,"byte_end":12015802,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015807,"byte_end":12015814,"line_start":1014,"line_end":1014,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Shared};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015819,"byte_end":12015861,"line_start":1015,"line_end":1015,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015866,"byte_end":12015869,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::<i32>::null());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015874,"byte_end":12015929,"line_start":1017,"line_end":1017,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015934,"byte_end":12015941,"line_start":1018,"line_end":1018,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016313,"byte_end":12016317,"line_start":1035,"line_end":1035,"column_start":8,"column_end":12},"name":"from","qualname":"<Atomic<T> as std::convert::From>::from","value":"fn from(*const T) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":" Returns a new atomic pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new atomic pointer pointing to `raw`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016071,"byte_end":12016122,"line_start":1025,"line_end":1025,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016127,"byte_end":12016130,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016135,"byte_end":12016149,"line_start":1027,"line_end":1027,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016154,"byte_end":12016157,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016162,"byte_end":12016169,"line_start":1029,"line_end":1029,"column_start":5,"column_end":12}},{"value":"/ use std::ptr;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016174,"byte_end":12016191,"line_start":1030,"line_end":1030,"column_start":5,"column_end":22}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016196,"byte_end":12016228,"line_start":1031,"line_end":1031,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016233,"byte_end":12016236,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(ptr::null::<i32>());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016241,"byte_end":12016293,"line_start":1033,"line_end":1033,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016298,"byte_end":12016305,"line_start":1034,"line_end":1034,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":243},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016454,"byte_end":12016461,"line_start":1041,"line_end":1041,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T>","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016391,"byte_end":12016443,"line_start":1040,"line_end":1040,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016553,"byte_end":12016563,"line_start":1043,"line_end":1043,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"fn into_usize(Self) -> usize","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016491,"byte_end":12016545,"line_start":1042,"line_end":1042,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016870,"byte_end":12016880,"line_start":1051,"line_end":1051,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016585,"byte_end":12016649,"line_start":1045,"line_end":1045,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016654,"byte_end":12016657,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016662,"byte_end":12016674,"line_start":1047,"line_end":1047,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016679,"byte_end":12016682,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ The given `data` should have been created by `Pointer::into_usize()`, and one `data` should","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016687,"byte_end":12016782,"line_start":1049,"line_end":1049,"column_start":5,"column_end":100}},{"value":"/ not be converted back by `Pointer::from_usize()` multiple times.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016787,"byte_end":12016855,"line_start":1050,"line_end":1050,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":247},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12017146,"byte_end":12017151,"line_start":1060,"line_end":1060,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016906,"byte_end":12016941,"line_start":1054,"line_end":1054,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016942,"byte_end":12016945,"line_start":1055,"line_end":1055,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016946,"byte_end":12016988,"line_start":1056,"line_end":1056,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016989,"byte_end":12016992,"line_start":1057,"line_end":1057,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016993,"byte_end":12017091,"line_start":1058,"line_end":1058,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12017092,"byte_end":12017134,"line_start":1059,"line_end":1059,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12017306,"byte_end":12017316,"line_start":1067,"line_end":1067,"column_start":8,"column_end":18},"name":"into_usize","qualname":"<Owned<T> as atomic::Pointer>::into_usize","value":"fn into_usize(Self) -> usize","parent":{"krate":0,"index":243},"children":[],"decl_id":{"krate":0,"index":245},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12017289,"byte_end":12017298,"line_start":1066,"line_end":1066,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12017591,"byte_end":12017601,"line_start":1079,"line_end":1079,"column_start":15,"column_end":25},"name":"from_usize","qualname":"<Owned<T> as atomic::Pointer>::from_usize","value":"unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":243},"children":[],"decl_id":{"krate":0,"index":246},"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12017415,"byte_end":12017479,"line_start":1073,"line_end":1073,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12017484,"byte_end":12017487,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12017492,"byte_end":12017504,"line_start":1075,"line_end":1075,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12017509,"byte_end":12017512,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ Panics if the data is zero in debug mode.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12017517,"byte_end":12017562,"line_start":1077,"line_end":1077,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12017567,"byte_end":12017576,"line_start":1078,"line_end":1078,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018549,"byte_end":12018557,"line_start":1111,"line_end":1111,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12017801,"byte_end":12017851,"line_start":1089,"line_end":1089,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12017856,"byte_end":12017859,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12017864,"byte_end":12017956,"line_start":1091,"line_end":1091,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12017961,"byte_end":12018054,"line_start":1092,"line_end":1092,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018059,"byte_end":12018084,"line_start":1093,"line_end":1093,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018089,"byte_end":12018092,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018097,"byte_end":12018109,"line_start":1095,"line_end":1095,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018114,"byte_end":12018117,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018122,"byte_end":12018166,"line_start":1097,"line_end":1097,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018171,"byte_end":12018174,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018179,"byte_end":12018191,"line_start":1099,"line_end":1099,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018196,"byte_end":12018199,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ The given `raw` should have been derived from `Owned`, and one `raw` should not be converted","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018204,"byte_end":12018300,"line_start":1101,"line_end":1101,"column_start":5,"column_end":101}},{"value":"/ back by `Owned::from_raw()` multiple times.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018305,"byte_end":12018352,"line_start":1102,"line_end":1102,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018357,"byte_end":12018360,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018365,"byte_end":12018379,"line_start":1104,"line_end":1104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018384,"byte_end":12018387,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018392,"byte_end":12018399,"line_start":1106,"line_end":1106,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018404,"byte_end":12018435,"line_start":1107,"line_end":1107,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018440,"byte_end":12018443,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018448,"byte_end":12018518,"line_start":1109,"line_end":1109,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018523,"byte_end":12018530,"line_start":1110,"line_end":1110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018955,"byte_end":12018963,"line_start":1128,"line_end":1128,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018692,"byte_end":12018736,"line_start":1117,"line_end":1117,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018741,"byte_end":12018744,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018749,"byte_end":12018763,"line_start":1119,"line_end":1119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018768,"byte_end":12018771,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018776,"byte_end":12018783,"line_start":1121,"line_end":1121,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018788,"byte_end":12018819,"line_start":1122,"line_end":1122,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018824,"byte_end":12018827,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018832,"byte_end":12018861,"line_start":1124,"line_end":1124,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018866,"byte_end":12018901,"line_start":1125,"line_end":1125,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018906,"byte_end":12018931,"line_start":1126,"line_end":1126,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12018936,"byte_end":12018943,"line_start":1127,"line_end":1127,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019352,"byte_end":12019355,"line_start":1143,"line_end":1143,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019122,"byte_end":12019203,"line_start":1134,"line_end":1134,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019208,"byte_end":12019211,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019216,"byte_end":12019230,"line_start":1136,"line_end":1136,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019235,"byte_end":12019238,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019243,"byte_end":12019250,"line_start":1138,"line_end":1138,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019255,"byte_end":12019286,"line_start":1139,"line_end":1139,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019291,"byte_end":12019294,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019299,"byte_end":12019328,"line_start":1141,"line_end":1141,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019333,"byte_end":12019340,"line_start":1142,"line_end":1142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019694,"byte_end":12019698,"line_start":1158,"line_end":1158,"column_start":12,"column_end":16},"name":"init","qualname":"<Owned<T>>::init","value":"fn init(T::Init) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019456,"byte_end":12019537,"line_start":1149,"line_end":1149,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019542,"byte_end":12019545,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019550,"byte_end":12019564,"line_start":1151,"line_end":1151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019569,"byte_end":12019572,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019577,"byte_end":12019584,"line_start":1153,"line_end":1153,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019589,"byte_end":12019620,"line_start":1154,"line_end":1154,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019625,"byte_end":12019628,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::<i32>::init(1234);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019633,"byte_end":12019670,"line_start":1156,"line_end":1156,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019675,"byte_end":12019682,"line_start":1157,"line_end":1157,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020176,"byte_end":12020187,"line_start":1175,"line_end":1175,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019790,"byte_end":12019839,"line_start":1162,"line_end":1162,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019844,"byte_end":12019847,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019852,"byte_end":12019866,"line_start":1164,"line_end":1164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019871,"byte_end":12019874,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019879,"byte_end":12019886,"line_start":1166,"line_end":1166,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019891,"byte_end":12019939,"line_start":1167,"line_end":1167,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019944,"byte_end":12019947,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019952,"byte_end":12019981,"line_start":1169,"line_end":1169,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019986,"byte_end":12020016,"line_start":1170,"line_end":1170,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020021,"byte_end":12020054,"line_start":1171,"line_end":1171,"column_start":5,"column_end":38}},{"value":"/ # unsafe { drop(p.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020059,"byte_end":12020111,"line_start":1172,"line_end":1172,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020116,"byte_end":12020123,"line_start":1173,"line_end":1173,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020128,"byte_end":12020164,"line_start":1174,"line_end":1174,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020507,"byte_end":12020510,"line_start":1188,"line_end":1188,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"fn tag<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020299,"byte_end":12020345,"line_start":1179,"line_end":1179,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020350,"byte_end":12020353,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020358,"byte_end":12020372,"line_start":1181,"line_end":1181,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020377,"byte_end":12020380,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020385,"byte_end":12020392,"line_start":1183,"line_end":1183,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020397,"byte_end":12020428,"line_start":1184,"line_end":1184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020433,"byte_end":12020436,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020441,"byte_end":12020483,"line_start":1186,"line_end":1186,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020488,"byte_end":12020495,"line_start":1187,"line_end":1187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020983,"byte_end":12020991,"line_start":1206,"line_end":1206,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020606,"byte_end":12020696,"line_start":1193,"line_end":1193,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020701,"byte_end":12020739,"line_start":1194,"line_end":1194,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020744,"byte_end":12020747,"line_start":1195,"line_end":1195,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020752,"byte_end":12020766,"line_start":1196,"line_end":1196,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020771,"byte_end":12020774,"line_start":1197,"line_end":1197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020779,"byte_end":12020786,"line_start":1198,"line_end":1198,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020791,"byte_end":12020822,"line_start":1199,"line_end":1199,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020827,"byte_end":12020830,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020835,"byte_end":12020864,"line_start":1201,"line_end":1201,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020869,"byte_end":12020896,"line_start":1202,"line_end":1202,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020901,"byte_end":12020927,"line_start":1203,"line_end":1203,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020932,"byte_end":12020959,"line_start":1204,"line_end":1204,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12020964,"byte_end":12020971,"line_start":1205,"line_end":1205,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12021191,"byte_end":12021195,"line_start":1213,"line_end":1213,"column_start":8,"column_end":12},"name":"drop","qualname":"<Owned<T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12021386,"byte_end":12021389,"line_start":1222,"line_end":1222,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Owned<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12021669,"byte_end":12021674,"line_start":1233,"line_end":1233,"column_start":8,"column_end":13},"name":"clone","qualname":"<Owned<T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12021837,"byte_end":12021842,"line_start":1241,"line_end":1241,"column_start":8,"column_end":13},"name":"deref","qualname":"<Owned<T> as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ T","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022013,"byte_end":12022022,"line_start":1248,"line_end":1248,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<Owned<T> as std::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":{"krate":2,"index":3499},"children":[],"decl_id":{"krate":2,"index":3500},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022184,"byte_end":12022188,"line_start":1255,"line_end":1255,"column_start":8,"column_end":12},"name":"from","qualname":"<Owned<T> as std::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022610,"byte_end":12022614,"line_start":1274,"line_end":1274,"column_start":8,"column_end":12},"name":"from","qualname":"<Owned<T> as std::convert::From>::from","value":"fn from(Box<T>) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":" Returns a new owned pointer pointing to `b`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `b`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022276,"byte_end":12022324,"line_start":1261,"line_end":1261,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022329,"byte_end":12022332,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022337,"byte_end":12022349,"line_start":1263,"line_end":1263,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022354,"byte_end":12022357,"line_start":1264,"line_end":1264,"column_start":5,"column_end":8}},{"value":"/ Panics if the pointer (the `Box`) is not properly aligned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022362,"byte_end":12022424,"line_start":1265,"line_end":1265,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022429,"byte_end":12022432,"line_start":1266,"line_end":1266,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022437,"byte_end":12022451,"line_start":1267,"line_end":1267,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022456,"byte_end":12022459,"line_start":1268,"line_end":1268,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022464,"byte_end":12022471,"line_start":1269,"line_end":1269,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022476,"byte_end":12022507,"line_start":1270,"line_end":1270,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022512,"byte_end":12022515,"line_start":1271,"line_end":1271,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022520,"byte_end":12022590,"line_start":1272,"line_end":1272,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022595,"byte_end":12022602,"line_start":1273,"line_end":1273,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022757,"byte_end":12022763,"line_start":1280,"line_end":1280,"column_start":8,"column_end":14},"name":"borrow","qualname":"<Owned<T> as std::borrow::Borrow>::borrow","value":"fn borrow<'_>(&'_ Self) -> &'_ T","parent":{"krate":2,"index":2857},"children":[],"decl_id":{"krate":2,"index":2859},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022872,"byte_end":12022882,"line_start":1286,"line_end":1286,"column_start":8,"column_end":18},"name":"borrow_mut","qualname":"<Owned<T> as std::borrow::BorrowMut>::borrow_mut","value":"fn borrow_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":{"krate":2,"index":2860},"children":[],"decl_id":{"krate":2,"index":2862},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022999,"byte_end":12023005,"line_start":1292,"line_end":1292,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Owned<T> as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ T","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12023110,"byte_end":12023116,"line_start":1298,"line_end":1298,"column_start":8,"column_end":14},"name":"as_mut","qualname":"<Owned<T> as std::convert::AsMut>::as_mut","value":"fn as_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":{"krate":2,"index":3163},"children":[],"decl_id":{"krate":2,"index":3165},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":301},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12023453,"byte_end":12023459,"line_start":1309,"line_end":1309,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12023174,"byte_end":12023227,"line_start":1303,"line_end":1303,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12023228,"byte_end":12023231,"line_start":1304,"line_end":1304,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12023232,"byte_end":12023295,"line_start":1305,"line_end":1305,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12023296,"byte_end":12023299,"line_start":1306,"line_end":1306,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12023300,"byte_end":12023398,"line_start":1307,"line_end":1307,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12023399,"byte_end":12023441,"line_start":1308,"line_end":1308,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12023621,"byte_end":12023626,"line_start":1315,"line_end":1315,"column_start":8,"column_end":13},"name":"clone","qualname":"<Shared as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12023876,"byte_end":12023886,"line_start":1327,"line_end":1327,"column_start":8,"column_end":18},"name":"into_usize","qualname":"<Shared as atomic::Pointer>::into_usize","value":"fn into_usize(Self) -> usize","parent":{"krate":0,"index":243},"children":[],"decl_id":{"krate":0,"index":245},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12023859,"byte_end":12023868,"line_start":1326,"line_end":1326,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12023957,"byte_end":12023967,"line_start":1332,"line_end":1332,"column_start":15,"column_end":25},"name":"from_usize","qualname":"<Shared as atomic::Pointer>::from_usize","value":"unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":243},"children":[],"decl_id":{"krate":0,"index":246},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12023933,"byte_end":12023942,"line_start":1331,"line_end":1331,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024638,"byte_end":12024644,"line_start":1358,"line_end":1358,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"fn as_raw<'_>(&'_ Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024111,"byte_end":12024171,"line_start":1341,"line_end":1341,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024176,"byte_end":12024179,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024184,"byte_end":12024198,"line_start":1343,"line_end":1343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024203,"byte_end":12024206,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024211,"byte_end":12024218,"line_start":1345,"line_end":1345,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024223,"byte_end":12024279,"line_start":1346,"line_end":1346,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024284,"byte_end":12024328,"line_start":1347,"line_end":1347,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024333,"byte_end":12024336,"line_start":1348,"line_end":1348,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024341,"byte_end":12024370,"line_start":1349,"line_end":1349,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024375,"byte_end":12024405,"line_start":1350,"line_end":1350,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024410,"byte_end":12024438,"line_start":1351,"line_end":1351,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024443,"byte_end":12024446,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024451,"byte_end":12024481,"line_start":1353,"line_end":1353,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024486,"byte_end":12024520,"line_start":1354,"line_end":1354,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024525,"byte_end":12024557,"line_start":1355,"line_end":1355,"column_start":5,"column_end":37}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024562,"byte_end":12024614,"line_start":1356,"line_end":1356,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024619,"byte_end":12024626,"line_start":1357,"line_end":1357,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12025021,"byte_end":12025025,"line_start":1375,"line_end":1375,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024805,"byte_end":12024836,"line_start":1365,"line_end":1365,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024841,"byte_end":12024844,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024849,"byte_end":12024863,"line_start":1367,"line_end":1367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024868,"byte_end":12024871,"line_start":1368,"line_end":1368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024876,"byte_end":12024883,"line_start":1369,"line_end":1369,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024888,"byte_end":12024920,"line_start":1370,"line_end":1370,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024925,"byte_end":12024928,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024933,"byte_end":12024967,"line_start":1372,"line_end":1372,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024972,"byte_end":12024997,"line_start":1373,"line_end":1373,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12025002,"byte_end":12025009,"line_start":1374,"line_end":1374,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12025639,"byte_end":12025646,"line_start":1397,"line_end":1397,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"fn is_null<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12025140,"byte_end":12025182,"line_start":1382,"line_end":1382,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12025187,"byte_end":12025190,"line_start":1383,"line_end":1383,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12025195,"byte_end":12025209,"line_start":1384,"line_end":1384,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12025214,"byte_end":12025217,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12025222,"byte_end":12025229,"line_start":1386,"line_end":1386,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12025234,"byte_end":12025290,"line_start":1387,"line_end":1387,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12025295,"byte_end":12025339,"line_start":1388,"line_end":1388,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12025344,"byte_end":12025347,"line_start":1389,"line_end":1389,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12025352,"byte_end":12025379,"line_start":1390,"line_end":1390,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12025384,"byte_end":12025414,"line_start":1391,"line_end":1391,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12025419,"byte_end":12025464,"line_start":1392,"line_end":1392,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12025469,"byte_end":12025507,"line_start":1393,"line_end":1393,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12025512,"byte_end":12025558,"line_start":1394,"line_end":1394,"column_start":5,"column_end":51}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12025563,"byte_end":12025615,"line_start":1395,"line_end":1395,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12025620,"byte_end":12025627,"line_start":1396,"line_end":1396,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12026983,"byte_end":12026988,"line_start":1434,"line_end":1434,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"unsafe fn deref<'_>(&'_ Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12025746,"byte_end":12025775,"line_start":1402,"line_end":1402,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12025780,"byte_end":12025783,"line_start":1403,"line_end":1403,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12025788,"byte_end":12025866,"line_start":1404,"line_end":1404,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12025871,"byte_end":12025874,"line_start":1405,"line_end":1405,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12025879,"byte_end":12025891,"line_start":1406,"line_end":1406,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12025896,"byte_end":12025899,"line_start":1407,"line_end":1407,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12025904,"byte_end":12025989,"line_start":1408,"line_end":1408,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12025994,"byte_end":12025997,"line_start":1409,"line_end":1409,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12026002,"byte_end":12026093,"line_start":1410,"line_end":1410,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12026098,"byte_end":12026147,"line_start":1411,"line_end":1411,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12026152,"byte_end":12026155,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12026160,"byte_end":12026232,"line_start":1413,"line_end":1413,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12026237,"byte_end":12026312,"line_start":1414,"line_end":1414,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12026317,"byte_end":12026320,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12026325,"byte_end":12026418,"line_start":1416,"line_end":1416,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12026423,"byte_end":12026516,"line_start":1417,"line_end":1417,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12026521,"byte_end":12026559,"line_start":1418,"line_end":1418,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12026564,"byte_end":12026567,"line_start":1419,"line_end":1419,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12026572,"byte_end":12026586,"line_start":1420,"line_end":1420,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12026591,"byte_end":12026594,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12026599,"byte_end":12026606,"line_start":1422,"line_end":1422,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12026611,"byte_end":12026660,"line_start":1423,"line_end":1423,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12026665,"byte_end":12026709,"line_start":1424,"line_end":1424,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12026714,"byte_end":12026717,"line_start":1425,"line_end":1425,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12026722,"byte_end":12026752,"line_start":1426,"line_end":1426,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12026757,"byte_end":12026787,"line_start":1427,"line_end":1427,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12026792,"byte_end":12026826,"line_start":1428,"line_end":1428,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12026831,"byte_end":12026843,"line_start":1429,"line_end":1429,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12026848,"byte_end":12026885,"line_start":1430,"line_end":1430,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12026890,"byte_end":12026895,"line_start":1431,"line_end":1431,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12026900,"byte_end":12026952,"line_start":1432,"line_end":1432,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12026957,"byte_end":12026964,"line_start":1433,"line_end":1433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12028311,"byte_end":12028320,"line_start":1476,"line_end":1476,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"unsafe fn deref_mut<'_>(&'_ mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027094,"byte_end":12027123,"line_start":1439,"line_end":1439,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027128,"byte_end":12027131,"line_start":1440,"line_end":1440,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027136,"byte_end":12027222,"line_start":1441,"line_end":1441,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027227,"byte_end":12027230,"line_start":1442,"line_end":1442,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027235,"byte_end":12027247,"line_start":1443,"line_end":1443,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027252,"byte_end":12027255,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027260,"byte_end":12027355,"line_start":1445,"line_end":1445,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027360,"byte_end":12027397,"line_start":1446,"line_end":1446,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027402,"byte_end":12027405,"line_start":1447,"line_end":1447,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027410,"byte_end":12027499,"line_start":1448,"line_end":1448,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027504,"byte_end":12027507,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027512,"byte_end":12027586,"line_start":1450,"line_end":1450,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027591,"byte_end":12027594,"line_start":1451,"line_end":1451,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027599,"byte_end":12027613,"line_start":1452,"line_end":1452,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027618,"byte_end":12027621,"line_start":1453,"line_end":1453,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027626,"byte_end":12027633,"line_start":1454,"line_end":1454,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027638,"byte_end":12027687,"line_start":1455,"line_end":1455,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027692,"byte_end":12027736,"line_start":1456,"line_end":1456,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027741,"byte_end":12027744,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027749,"byte_end":12027791,"line_start":1458,"line_end":1458,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027796,"byte_end":12027826,"line_start":1459,"line_end":1459,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027831,"byte_end":12027834,"line_start":1460,"line_end":1460,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027839,"byte_end":12027877,"line_start":1461,"line_end":1461,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027882,"byte_end":12027894,"line_start":1462,"line_end":1462,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027899,"byte_end":12027929,"line_start":1463,"line_end":1463,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027934,"byte_end":12027964,"line_start":1464,"line_end":1464,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12027969,"byte_end":12028010,"line_start":1465,"line_end":1465,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12028015,"byte_end":12028033,"line_start":1466,"line_end":1466,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12028038,"byte_end":12028082,"line_start":1467,"line_end":1467,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12028087,"byte_end":12028092,"line_start":1468,"line_end":1468,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12028097,"byte_end":12028100,"line_start":1469,"line_end":1469,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12028105,"byte_end":12028139,"line_start":1470,"line_end":1470,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12028144,"byte_end":12028156,"line_start":1471,"line_end":1471,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12028161,"byte_end":12028213,"line_start":1472,"line_end":1472,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12028218,"byte_end":12028223,"line_start":1473,"line_end":1473,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12028228,"byte_end":12028280,"line_start":1474,"line_end":1474,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12028285,"byte_end":12028292,"line_start":1475,"line_end":1475,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12029710,"byte_end":12029716,"line_start":1513,"line_end":1513,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"unsafe fn as_ref<'_>(&'_ Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12028438,"byte_end":12028478,"line_start":1481,"line_end":1481,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12028483,"byte_end":12028486,"line_start":1482,"line_end":1482,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12028491,"byte_end":12028586,"line_start":1483,"line_end":1483,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12028591,"byte_end":12028594,"line_start":1484,"line_end":1484,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12028599,"byte_end":12028611,"line_start":1485,"line_end":1485,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12028616,"byte_end":12028619,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12028624,"byte_end":12028709,"line_start":1487,"line_end":1487,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12028714,"byte_end":12028717,"line_start":1488,"line_end":1488,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12028722,"byte_end":12028813,"line_start":1489,"line_end":1489,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12028818,"byte_end":12028867,"line_start":1490,"line_end":1490,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12028872,"byte_end":12028875,"line_start":1491,"line_end":1491,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12028880,"byte_end":12028952,"line_start":1492,"line_end":1492,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12028957,"byte_end":12029032,"line_start":1493,"line_end":1493,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12029037,"byte_end":12029040,"line_start":1494,"line_end":1494,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12029045,"byte_end":12029138,"line_start":1495,"line_end":1495,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12029143,"byte_end":12029236,"line_start":1496,"line_end":1496,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12029241,"byte_end":12029279,"line_start":1497,"line_end":1497,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12029284,"byte_end":12029287,"line_start":1498,"line_end":1498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12029292,"byte_end":12029306,"line_start":1499,"line_end":1499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12029311,"byte_end":12029314,"line_start":1500,"line_end":1500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12029319,"byte_end":12029326,"line_start":1501,"line_end":1501,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12029331,"byte_end":12029380,"line_start":1502,"line_end":1502,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12029385,"byte_end":12029429,"line_start":1503,"line_end":1503,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12029434,"byte_end":12029437,"line_start":1504,"line_end":1504,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12029442,"byte_end":12029472,"line_start":1505,"line_end":1505,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12029477,"byte_end":12029507,"line_start":1506,"line_end":1506,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12029512,"byte_end":12029546,"line_start":1507,"line_end":1507,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12029551,"byte_end":12029563,"line_start":1508,"line_end":1508,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12029568,"byte_end":12029612,"line_start":1509,"line_end":1509,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12029617,"byte_end":12029622,"line_start":1510,"line_end":1510,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12029627,"byte_end":12029679,"line_start":1511,"line_end":1511,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12029684,"byte_end":12029691,"line_start":1512,"line_end":1512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030576,"byte_end":12030586,"line_start":1546,"line_end":1546,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12029906,"byte_end":12029941,"line_start":1522,"line_end":1522,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12029946,"byte_end":12029949,"line_start":1523,"line_end":1523,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12029954,"byte_end":12029966,"line_start":1524,"line_end":1524,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12029971,"byte_end":12029974,"line_start":1525,"line_end":1525,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12029979,"byte_end":12030038,"line_start":1526,"line_end":1526,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030043,"byte_end":12030046,"line_start":1527,"line_end":1527,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030051,"byte_end":12030063,"line_start":1528,"line_end":1528,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030068,"byte_end":12030071,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030076,"byte_end":12030163,"line_start":1530,"line_end":1530,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030168,"byte_end":12030201,"line_start":1531,"line_end":1531,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030206,"byte_end":12030209,"line_start":1532,"line_end":1532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030214,"byte_end":12030228,"line_start":1533,"line_end":1533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030233,"byte_end":12030236,"line_start":1534,"line_end":1534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030241,"byte_end":12030248,"line_start":1535,"line_end":1535,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030253,"byte_end":12030302,"line_start":1536,"line_end":1536,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030307,"byte_end":12030351,"line_start":1537,"line_end":1537,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030356,"byte_end":12030359,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030364,"byte_end":12030394,"line_start":1539,"line_end":1539,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030399,"byte_end":12030411,"line_start":1540,"line_end":1540,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030416,"byte_end":12030458,"line_start":1541,"line_end":1541,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030463,"byte_end":12030501,"line_start":1542,"line_end":1542,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030506,"byte_end":12030535,"line_start":1543,"line_end":1543,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030540,"byte_end":12030545,"line_start":1544,"line_end":1544,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030550,"byte_end":12030557,"line_start":1545,"line_end":1545,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031411,"byte_end":12031425,"line_start":1573,"line_end":1573,"column_start":19,"column_end":33},"name":"try_into_owned","qualname":"<Shared>::try_into_owned","value":"unsafe fn try_into_owned(Self) -> Option<Owned<T>>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee if it is not null.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee if it is not null.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030738,"byte_end":12030791,"line_start":1551,"line_end":1551,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030796,"byte_end":12030799,"line_start":1552,"line_end":1552,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030804,"byte_end":12030816,"line_start":1553,"line_end":1553,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030821,"byte_end":12030824,"line_start":1554,"line_end":1554,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030829,"byte_end":12030916,"line_start":1555,"line_end":1555,"column_start":5,"column_end":92}},{"value":"/ reference to the same object, or if the pointer is null.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030921,"byte_end":12030981,"line_start":1556,"line_end":1556,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030986,"byte_end":12030989,"line_start":1557,"line_end":1557,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12030994,"byte_end":12031008,"line_start":1558,"line_end":1558,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031013,"byte_end":12031016,"line_start":1559,"line_end":1559,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031021,"byte_end":12031028,"line_start":1560,"line_end":1560,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031033,"byte_end":12031082,"line_start":1561,"line_end":1561,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031087,"byte_end":12031131,"line_start":1562,"line_end":1562,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031136,"byte_end":12031139,"line_start":1563,"line_end":1563,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031144,"byte_end":12031174,"line_start":1564,"line_end":1564,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031179,"byte_end":12031191,"line_start":1565,"line_end":1565,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031196,"byte_end":12031238,"line_start":1566,"line_end":1566,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031243,"byte_end":12031281,"line_start":1567,"line_end":1567,"column_start":5,"column_end":43}},{"value":"/     if let Some(x) = p.try_into_owned() {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031286,"byte_end":12031331,"line_start":1568,"line_end":1568,"column_start":5,"column_end":50}},{"value":"/         drop(x);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031336,"byte_end":12031356,"line_start":1569,"line_end":1569,"column_start":5,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031361,"byte_end":12031370,"line_start":1570,"line_end":1570,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031375,"byte_end":12031380,"line_start":1571,"line_end":1571,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031385,"byte_end":12031392,"line_start":1572,"line_end":1572,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12032049,"byte_end":12032052,"line_start":1595,"line_end":1595,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"fn tag<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031584,"byte_end":12031630,"line_start":1581,"line_end":1581,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031635,"byte_end":12031638,"line_start":1582,"line_end":1582,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031643,"byte_end":12031657,"line_start":1583,"line_end":1583,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031662,"byte_end":12031665,"line_start":1584,"line_end":1584,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031670,"byte_end":12031677,"line_start":1585,"line_end":1585,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031682,"byte_end":12031738,"line_start":1586,"line_end":1586,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031743,"byte_end":12031787,"line_start":1587,"line_end":1587,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031792,"byte_end":12031795,"line_start":1588,"line_end":1588,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031800,"byte_end":12031862,"line_start":1589,"line_end":1589,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031867,"byte_end":12031897,"line_start":1590,"line_end":1590,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031902,"byte_end":12031936,"line_start":1591,"line_end":1591,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031941,"byte_end":12031968,"line_start":1592,"line_end":1592,"column_start":5,"column_end":32}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12031973,"byte_end":12032025,"line_start":1593,"line_end":1593,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12032030,"byte_end":12032037,"line_start":1594,"line_end":1594,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12032783,"byte_end":12032791,"line_start":1619,"line_end":1619,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"fn with_tag<'_>(&'_ Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12032148,"byte_end":12032238,"line_start":1600,"line_end":1600,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12032243,"byte_end":12032281,"line_start":1601,"line_end":1601,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12032286,"byte_end":12032289,"line_start":1602,"line_end":1602,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12032294,"byte_end":12032308,"line_start":1603,"line_end":1603,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12032313,"byte_end":12032316,"line_start":1604,"line_end":1604,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12032321,"byte_end":12032328,"line_start":1605,"line_end":1605,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12032333,"byte_end":12032382,"line_start":1606,"line_end":1606,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12032387,"byte_end":12032431,"line_start":1607,"line_end":1607,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12032436,"byte_end":12032439,"line_start":1608,"line_end":1608,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12032444,"byte_end":12032474,"line_start":1609,"line_end":1609,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12032479,"byte_end":12032509,"line_start":1610,"line_end":1610,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12032514,"byte_end":12032549,"line_start":1611,"line_end":1611,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12032554,"byte_end":12032582,"line_start":1612,"line_end":1612,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12032587,"byte_end":12032590,"line_start":1613,"line_end":1613,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12032595,"byte_end":12032623,"line_start":1614,"line_end":1614,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12032628,"byte_end":12032656,"line_start":1615,"line_end":1615,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12032661,"byte_end":12032702,"line_start":1616,"line_end":1616,"column_start":5,"column_end":46}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12032707,"byte_end":12032759,"line_start":1617,"line_end":1617,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12032764,"byte_end":12032771,"line_start":1618,"line_end":1618,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12033355,"byte_end":12033359,"line_start":1640,"line_end":1640,"column_start":8,"column_end":12},"name":"from","qualname":"<Shared as std::convert::From>::from","value":"fn from(*const T) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":" Returns a new pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to `raw`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12032956,"byte_end":12033000,"line_start":1625,"line_end":1625,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12033005,"byte_end":12033008,"line_start":1626,"line_end":1626,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12033013,"byte_end":12033025,"line_start":1627,"line_end":1627,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12033030,"byte_end":12033033,"line_start":1628,"line_end":1628,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12033038,"byte_end":12033082,"line_start":1629,"line_end":1629,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12033087,"byte_end":12033090,"line_start":1630,"line_end":1630,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12033095,"byte_end":12033109,"line_start":1631,"line_end":1631,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12033114,"byte_end":12033117,"line_start":1632,"line_end":1632,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12033122,"byte_end":12033129,"line_start":1633,"line_end":1633,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12033134,"byte_end":12033166,"line_start":1634,"line_end":1634,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12033171,"byte_end":12033174,"line_start":1635,"line_end":1635,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::from(Box::into_raw(Box::new(1234)) as *const _);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12033179,"byte_end":12033247,"line_start":1636,"line_end":1636,"column_start":5,"column_end":73}},{"value":"/ assert!(!p.is_null());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12033252,"byte_end":12033278,"line_start":1637,"line_end":1637,"column_start":5,"column_end":31}},{"value":"/ # unsafe { drop(p.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12033283,"byte_end":12033335,"line_start":1638,"line_end":1638,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12033340,"byte_end":12033347,"line_start":1639,"line_end":1639,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12033585,"byte_end":12033587,"line_start":1648,"line_end":1648,"column_start":8,"column_end":10},"name":"eq","qualname":"<Shared as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Self) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12033798,"byte_end":12033809,"line_start":1656,"line_end":1656,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Shared as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ Self) -> Option<cmp::Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12033969,"byte_end":12033972,"line_start":1662,"line_end":1662,"column_start":8,"column_end":11},"name":"cmp","qualname":"<Shared as std::cmp::Ord>::cmp","value":"fn cmp<'_, '_>(&'_ Self, &'_ Self) -> cmp::Ordering","parent":{"krate":2,"index":2951},"children":[],"decl_id":{"krate":2,"index":2952},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12034123,"byte_end":12034126,"line_start":1668,"line_end":1668,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Shared as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12034432,"byte_end":12034435,"line_start":1679,"line_end":1679,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Shared as std::fmt::Pointer>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10312},"children":[],"decl_id":{"krate":2,"index":10313},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12034629,"byte_end":12034636,"line_start":1685,"line_end":1685,"column_start":8,"column_end":15},"name":"default","qualname":"<Shared as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":373},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12035776,"byte_end":12035785,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":374}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12035727,"byte_end":12035764,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12035932,"byte_end":12035939,"line_start":30,"line_end":30,"column_start":8,"column_end":15},"name":"default","qualname":"<Collector as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12036092,"byte_end":12036095,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12036052,"byte_end":12036080,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12036200,"byte_end":12036208,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"fn register<'_>(&'_ Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12036143,"byte_end":12036188,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12036371,"byte_end":12036376,"line_start":51,"line_end":51,"column_start":8,"column_end":13},"name":"clone","qualname":"<Collector as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":" Creates another reference to the same garbage collector.\n","sig":null,"attributes":[{"value":"/ Creates another reference to the same garbage collector.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12036303,"byte_end":12036363,"line_start":50,"line_end":50,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12036513,"byte_end":12036516,"line_start":59,"line_end":59,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Collector as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12036710,"byte_end":12036712,"line_start":66,"line_end":66,"column_start":8,"column_end":10},"name":"eq","qualname":"<Collector as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Collector) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":" Checks if both handles point to the same collector.\n","sig":null,"attributes":[{"value":"/ Checks if both handles point to the same collector.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12036647,"byte_end":12036702,"line_start":65,"line_end":65,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":389},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12036876,"byte_end":12036887,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":390}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12036828,"byte_end":12036864,"line_start":72,"line_end":72,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12036998,"byte_end":12037001,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"fn pin<'_>(&'_ Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12036952,"byte_end":12036972,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12036977,"byte_end":12036986,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12037139,"byte_end":12037148,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"fn is_pinned<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12037070,"byte_end":12037113,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12037118,"byte_end":12037127,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12037304,"byte_end":12037313,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"fn collector<'_>(&'_ Self) -> &'_ Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12037222,"byte_end":12037278,"line_start":90,"line_end":90,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12037283,"byte_end":12037292,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12037440,"byte_end":12037444,"line_start":99,"line_end":99,"column_start":8,"column_end":12},"name":"drop","qualname":"<LocalHandle as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12037423,"byte_end":12037432,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12037584,"byte_end":12037587,"line_start":107,"line_end":107,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LocalHandle as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":479},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12058247,"byte_end":12058252,"line_start":71,"line_end":71,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":480}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12056478,"byte_end":12056527,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12056528,"byte_end":12056531,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12056532,"byte_end":12056545,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12056546,"byte_end":12056549,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12056550,"byte_end":12056629,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12056630,"byte_end":12056633,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12056634,"byte_end":12056641,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12056642,"byte_end":12056675,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12056676,"byte_end":12056679,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12056680,"byte_end":12056778,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12056779,"byte_end":12056871,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12056872,"byte_end":12056902,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12056903,"byte_end":12056910,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12056911,"byte_end":12056914,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12056915,"byte_end":12056991,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12056992,"byte_end":12056995,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12056996,"byte_end":12057023,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057024,"byte_end":12057027,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057028,"byte_end":12057115,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057116,"byte_end":12057132,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057133,"byte_end":12057136,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057137,"byte_end":12057144,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057145,"byte_end":12057194,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057195,"byte_end":12057239,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057240,"byte_end":12057243,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057244,"byte_end":12057282,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057283,"byte_end":12057312,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057313,"byte_end":12057316,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057317,"byte_end":12057347,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057348,"byte_end":12057378,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057379,"byte_end":12057382,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057383,"byte_end":12057457,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057458,"byte_end":12057492,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057493,"byte_end":12057496,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057497,"byte_end":12057548,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057549,"byte_end":12057595,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057596,"byte_end":12057639,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057640,"byte_end":12057645,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057646,"byte_end":12057698,"line_start":49,"line_end":49,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057699,"byte_end":12057706,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057707,"byte_end":12057710,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057711,"byte_end":12057732,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057733,"byte_end":12057736,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057737,"byte_end":12057832,"line_start":54,"line_end":54,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057833,"byte_end":12057931,"line_start":55,"line_end":55,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057932,"byte_end":12057951,"line_start":56,"line_end":56,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057952,"byte_end":12057955,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057956,"byte_end":12057963,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057964,"byte_end":12057997,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12057998,"byte_end":12058001,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12058002,"byte_end":12058032,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12058033,"byte_end":12058063,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12058064,"byte_end":12058096,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12058097,"byte_end":12058114,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12058115,"byte_end":12058147,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12058148,"byte_end":12058165,"line_start":66,"line_end":66,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12058166,"byte_end":12058199,"line_start":67,"line_end":67,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12058200,"byte_end":12058207,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12058208,"byte_end":12058211,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: super::pin","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12058212,"byte_end":12058235,"line_start":70,"line_end":70,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12059227,"byte_end":12059232,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"fn defer<F, R, '_>(&'_ Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12058311,"byte_end":12058400,"line_start":76,"line_end":76,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12058405,"byte_end":12058430,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12058435,"byte_end":12058438,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12058443,"byte_end":12058536,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12058541,"byte_end":12058629,"line_start":80,"line_end":80,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12058634,"byte_end":12058724,"line_start":81,"line_end":81,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12058729,"byte_end":12058769,"line_start":82,"line_end":82,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12058774,"byte_end":12058777,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12058782,"byte_end":12058872,"line_start":84,"line_end":84,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12058877,"byte_end":12058968,"line_start":85,"line_end":85,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12058973,"byte_end":12059060,"line_start":86,"line_end":86,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12059065,"byte_end":12059085,"line_start":87,"line_end":87,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12059090,"byte_end":12059093,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12059098,"byte_end":12059185,"line_start":89,"line_end":89,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12059190,"byte_end":12059215,"line_start":90,"line_end":90,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12063589,"byte_end":12063604,"line_start":190,"line_end":190,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"unsafe fn defer_unchecked<F, R, '_>(&'_ Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12059396,"byte_end":12059485,"line_start":101,"line_end":101,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12059490,"byte_end":12059515,"line_start":102,"line_end":102,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12059520,"byte_end":12059523,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12059528,"byte_end":12059621,"line_start":104,"line_end":104,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12059626,"byte_end":12059714,"line_start":105,"line_end":105,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12059719,"byte_end":12059809,"line_start":106,"line_end":106,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12059814,"byte_end":12059854,"line_start":107,"line_end":107,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12059859,"byte_end":12059862,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12059867,"byte_end":12059957,"line_start":109,"line_end":109,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12059962,"byte_end":12060053,"line_start":110,"line_end":110,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12060058,"byte_end":12060145,"line_start":111,"line_end":111,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12060150,"byte_end":12060170,"line_start":112,"line_end":112,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12060175,"byte_end":12060178,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12060183,"byte_end":12060270,"line_start":114,"line_end":114,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12060275,"byte_end":12060300,"line_start":115,"line_end":115,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12060305,"byte_end":12060308,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12060313,"byte_end":12060325,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12060330,"byte_end":12060333,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12060338,"byte_end":12060430,"line_start":119,"line_end":119,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12060435,"byte_end":12060522,"line_start":120,"line_end":120,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12060527,"byte_end":12060539,"line_start":121,"line_end":121,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12060544,"byte_end":12060547,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12060552,"byte_end":12060559,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12060564,"byte_end":12060597,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12060602,"byte_end":12060605,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12060610,"byte_end":12060640,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12060645,"byte_end":12060672,"line_start":127,"line_end":127,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12060677,"byte_end":12060689,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12060694,"byte_end":12060769,"line_start":129,"line_end":129,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12060774,"byte_end":12060813,"line_start":130,"line_end":130,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12060818,"byte_end":12060854,"line_start":131,"line_end":131,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12060859,"byte_end":12060870,"line_start":132,"line_end":132,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12060875,"byte_end":12060880,"line_start":133,"line_end":133,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12060885,"byte_end":12060892,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12060897,"byte_end":12060900,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12060905,"byte_end":12060999,"line_start":136,"line_end":136,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12061004,"byte_end":12061035,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12061040,"byte_end":12061043,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12061048,"byte_end":12061143,"line_start":139,"line_end":139,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12061148,"byte_end":12061240,"line_start":140,"line_end":140,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12061245,"byte_end":12061334,"line_start":141,"line_end":141,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12061339,"byte_end":12061342,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12061347,"byte_end":12061360,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12061365,"byte_end":12061418,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12061423,"byte_end":12061505,"line_start":145,"line_end":145,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12061510,"byte_end":12061517,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12061522,"byte_end":12061525,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12061530,"byte_end":12061623,"line_start":148,"line_end":148,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12061628,"byte_end":12061723,"line_start":149,"line_end":149,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12061728,"byte_end":12061788,"line_start":150,"line_end":150,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12061793,"byte_end":12061796,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12061801,"byte_end":12061815,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12061820,"byte_end":12061823,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12061828,"byte_end":12061914,"line_start":154,"line_end":154,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12061919,"byte_end":12062013,"line_start":155,"line_end":155,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12062018,"byte_end":12062114,"line_start":156,"line_end":156,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12062119,"byte_end":12062211,"line_start":157,"line_end":157,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12062216,"byte_end":12062272,"line_start":158,"line_end":158,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12062277,"byte_end":12062280,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12062285,"byte_end":12062292,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12062297,"byte_end":12062353,"line_start":161,"line_end":161,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12062358,"byte_end":12062402,"line_start":162,"line_end":162,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12062407,"byte_end":12062410,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12062415,"byte_end":12062446,"line_start":164,"line_end":164,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12062451,"byte_end":12062454,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12062459,"byte_end":12062536,"line_start":166,"line_end":166,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12062541,"byte_end":12062572,"line_start":167,"line_end":167,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12062577,"byte_end":12062580,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12062585,"byte_end":12062615,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12062620,"byte_end":12062650,"line_start":170,"line_end":170,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12062655,"byte_end":12062658,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12062663,"byte_end":12062740,"line_start":172,"line_end":172,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12062745,"byte_end":12062817,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12062822,"byte_end":12062825,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12062830,"byte_end":12062851,"line_start":175,"line_end":175,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12062856,"byte_end":12062916,"line_start":176,"line_end":176,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12062921,"byte_end":12063003,"line_start":177,"line_end":177,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12063008,"byte_end":12063024,"line_start":178,"line_end":178,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12063029,"byte_end":12063108,"line_start":179,"line_end":179,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12063113,"byte_end":12063156,"line_start":180,"line_end":180,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12063161,"byte_end":12063229,"line_start":181,"line_end":181,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12063234,"byte_end":12063326,"line_start":182,"line_end":182,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12063331,"byte_end":12063415,"line_start":183,"line_end":183,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12063420,"byte_end":12063457,"line_start":184,"line_end":184,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12063462,"byte_end":12063477,"line_start":185,"line_end":185,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12063482,"byte_end":12063491,"line_start":186,"line_end":186,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12063496,"byte_end":12063501,"line_start":187,"line_end":187,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12063506,"byte_end":12063558,"line_start":188,"line_end":188,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12063563,"byte_end":12063570,"line_start":189,"line_end":189,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12067248,"byte_end":12067261,"line_start":270,"line_end":270,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"unsafe fn defer_destroy<T, '_, '_>(&'_ Self, Shared)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12063843,"byte_end":12063936,"line_start":201,"line_end":201,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12063941,"byte_end":12063993,"line_start":202,"line_end":202,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12063998,"byte_end":12064001,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12064006,"byte_end":12064099,"line_start":204,"line_end":204,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12064104,"byte_end":12064194,"line_start":205,"line_end":205,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12064199,"byte_end":12064288,"line_start":206,"line_end":206,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12064293,"byte_end":12064347,"line_start":207,"line_end":207,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12064352,"byte_end":12064355,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12064360,"byte_end":12064453,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12064458,"byte_end":12064551,"line_start":210,"line_end":210,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12064556,"byte_end":12064649,"line_start":211,"line_end":211,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12064654,"byte_end":12064685,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12064690,"byte_end":12064693,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12064698,"byte_end":12064787,"line_start":214,"line_end":214,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12064792,"byte_end":12064817,"line_start":215,"line_end":215,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12064822,"byte_end":12064825,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12064830,"byte_end":12064842,"line_start":217,"line_end":217,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12064847,"byte_end":12064850,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12064855,"byte_end":12064948,"line_start":219,"line_end":219,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12064953,"byte_end":12064986,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12064991,"byte_end":12064994,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12064999,"byte_end":12065094,"line_start":222,"line_end":222,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12065099,"byte_end":12065137,"line_start":223,"line_end":223,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12065142,"byte_end":12065145,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12065150,"byte_end":12065245,"line_start":225,"line_end":225,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12065250,"byte_end":12065342,"line_start":226,"line_end":226,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12065347,"byte_end":12065436,"line_start":227,"line_end":227,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12065441,"byte_end":12065444,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12065449,"byte_end":12065462,"line_start":229,"line_end":229,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12065467,"byte_end":12065520,"line_start":230,"line_end":230,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12065525,"byte_end":12065584,"line_start":231,"line_end":231,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12065589,"byte_end":12065596,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12065601,"byte_end":12065604,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12065609,"byte_end":12065703,"line_start":234,"line_end":234,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12065708,"byte_end":12065795,"line_start":235,"line_end":235,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12065800,"byte_end":12065860,"line_start":236,"line_end":236,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12065865,"byte_end":12065868,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12065873,"byte_end":12065887,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12065892,"byte_end":12065895,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12065900,"byte_end":12065986,"line_start":240,"line_end":240,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12065991,"byte_end":12066085,"line_start":241,"line_end":241,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12066090,"byte_end":12066186,"line_start":242,"line_end":242,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12066191,"byte_end":12066283,"line_start":243,"line_end":243,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12066288,"byte_end":12066344,"line_start":244,"line_end":244,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12066349,"byte_end":12066352,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12066357,"byte_end":12066364,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12066369,"byte_end":12066425,"line_start":247,"line_end":247,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12066430,"byte_end":12066474,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12066479,"byte_end":12066482,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12066487,"byte_end":12066518,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12066523,"byte_end":12066526,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12066531,"byte_end":12066608,"line_start":252,"line_end":252,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12066613,"byte_end":12066644,"line_start":253,"line_end":253,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12066649,"byte_end":12066652,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12066657,"byte_end":12066687,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12066692,"byte_end":12066722,"line_start":256,"line_end":256,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12066727,"byte_end":12066730,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12066735,"byte_end":12066812,"line_start":258,"line_end":258,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12066817,"byte_end":12066889,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12066894,"byte_end":12066897,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12066902,"byte_end":12066923,"line_start":261,"line_end":261,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12066928,"byte_end":12066988,"line_start":262,"line_end":262,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12066993,"byte_end":12067075,"line_start":263,"line_end":263,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12067080,"byte_end":12067096,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12067101,"byte_end":12067136,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12067141,"byte_end":12067150,"line_start":266,"line_end":266,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12067155,"byte_end":12067160,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12067165,"byte_end":12067217,"line_start":268,"line_end":268,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12067222,"byte_end":12067229,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12068146,"byte_end":12068151,"line_start":294,"line_end":294,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"fn flush<'_>(&'_ Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12067361,"byte_end":12067456,"line_start":274,"line_end":274,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12067461,"byte_end":12067478,"line_start":275,"line_end":275,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12067483,"byte_end":12067486,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12067491,"byte_end":12067585,"line_start":277,"line_end":277,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12067590,"byte_end":12067682,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12067687,"byte_end":12067755,"line_start":279,"line_end":279,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12067760,"byte_end":12067763,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12067768,"byte_end":12067860,"line_start":281,"line_end":281,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12067865,"byte_end":12067868,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12067873,"byte_end":12067887,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12067892,"byte_end":12067895,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12067900,"byte_end":12067907,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12067912,"byte_end":12067945,"line_start":286,"line_end":286,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12067950,"byte_end":12067953,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12067958,"byte_end":12067988,"line_start":288,"line_end":288,"column_start":5,"column_end":35}},{"value":"/ guard.defer(move || {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12067993,"byte_end":12068018,"line_start":289,"line_end":289,"column_start":5,"column_end":30}},{"value":"/     println!(\"This better be printed as soon as possible!\");","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12068023,"byte_end":12068087,"line_start":290,"line_end":290,"column_start":5,"column_end":69}},{"value":"/ });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12068092,"byte_end":12068099,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ guard.flush();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12068104,"byte_end":12068122,"line_start":292,"line_end":292,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12068127,"byte_end":12068134,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12069370,"byte_end":12069375,"line_start":328,"line_end":328,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"fn repin<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12068275,"byte_end":12068326,"line_start":300,"line_end":300,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12068331,"byte_end":12068334,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12068339,"byte_end":12068429,"line_start":302,"line_end":302,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12068434,"byte_end":12068528,"line_start":303,"line_end":303,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12068533,"byte_end":12068627,"line_start":304,"line_end":304,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12068632,"byte_end":12068684,"line_start":305,"line_end":305,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12068689,"byte_end":12068692,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12068697,"byte_end":12068790,"line_start":307,"line_end":307,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12068795,"byte_end":12068798,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12068803,"byte_end":12068817,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12068822,"byte_end":12068825,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12068830,"byte_end":12068837,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12068842,"byte_end":12068891,"line_start":312,"line_end":312,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12068896,"byte_end":12068940,"line_start":313,"line_end":313,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12068945,"byte_end":12068948,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12068953,"byte_end":12068982,"line_start":315,"line_end":315,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12068987,"byte_end":12069020,"line_start":316,"line_end":316,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12069025,"byte_end":12069030,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12069035,"byte_end":12069074,"line_start":318,"line_end":318,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12069079,"byte_end":12069133,"line_start":319,"line_end":319,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12069138,"byte_end":12069143,"line_start":320,"line_end":320,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12069148,"byte_end":12069166,"line_start":321,"line_end":321,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12069171,"byte_end":12069176,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12069181,"byte_end":12069220,"line_start":323,"line_end":323,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12069225,"byte_end":12069279,"line_start":324,"line_end":324,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12069284,"byte_end":12069289,"line_start":325,"line_end":325,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12069294,"byte_end":12069346,"line_start":326,"line_end":326,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12069351,"byte_end":12069358,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12070759,"byte_end":12070770,"line_start":365,"line_end":365,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"fn repin_after<F, R, '_>(&'_ mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12069499,"byte_end":12069590,"line_start":334,"line_end":334,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12069595,"byte_end":12069598,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12069603,"byte_end":12069694,"line_start":336,"line_end":336,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12069699,"byte_end":12069795,"line_start":337,"line_end":337,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12069800,"byte_end":12069894,"line_start":338,"line_end":338,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12069899,"byte_end":12069918,"line_start":339,"line_end":339,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12069923,"byte_end":12069926,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12069931,"byte_end":12070025,"line_start":341,"line_end":341,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12070030,"byte_end":12070072,"line_start":342,"line_end":342,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12070077,"byte_end":12070080,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12070085,"byte_end":12070099,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12070104,"byte_end":12070107,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12070112,"byte_end":12070119,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12070124,"byte_end":12070173,"line_start":347,"line_end":347,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12070178,"byte_end":12070222,"line_start":348,"line_end":348,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12070227,"byte_end":12070247,"line_start":349,"line_end":349,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12070252,"byte_end":12070280,"line_start":350,"line_end":350,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12070285,"byte_end":12070288,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12070293,"byte_end":12070322,"line_start":352,"line_end":352,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12070327,"byte_end":12070360,"line_start":353,"line_end":353,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12070365,"byte_end":12070370,"line_start":354,"line_end":354,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12070375,"byte_end":12070414,"line_start":355,"line_end":355,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12070419,"byte_end":12070473,"line_start":356,"line_end":356,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12070478,"byte_end":12070483,"line_start":357,"line_end":357,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12070488,"byte_end":12070555,"line_start":358,"line_end":358,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12070560,"byte_end":12070565,"line_start":359,"line_end":359,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12070570,"byte_end":12070609,"line_start":360,"line_end":360,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12070614,"byte_end":12070668,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12070673,"byte_end":12070678,"line_start":362,"line_end":362,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12070683,"byte_end":12070735,"line_start":363,"line_end":363,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12070740,"byte_end":12070747,"line_start":364,"line_end":364,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12071916,"byte_end":12071925,"line_start":403,"line_end":403,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"fn collector<'_>(&'_ Self) -> Option<&'_ Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12071375,"byte_end":12071430,"line_start":387,"line_end":387,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12071435,"byte_end":12071438,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12071443,"byte_end":12071518,"line_start":389,"line_end":389,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12071523,"byte_end":12071573,"line_start":390,"line_end":390,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12071578,"byte_end":12071581,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12071586,"byte_end":12071670,"line_start":392,"line_end":392,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12071675,"byte_end":12071678,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12071683,"byte_end":12071697,"line_start":394,"line_end":394,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12071702,"byte_end":12071705,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12071710,"byte_end":12071717,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12071722,"byte_end":12071755,"line_start":397,"line_end":397,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12071760,"byte_end":12071763,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12071768,"byte_end":12071798,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12071803,"byte_end":12071833,"line_start":400,"line_end":400,"column_start":5,"column_end":35}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12071838,"byte_end":12071892,"line_start":401,"line_end":401,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12071897,"byte_end":12071904,"line_start":402,"line_end":402,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12072079,"byte_end":12072083,"line_start":410,"line_end":410,"column_start":8,"column_end":12},"name":"drop","qualname":"<Guard as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12072062,"byte_end":12072071,"line_start":409,"line_end":409,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12072240,"byte_end":12072243,"line_start":418,"line_end":418,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Guard as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":503},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12075277,"byte_end":12075288,"line_start":510,"line_end":510,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12072335,"byte_end":12072422,"line_start":423,"line_end":423,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12072423,"byte_end":12072426,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12072427,"byte_end":12072522,"line_start":425,"line_end":425,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12072523,"byte_end":12072612,"line_start":426,"line_end":426,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12072613,"byte_end":12072616,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12072617,"byte_end":12072710,"line_start":428,"line_end":428,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12072711,"byte_end":12072748,"line_start":429,"line_end":429,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12072749,"byte_end":12072752,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12072753,"byte_end":12072849,"line_start":431,"line_end":431,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12072850,"byte_end":12072853,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12072854,"byte_end":12072866,"line_start":433,"line_end":433,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12072867,"byte_end":12072870,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12072871,"byte_end":12072961,"line_start":435,"line_end":435,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12072962,"byte_end":12073029,"line_start":436,"line_end":436,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073030,"byte_end":12073033,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073034,"byte_end":12073048,"line_start":438,"line_end":438,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073049,"byte_end":12073052,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073053,"byte_end":12073060,"line_start":440,"line_end":440,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073061,"byte_end":12073110,"line_start":441,"line_end":441,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073111,"byte_end":12073156,"line_start":442,"line_end":442,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073157,"byte_end":12073160,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073161,"byte_end":12073188,"line_start":444,"line_end":444,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073189,"byte_end":12073192,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073193,"byte_end":12073205,"line_start":446,"line_end":446,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073206,"byte_end":12073261,"line_start":447,"line_end":447,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073262,"byte_end":12073308,"line_start":448,"line_end":448,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073309,"byte_end":12073312,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073313,"byte_end":12073387,"line_start":450,"line_end":450,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073388,"byte_end":12073438,"line_start":451,"line_end":451,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073439,"byte_end":12073442,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073443,"byte_end":12073472,"line_start":453,"line_end":453,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073473,"byte_end":12073529,"line_start":454,"line_end":454,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073530,"byte_end":12073541,"line_start":455,"line_end":455,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073542,"byte_end":12073545,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073546,"byte_end":12073627,"line_start":457,"line_end":457,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073628,"byte_end":12073633,"line_start":458,"line_end":458,"column_start":1,"column_end":6}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073634,"byte_end":12073686,"line_start":459,"line_end":459,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073687,"byte_end":12073694,"line_start":460,"line_end":460,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073695,"byte_end":12073698,"line_start":461,"line_end":461,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073699,"byte_end":12073793,"line_start":462,"line_end":462,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073794,"byte_end":12073797,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073798,"byte_end":12073892,"line_start":464,"line_end":464,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073893,"byte_end":12073978,"line_start":465,"line_end":465,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073979,"byte_end":12073982,"line_start":466,"line_end":466,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12073983,"byte_end":12074082,"line_start":467,"line_end":467,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074083,"byte_end":12074181,"line_start":468,"line_end":468,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074182,"byte_end":12074202,"line_start":469,"line_end":469,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074203,"byte_end":12074206,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074207,"byte_end":12074214,"line_start":471,"line_end":471,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074215,"byte_end":12074264,"line_start":472,"line_end":472,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074265,"byte_end":12074296,"line_start":473,"line_end":473,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074297,"byte_end":12074342,"line_start":474,"line_end":474,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074343,"byte_end":12074346,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074347,"byte_end":12074368,"line_start":476,"line_end":476,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074369,"byte_end":12074399,"line_start":477,"line_end":477,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074400,"byte_end":12074405,"line_start":478,"line_end":478,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074406,"byte_end":12074409,"line_start":479,"line_end":479,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074410,"byte_end":12074430,"line_start":480,"line_end":480,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074431,"byte_end":12074461,"line_start":481,"line_end":481,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074462,"byte_end":12074492,"line_start":482,"line_end":482,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074493,"byte_end":12074498,"line_start":483,"line_end":483,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074499,"byte_end":12074502,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074503,"byte_end":12074534,"line_start":485,"line_end":485,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074535,"byte_end":12074563,"line_start":486,"line_end":486,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074564,"byte_end":12074584,"line_start":487,"line_end":487,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074585,"byte_end":12074621,"line_start":488,"line_end":488,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074622,"byte_end":12074699,"line_start":489,"line_end":489,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074700,"byte_end":12074703,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074704,"byte_end":12074755,"line_start":491,"line_end":491,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074756,"byte_end":12074796,"line_start":492,"line_end":492,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074797,"byte_end":12074871,"line_start":493,"line_end":493,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074872,"byte_end":12074875,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074876,"byte_end":12074964,"line_start":495,"line_end":495,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12074965,"byte_end":12075015,"line_start":496,"line_end":496,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12075016,"byte_end":12075068,"line_start":497,"line_end":497,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12075069,"byte_end":12075097,"line_start":498,"line_end":498,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12075098,"byte_end":12075101,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12075102,"byte_end":12075134,"line_start":500,"line_end":500,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12075135,"byte_end":12075152,"line_start":501,"line_end":501,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12075153,"byte_end":12075166,"line_start":502,"line_end":502,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12075167,"byte_end":12075176,"line_start":503,"line_end":503,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12075177,"byte_end":12075182,"line_start":504,"line_end":504,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12075183,"byte_end":12075190,"line_start":505,"line_end":505,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12075191,"byte_end":12075194,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: super::Atomic","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12075195,"byte_end":12075224,"line_start":507,"line_end":507,"column_start":1,"column_end":30}},{"value":"/ [`defer`]: Guard::defer","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12075225,"byte_end":12075252,"line_start":508,"line_end":508,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12075253,"byte_end":12075262,"line_start":509,"line_end":509,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":933},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/default.rs","byte_start":12132030,"byte_end":12132033,"line_start":39,"line_end":39,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/default.rs","byte_start":12131984,"byte_end":12132012,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/default.rs","byte_start":12132013,"byte_end":12132022,"line_start":38,"line_end":38,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":935},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/default.rs","byte_start":12132158,"byte_end":12132167,"line_start":45,"line_end":45,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/default.rs","byte_start":12132089,"byte_end":12132140,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/default.rs","byte_start":12132141,"byte_end":12132150,"line_start":44,"line_end":44,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":937},"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/default.rs","byte_start":12132277,"byte_end":12132294,"line_start":50,"line_end":50,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/default.rs","byte_start":12132228,"byte_end":12132269,"line_start":49,"line_end":49,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":4694,"byte_end":4704,"line_start":108,"line_end":108,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11981296,"byte_end":11981316,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11982743,"byte_end":11982751,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11986525,"byte_end":11986526,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11989747,"byte_end":11989753,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11989818,"byte_end":11989824,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11989840,"byte_end":11989846,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11990236,"byte_end":11990242,"line_start":315,"line_end":315,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":191},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":203},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12013889,"byte_end":12013895,"line_start":942,"line_end":942,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12014242,"byte_end":12014248,"line_start":954,"line_end":954,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12014536,"byte_end":12014542,"line_start":962,"line_end":962,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12014889,"byte_end":12014895,"line_start":973,"line_end":973,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015007,"byte_end":12015013,"line_start":979,"line_end":979,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015465,"byte_end":12015471,"line_start":997,"line_end":997,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015574,"byte_end":12015580,"line_start":1003,"line_end":1003,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015700,"byte_end":12015706,"line_start":1009,"line_end":1009,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016055,"byte_end":12016061,"line_start":1024,"line_end":1024,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12017274,"byte_end":12017279,"line_start":1065,"line_end":1065,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12017786,"byte_end":12017791,"line_start":1088,"line_end":1088,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019441,"byte_end":12019446,"line_start":1148,"line_end":1148,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12021173,"byte_end":12021178,"line_start":1212,"line_end":1212,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12021368,"byte_end":12021373,"line_start":1221,"line_end":1221,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12021651,"byte_end":12021656,"line_start":1232,"line_end":1232,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12021797,"byte_end":12021802,"line_start":1238,"line_end":1238,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12021995,"byte_end":12022000,"line_start":1247,"line_end":1247,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022166,"byte_end":12022171,"line_start":1254,"line_end":1254,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022261,"byte_end":12022266,"line_start":1260,"line_end":1260,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022739,"byte_end":12022744,"line_start":1279,"line_end":1279,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022854,"byte_end":12022859,"line_start":1285,"line_end":1285,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022981,"byte_end":12022986,"line_start":1291,"line_end":1291,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12023092,"byte_end":12023097,"line_start":1297,"line_end":1297,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12023598,"byte_end":12023604,"line_start":1314,"line_end":1314,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12023778,"byte_end":12023784,"line_start":1323,"line_end":1323,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12023839,"byte_end":12023845,"line_start":1325,"line_end":1325,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024091,"byte_end":12024097,"line_start":1340,"line_end":1340,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024785,"byte_end":12024791,"line_start":1364,"line_end":1364,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12032936,"byte_end":12032942,"line_start":1624,"line_end":1624,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12033562,"byte_end":12033568,"line_start":1647,"line_end":1647,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12033695,"byte_end":12033701,"line_start":1653,"line_end":1653,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12033775,"byte_end":12033781,"line_start":1655,"line_end":1655,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12033946,"byte_end":12033952,"line_start":1661,"line_end":1661,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12034100,"byte_end":12034106,"line_start":1667,"line_end":1667,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12034409,"byte_end":12034415,"line_start":1678,"line_end":1678,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12034606,"byte_end":12034612,"line_start":1684,"line_end":1684,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12035848,"byte_end":12035857,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12035882,"byte_end":12035891,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12035913,"byte_end":12035922,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12036036,"byte_end":12036045,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12036287,"byte_end":12036296,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12036494,"byte_end":12036503,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12036631,"byte_end":12036640,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12036814,"byte_end":12036823,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12036934,"byte_end":12036945,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12037405,"byte_end":12037416,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12037563,"byte_end":12037574,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/deferred.rs","byte_start":12048321,"byte_end":12048329,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/deferred.rs","byte_start":12048453,"byte_end":12048461,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/epoch.rs","byte_start":12052546,"byte_end":12052551,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/epoch.rs","byte_start":12054355,"byte_end":12054366,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12058299,"byte_end":12058304,"line_start":75,"line_end":75,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":489},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12072050,"byte_end":12072055,"line_start":408,"line_end":408,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12072225,"byte_end":12072230,"line_start":417,"line_end":417,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12075567,"byte_end":12075579,"line_start":515,"line_end":515,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":12078735,"byte_end":12078738,"line_start":72,"line_end":72,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":12078748,"byte_end":12078751,"line_start":74,"line_end":74,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":12079700,"byte_end":12079703,"line_start":109,"line_end":109,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":12079855,"byte_end":12079858,"line_start":118,"line_end":118,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":12080247,"byte_end":12080250,"line_start":130,"line_end":130,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":12080657,"byte_end":12080666,"line_start":146,"line_end":146,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":12080676,"byte_end":12080685,"line_start":148,"line_end":148,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":12081367,"byte_end":12081373,"line_start":169,"line_end":169,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":12086596,"byte_end":12086601,"line_start":311,"line_end":311,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":12095388,"byte_end":12095393,"line_start":538,"line_end":538,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/list.rs","byte_start":12101536,"byte_end":12101541,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/list.rs","byte_start":12101677,"byte_end":12101682,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/list.rs","byte_start":12102195,"byte_end":12102199,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/list.rs","byte_start":12104782,"byte_end":12104786,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/list.rs","byte_start":12105318,"byte_end":12105322,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/once_lock.rs","byte_start":12114150,"byte_end":12114158,"line_start":19,"line_end":19,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/once_lock.rs","byte_start":12114195,"byte_end":12114203,"line_start":20,"line_end":20,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/once_lock.rs","byte_start":12114219,"byte_end":12114227,"line_start":22,"line_end":22,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/once_lock.rs","byte_start":12116308,"byte_end":12116316,"line_start":96,"line_end":96,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/queue.rs","byte_start":12118194,"byte_end":12118199,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/queue.rs","byte_start":12118236,"byte_end":12118241,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/queue.rs","byte_start":12118257,"byte_end":12118262,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":807},{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/queue.rs","byte_start":12124182,"byte_end":12124187,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":4694,"byte_end":4704,"line_start":108,"line_end":108,"column_start":17,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":34},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11981296,"byte_end":11981316,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":100},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11982743,"byte_end":11982751,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":41060},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11986525,"byte_end":11986526,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":137},"to":{"krate":0,"index":127}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11989747,"byte_end":11989753,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11989818,"byte_end":11989824,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11989840,"byte_end":11989846,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11990236,"byte_end":11990242,"line_start":315,"line_end":315,"column_start":29,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12013889,"byte_end":12013895,"line_start":942,"line_end":942,"column_start":44,"column_end":50},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12014242,"byte_end":12014248,"line_start":954,"line_end":954,"column_start":46,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":10312}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12014536,"byte_end":12014542,"line_start":962,"line_end":962,"column_start":39,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12014889,"byte_end":12014895,"line_start":973,"line_end":973,"column_start":41,"column_end":47},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015007,"byte_end":12015013,"line_start":979,"line_end":979,"column_start":48,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015465,"byte_end":12015471,"line_start":997,"line_end":997,"column_start":26,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015574,"byte_end":12015580,"line_start":1003,"line_end":1003,"column_start":21,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12015700,"byte_end":12015706,"line_start":1009,"line_end":1009,"column_start":57,"column_end":63},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12016055,"byte_end":12016061,"line_start":1024,"line_end":1024,"column_start":28,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12017274,"byte_end":12017279,"line_start":1065,"line_end":1065,"column_start":44,"column_end":49},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":247},"to":{"krate":0,"index":243}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12017786,"byte_end":12017791,"line_start":1088,"line_end":1088,"column_start":9,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12019441,"byte_end":12019446,"line_start":1148,"line_end":1148,"column_start":29,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12021173,"byte_end":12021178,"line_start":1212,"line_end":1212,"column_start":38,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12021368,"byte_end":12021373,"line_start":1221,"line_end":1221,"column_start":44,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12021651,"byte_end":12021656,"line_start":1232,"line_end":1232,"column_start":26,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12021797,"byte_end":12021802,"line_start":1238,"line_end":1238,"column_start":39,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12021995,"byte_end":12022000,"line_start":1247,"line_end":1247,"column_start":42,"column_end":47},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022166,"byte_end":12022171,"line_start":1254,"line_end":1254,"column_start":21,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022261,"byte_end":12022266,"line_start":1260,"line_end":1260,"column_start":26,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022739,"byte_end":12022744,"line_start":1279,"line_end":1279,"column_start":43,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2857}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022854,"byte_end":12022859,"line_start":1285,"line_end":1285,"column_start":46,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2860}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12022981,"byte_end":12022986,"line_start":1291,"line_end":1291,"column_start":42,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12023092,"byte_end":12023097,"line_start":1297,"line_end":1297,"column_start":42,"column_end":47},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3163}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12023598,"byte_end":12023604,"line_start":1314,"line_end":1314,"column_start":39,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12023778,"byte_end":12023784,"line_start":1323,"line_end":1323,"column_start":38,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":3273}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12023839,"byte_end":12023845,"line_start":1325,"line_end":1325,"column_start":44,"column_end":50},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":301},"to":{"krate":0,"index":243}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024091,"byte_end":12024097,"line_start":1340,"line_end":1340,"column_start":13,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12024785,"byte_end":12024791,"line_start":1364,"line_end":1364,"column_start":33,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12032936,"byte_end":12032942,"line_start":1624,"line_end":1624,"column_start":28,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12033562,"byte_end":12033568,"line_start":1647,"line_end":1647,"column_start":62,"column_end":68},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12033695,"byte_end":12033701,"line_start":1653,"line_end":1653,"column_start":36,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12033775,"byte_end":12033781,"line_start":1655,"line_end":1655,"column_start":63,"column_end":69},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12033946,"byte_end":12033952,"line_start":1661,"line_end":1661,"column_start":37,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2951}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12034100,"byte_end":12034106,"line_start":1667,"line_end":1667,"column_start":44,"column_end":50},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12034409,"byte_end":12034415,"line_start":1678,"line_end":1678,"column_start":46,"column_end":52},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":10312}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":12034606,"byte_end":12034612,"line_start":1684,"line_end":1684,"column_start":41,"column_end":47},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12035848,"byte_end":12035857,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12035882,"byte_end":12035891,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12035913,"byte_end":12035922,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12036036,"byte_end":12036045,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12036287,"byte_end":12036296,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12036494,"byte_end":12036503,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12036631,"byte_end":12036640,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12036814,"byte_end":12036823,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12036934,"byte_end":12036945,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12037405,"byte_end":12037416,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":389},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":12037563,"byte_end":12037574,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":389},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/deferred.rs","byte_start":12048321,"byte_end":12048329,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":422},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/deferred.rs","byte_start":12048453,"byte_end":12048461,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/epoch.rs","byte_start":12052546,"byte_end":12052551,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/epoch.rs","byte_start":12054355,"byte_end":12054366,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12058299,"byte_end":12058304,"line_start":75,"line_end":75,"column_start":6,"column_end":11},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12072050,"byte_end":12072055,"line_start":408,"line_end":408,"column_start":15,"column_end":20},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":479},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12072225,"byte_end":12072230,"line_start":417,"line_end":417,"column_start":21,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":479},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":12075567,"byte_end":12075579,"line_start":515,"line_end":515,"column_start":26,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":504},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":12078735,"byte_end":12078738,"line_start":72,"line_end":72,"column_start":22,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":12078748,"byte_end":12078751,"line_start":74,"line_end":74,"column_start":6,"column_end":9},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":12079700,"byte_end":12079703,"line_start":109,"line_end":109,"column_start":18,"column_end":21},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":12079855,"byte_end":12079858,"line_start":118,"line_end":118,"column_start":15,"column_end":18},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":12080247,"byte_end":12080250,"line_start":130,"line_end":130,"column_start":21,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":12080657,"byte_end":12080666,"line_start":146,"line_end":146,"column_start":22,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":879},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":12080676,"byte_end":12080685,"line_start":148,"line_end":148,"column_start":6,"column_end":15},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":879},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":12081367,"byte_end":12081373,"line_start":169,"line_end":169,"column_start":6,"column_end":12},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":12086596,"byte_end":12086601,"line_start":311,"line_end":311,"column_start":6,"column_end":11},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":12095388,"byte_end":12095393,"line_start":538,"line_end":538,"column_start":27,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":624},"to":{"krate":0,"index":683}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/list.rs","byte_start":12101536,"byte_end":12101541,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":886},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/list.rs","byte_start":12101677,"byte_end":12101682,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/list.rs","byte_start":12102195,"byte_end":12102199,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/list.rs","byte_start":12104782,"byte_end":12104786,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":890},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/list.rs","byte_start":12105318,"byte_end":12105322,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":688},"to":{"krate":2,"index":8603}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/once_lock.rs","byte_start":12114150,"byte_end":12114158,"line_start":19,"line_end":19,"column_start":38,"column_end":46},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":736},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/once_lock.rs","byte_start":12114195,"byte_end":12114203,"line_start":20,"line_end":20,"column_start":31,"column_end":39},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":736},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/once_lock.rs","byte_start":12114219,"byte_end":12114227,"line_start":22,"line_end":22,"column_start":9,"column_end":17},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/once_lock.rs","byte_start":12116308,"byte_end":12116316,"line_start":96,"line_end":96,"column_start":18,"column_end":26},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":736},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/queue.rs","byte_start":12118194,"byte_end":12118199,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":907},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/queue.rs","byte_start":12118236,"byte_end":12118241,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":907},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/queue.rs","byte_start":12118257,"byte_end":12118262,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":907},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/itayeshkar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/queue.rs","byte_start":12124182,"byte_end":12124187,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":907},"to":{"krate":2,"index":3510}}]}